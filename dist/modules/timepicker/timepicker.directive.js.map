{"version":3,"sources":["../../../.srctemp/modules/timepicker/timepicker.directive.ts"],"names":[],"mappings":"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","file":"timepicker.directive.js","sourceRoot":"","sourcesContent":["import {\n  Directive,\n  Input,\n  OnInit,\n  OnDestroy,\n  forwardRef,\n  HostListener,\n  Renderer,\n  ElementRef,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nconst moment = require('moment');\nimport {\n  SkyTimepickerComponent\n} from './timepicker.component';\n\nimport {\n  ControlValueAccessor,\n  NG_VALUE_ACCESSOR,\n  Validator,\n  NG_VALIDATORS,\n  AbstractControl\n} from '@angular/forms';\n\nimport {\n  Subscription\n} from 'rxjs/Subscription';\nimport { SkyTimepickerTimeOutput } from './timepicker.interface';\n\n// tslint:disable:no-forward-ref no-use-before-declare\nconst SKY_TIMEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SkyTimepickerInputDirective),\n  multi: true\n};\n\nconst SKY_TIMEPICKER_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => SkyTimepickerInputDirective),\n  multi: true\n};\n// tslint:enable\n\nexport class SkyTimepickerInputDirective implements\n  OnInit, OnDestroy, ControlValueAccessor, Validator, OnChanges {\n\n  public pickerChangedSubscription: Subscription;\n\n  \n  public skyTimepickerInput: SkyTimepickerComponent;\n\n  \n  public timeFormat: string;\n\n  \n  public returnFormat: string;\n  private modelValue: SkyTimepickerTimeOutput;\n  public constructor(private renderer: Renderer, private elRef: ElementRef) {\n  }\n\n  public ngOnInit() {\n    this.renderer.setElementClass(this.elRef.nativeElement, 'sky-form-control', true);\n    this.pickerChangedSubscription =\n      this.skyTimepickerInput.selectedTimeChanged.subscribe((newTime: String) => {\n        this.writeValue(this.formatter(newTime));\n        this._onChange(newTime);\n      });\n  }\n  public ngOnDestroy() {\n    this.pickerChangedSubscription.unsubscribe();\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    this._validatorChange();\n    this.skyTimepickerInput.setFormat(this.timeFormat);\n    this.skyTimepickerInput.returnFormat = this.returnFormat;\n  }\n\n  \n  public onChange(event: any) {\n    let newValue = event.target.value;\n    this.modelValue = this.formatter(newValue);\n    this._validatorChange();\n    this._onChange(this.modelValue);\n    this.writeModelValue(this.modelValue);\n  }\n\n  \n  public onBlur /* istanbul ignore next */ () {\n    this._onTouched();\n  }\n\n  public registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n  public registerOnTouched(fn: () => any): void { this._onTouched = fn; }\n  public registerOnValidatorChange(fn: () => void): void { this._validatorChange = fn; }\n\n  public writeValue(value: any) {\n    this.modelValue = this.formatter(value);\n    this.writeModelValue(this.modelValue);\n  }\n  public validate(control: AbstractControl): { [key: string]: any } {\n    let value = control.value;\n    if (!value) {\n      return undefined;\n    }\n\n    /* istanbul ignore next */\n    if (value.local === 'Invalid date') {\n      return {\n        'skyTime': {\n          invalid: control.value\n        }\n      };\n    }\n\n    return undefined;\n  }\n  private writeModelValue(model: SkyTimepickerTimeOutput) {\n    let setElementValue: string;\n    if (model) {\n      /* istanbul ignore next */\n      if (moment(model).format(model.customFormat) === 'Invalid date') {\n        setElementValue = '';\n      } else {\n        setElementValue = moment(model).format(model.customFormat);\n      }\n      this.renderer.setElementProperty(this.elRef.nativeElement, 'value', setElementValue);\n    }\n    this.skyTimepickerInput.selectedTime = model;\n  }\n\n  private formatter(time: any) {\n    if (time && typeof time !== 'string' && 'local' in time) { return time; }\n    if (typeof time === 'string') {\n      let currentFormat: string;\n      let formatTime: SkyTimepickerTimeOutput;\n      if (this.timeFormat === 'hh') {\n        currentFormat = 'h:mm A';\n      }\n      if (this.timeFormat === 'HH') {\n        currentFormat = 'H:mm';\n      }\n      if (typeof this.returnFormat === 'undefined') { this.returnFormat = currentFormat; }\n      formatTime = {\n        'hour': moment(time, currentFormat).hour(),\n        'minute': moment(time, currentFormat).minute(),\n        'meridie': moment(time, currentFormat).format('A'),\n        'timezone': parseInt(moment(time, currentFormat).format('Z'), 10),\n        'iso8601': moment(time, currentFormat).toDate(),\n        'local': moment(time, currentFormat).format(currentFormat),\n        'customFormat': this.returnFormat\n      };\n      return formatTime;\n    }\n  }\n  /*istanbul ignore next */\n  private _onChange = (_: any) => { };\n  /*istanbul ignore next */\n  private _onTouched = () => { };\n  private _validatorChange = () => { };\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[skyTimepickerInput]',\n  providers: [\n    SKY_TIMEPICKER_VALUE_ACCESSOR,\n    SKY_TIMEPICKER_VALIDATOR\n  ]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'skyTimepickerInput': [{ type: Input },],\n'timeFormat': [{ type: Input },],\n'returnFormat': [{ type: Input },],\n'onChange': [{ type: HostListener, args: ['change', ['$event'], ] },],\n'onBlur': [{ type: HostListener, args: ['blur', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}