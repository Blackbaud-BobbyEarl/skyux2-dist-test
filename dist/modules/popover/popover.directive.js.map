{"version":3,"sources":["../../../.srctemp/modules/popover/popover.directive.ts"],"names":[],"mappings":"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","file":"popover.directive.js","sourceRoot":"","sourcesContent":["import {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges\n} from '@angular/core';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/fromEvent';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil';\n\nimport {\n  SkyWindowRefService\n} from '../window';\n\nimport {\n  SkyPopoverAlignment,\n  SkyPopoverPlacement,\n  SkyPopoverTrigger\n} from './types';\n\nimport { SkyPopoverComponent } from './popover.component';\n\n\nexport class SkyPopoverDirective implements OnChanges, OnDestroy {\n  \n  public skyPopover: SkyPopoverComponent;\n\n  \n  public skyPopoverAlignment: SkyPopoverAlignment;\n\n  \n  public skyPopoverPlacement: SkyPopoverPlacement;\n\n  \n  public skyPopoverTrigger: SkyPopoverTrigger = 'click';\n\n  private idled = new Subject<boolean>();\n\n  constructor(\n    private elementRef: ElementRef,\n    private windowRef: SkyWindowRefService\n  ) { }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    /* istanbul ignore else */\n    if (changes.skyPopover) {\n      this.removeEventListeners();\n      if (changes.skyPopover.currentValue !== undefined) {\n        this.addEventListeners();\n      }\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.removeEventListeners();\n  }\n\n  public togglePopover() {\n    if (this.isPopoverOpen()) {\n      this.closePopover();\n      return;\n    }\n\n    this.positionPopover();\n  }\n\n  private positionPopover() {\n    this.skyPopover.positionNextTo(\n      this.elementRef,\n      this.skyPopoverPlacement,\n      this.skyPopoverAlignment\n    );\n  }\n\n  private closePopover() {\n    this.skyPopover.close();\n  }\n\n  private isPopoverOpen(): boolean {\n    return (this.skyPopover && this.skyPopover.isOpen);\n  }\n\n  private addEventListeners() {\n    const element = this.elementRef.nativeElement;\n\n    Observable\n      .fromEvent(element, 'keyup')\n      .takeUntil(this.idled)\n      .subscribe((event: KeyboardEvent) => {\n        const key = event.key.toLowerCase();\n        if (key === 'escape' && this.isPopoverOpen()) {\n          event.stopPropagation();\n          event.preventDefault();\n          this.closePopover();\n          this.elementRef.nativeElement.focus();\n        }\n      });\n\n    Observable\n      .fromEvent(element, 'click')\n      .takeUntil(this.idled)\n      .subscribe((event: any) => {\n        this.togglePopover();\n      });\n\n    Observable\n      .fromEvent(element, 'mouseenter')\n      .takeUntil(this.idled)\n      .subscribe((event: MouseEvent) => {\n        this.skyPopover.isMouseEnter = true;\n        if (this.skyPopoverTrigger === 'mouseenter') {\n          event.preventDefault();\n          this.positionPopover();\n        }\n      });\n\n    Observable\n      .fromEvent(element, 'mouseleave')\n      .takeUntil(this.idled)\n      .subscribe((event: MouseEvent) => {\n        this.skyPopover.isMouseEnter = false;\n\n        if (this.skyPopoverTrigger === 'mouseenter') {\n          event.preventDefault();\n\n          // Give the popover a chance to set its isMouseEnter flag before checking to see\n          // if it should be closed.\n          this.windowRef.getWindow().setTimeout(() => {\n            if (this.isPopoverOpen()) {\n              if (this.skyPopover.isMouseEnter) {\n                this.skyPopover.markForCloseOnMouseLeave();\n              } else {\n                this.closePopover();\n              }\n            }\n          });\n        }\n      });\n  }\n\n  private removeEventListeners() {\n    this.idled.next(true);\n    this.idled.unsubscribe();\n    this.idled = new Subject<boolean>();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[skyPopover]'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: SkyWindowRefService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'skyPopover': [{ type: Input },],\n'skyPopoverAlignment': [{ type: Input },],\n'skyPopoverPlacement': [{ type: Input },],\n'skyPopoverTrigger': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}