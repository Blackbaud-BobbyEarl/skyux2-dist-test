{"version":3,"sources":["../../../.srctemp/modules/modal/modal.service.ts"],"names":[],"mappings":"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","file":"modal.service.js","sourceRoot":"","sourcesContent":["import {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  Injectable\n} from '@angular/core';\n\nimport { SkyModalInstance } from './modal-instance';\nimport { SkyModalHostComponent } from './modal-host.component';\nimport { SkyModalAdapterService } from './modal-adapter.service';\nimport { SkyModalConfigurationInterface as IConfig } from './modal.interface';\n\n\nexport class SkyModalService {\n  private static hostComponent: SkyModalHostComponent;\n  constructor(\n    private resolver: ComponentFactoryResolver,\n    private appRef: ApplicationRef,\n    private adapter: SkyModalAdapterService\n  ) {\n    /*\n      This timeout is needed because you can run into errors like 'ApplicationRef.tick is called\n      recursively' when the modal service is injected into a component hidden by an *ngIf.\n    */\n    setTimeout(() => {\n      this.createHostComponent();\n    });\n  }\n\n  // Open Overloads\n  public open(component: any, providers?: any[]): SkyModalInstance;\n  public open(component: any, config?: IConfig): SkyModalInstance;\n\n  // Open Method\n  public open(): SkyModalInstance {\n    let modalInstance = new SkyModalInstance();\n    this.createHostComponent();\n    let providersOrConfig: IConfig = arguments[1];\n    let params = this.getConfigFromParameter(providersOrConfig);\n    let component = arguments[0];\n\n    params.providers.push({\n      provide: SkyModalInstance,\n      useValue: modalInstance\n    });\n\n    SkyModalService.hostComponent.open(modalInstance, component, params);\n\n    return modalInstance;\n  }\n\n  public dispose() {\n    /* istanbul ignore else */\n    /* sanity check */\n    if (SkyModalService.hostComponent) {\n      SkyModalService.hostComponent = undefined;\n      this.adapter.removeHostEl();\n    }\n  }\n\n  private getConfigFromParameter(providersOrConfig: any) {\n    let defaultParams: IConfig = {\n      'providers': [],\n      'fullPage': false,\n      'size': 'medium',\n      'tiledBody': false\n    };\n    let params: any = undefined;\n    let method: any = undefined;\n\n    // Object Literal Lookup for backwards compatability.\n    method = {\n      'providers?': Object.assign({}, defaultParams, { 'providers': providersOrConfig }),\n      'config': Object.assign({}, defaultParams, providersOrConfig)\n    };\n\n    if (Array.isArray(providersOrConfig) === true) {\n      params = method['providers?'];\n    } else {\n      params = method['config'];\n    }\n\n    return params;\n  }\n\n  private createHostComponent() {\n    if (!SkyModalService.hostComponent) {\n      let factory = this.resolver.resolveComponentFactory(SkyModalHostComponent);\n\n      this.adapter.addHostEl();\n\n      let cmpRef = this.appRef.bootstrap(factory);\n\n      SkyModalService.hostComponent = cmpRef.instance;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ComponentFactoryResolver, },\n{type: ApplicationRef, },\n{type: SkyModalAdapterService, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}