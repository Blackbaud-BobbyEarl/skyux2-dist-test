{"version":3,"sources":["../../../.srctemp/modules/modal/modal-adapter.service.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,UAAU,EACX,MAAM,eAAA,CAAgB;AAEvB,OAAO,EAAE,mBAAA,EAAoB,MAAO,WAAA,CAAY;AAGhD;IAOE,gCACU,SAA8B;QAA9B,cAAS,GAAT,SAAS,CAAqB;QACpC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC;QAClD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC;IAC3D,CAAC;IAEM,0CAAS,GAAhB;QACE,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC;IACvE,CAAC;IAEM,6CAAY,GAAnB;QACE,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC;IACvE,CAAC;IAEM,yDAAwB,GAA/B,UAAgC,SAAkB;QAChD,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,qBAAqB,CAAC,CAAC;QACpE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,mBAAmB,CAAC,sBAAsB,CAAC,qBAAqB,CAAC,CAAC;QACzE,CAAC;IACH,CAAC;IAEM,8CAAa,GAApB,UAAqB,KAAc;QACjC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACV,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,CAAC;QAC/D,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,mBAAmB,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,CAAC;QACpE,CAAC;IACH,CAAC;IAEM,+CAAc,GAArB;QACE,MAAM,CAAc,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;IAChD,CAAC;IAEO,+CAAc,GAAtB,UAAuB,SAAiB;QACtC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC;IAEO,oDAAmB,GAA3B,UAA4B,SAAiB;QAC3C,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IAC1C,CAAC;IAQH,6BAAC;AAAD,CAvDA,AAuDC;;AAtDyB,4CAAqB,GAAG,0BAA0B,CAAC;AACnD,uCAAgB,GAAG,qBAAqB,CAAC;AA8C5D,iCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,qCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,mBAAmB,GAAG;CAC5B,EAF6F,CAE7F,CAAC","file":"modal-adapter.service.js","sourceRoot":"","sourcesContent":["import {\n  Injectable\n} from '@angular/core';\n\nimport { SkyWindowRefService } from '../window';\n\n\nexport class SkyModalAdapterService {\n  private static readonly MODAL_BODY_FULL_CLASS = 'sky-modal-body-full-page';\n  private static readonly MODAL_BODY_CLASS = 'sky-modal-body-open';\n\n  private docRef: any;\n  private bodyEl: HTMLElement;\n\n  constructor(\n    private windowRef: SkyWindowRefService) {\n      this.docRef = this.windowRef.getWindow().document;\n      this.bodyEl = this.windowRef.getWindow().document.body;\n  }\n\n  public addHostEl(): void {\n    this.bodyEl.appendChild(this.docRef.createElement('sky-modal-host'));\n  }\n\n  public removeHostEl(): void {\n    this.bodyEl.removeChild(this.docRef.querySelector('sky-modal-host'));\n  }\n\n  public toggleFullPageModalClass(isAddFull: boolean): void {\n    if (isAddFull) {\n      this.addClassToBody(SkyModalAdapterService.MODAL_BODY_FULL_CLASS);\n    } else {\n      this.removeClassFromBody(SkyModalAdapterService.MODAL_BODY_FULL_CLASS);\n    }\n  }\n\n  public setPageScroll(isAdd: boolean): void {\n    if (isAdd) {\n      this.addClassToBody(SkyModalAdapterService.MODAL_BODY_CLASS);\n    } else {\n      this.removeClassFromBody(SkyModalAdapterService.MODAL_BODY_CLASS);\n    }\n  }\n\n  public getModalOpener(): HTMLElement {\n    return <HTMLElement>this.docRef.activeElement;\n  }\n\n  private addClassToBody(className: string): void {\n    this.bodyEl.classList.add(className);\n  }\n\n  private removeClassFromBody(className: string): void {\n    this.bodyEl.classList.remove(className);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SkyWindowRefService, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}