{"version":3,"sources":["../../../../.srctemp/modules/list/state/list-state.rxstate.ts"],"names":[],"mappings":"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","file":"list-state.rxstate.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  StateDispatcher,\n  StateOrchestrator\n} from 'microedge-rxstate/dist';\nimport { ListStateAction } from './list-state-action.type';\n\nimport { ListViewsSetActiveAction } from './views/actions';\n\nimport {\n  ListToolbarItemsLoadAction,\n  ListToolbarItemsRemoveAction,\n  ListToolbarSetExistsAction\n} from './toolbar/actions';\n\nimport { ListToolbarItemModel } from './toolbar/toolbar-item.model';\n\nimport {\n  ListSearchSetFunctionsAction,\n  ListSearchSetSearchTextAction,\n  ListSearchSetFieldSelectorsAction,\n  ListSearchSetOptionsAction\n} from './search/actions';\n\nimport {\n  ListSortSetAvailableAction,\n  ListSortSetFieldSelectorsAction,\n  ListSortSetGlobalAction\n} from './sort/actions';\nimport { ListSortLabelModel } from './sort/label.model';\nimport { ListSortFieldSelectorModel } from './sort/field-selector.model';\nimport { ListFilterModel } from './filters/filter.model';\nimport { ListSearchModel } from './search/search.model';\nimport {\n  ListFiltersUpdateAction\n} from './filters/actions';\n\nexport class ListStateOrchestrator<T> extends StateOrchestrator<T, ListStateAction> {\n}\n\n\nexport class ListStateDispatcher extends StateDispatcher<ListStateAction> {\n\n  public viewsSetActive(id: string) {\n    this.next(new ListViewsSetActiveAction(id));\n  }\n\n  public toolbarExists(exists: boolean): void {\n    this.next(new ListToolbarSetExistsAction(exists));\n  }\n\n  public toolbarAddItems(items: ListToolbarItemModel[], index: number = -1): void {\n    this.next(new ListToolbarItemsLoadAction(items, index));\n  }\n\n  public toolbarRemoveItems(ids: string[]): void {\n    this.next(new ListToolbarItemsRemoveAction(ids));\n  }\n\n  public searchSetFunctions(sortFunctions: ((data: any, searchText: string) => boolean)[]): void {\n    this.next(new ListSearchSetFunctionsAction(sortFunctions));\n  }\n\n  public searchSetFieldSelectors(fieldSelectors: Array<string>): void {\n    this.next(new ListSearchSetFieldSelectorsAction(fieldSelectors));\n  }\n\n  public searchSetText(searchText: string) {\n    this.next(new ListSearchSetSearchTextAction(searchText));\n  }\n\n  public searchSetOptions(searchOptions: ListSearchModel) {\n    this.next(new ListSearchSetOptionsAction(\n      new ListSearchSetSearchTextAction(searchOptions.searchText),\n      new ListSearchSetFieldSelectorsAction(searchOptions.fieldSelectors),\n      new ListSearchSetFunctionsAction(searchOptions.functions)\n    ));\n  }\n\n  public sortSetAvailable(sortLabels: ListSortLabelModel[]): void {\n    this.next(new ListSortSetAvailableAction(sortLabels));\n  }\n\n  public sortSetFieldSelectors(fieldSelectors: ListSortFieldSelectorModel[]): void {\n    this.next(new ListSortSetFieldSelectorsAction(fieldSelectors));\n  }\n\n  public sortSetGlobal(sortLabels: ListSortLabelModel[]): void {\n    this.next(new ListSortSetGlobalAction(sortLabels));\n  }\n\n  public filtersUpdate(filters: ListFilterModel[]): void {\n    this.next(new ListFiltersUpdateAction(filters));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}