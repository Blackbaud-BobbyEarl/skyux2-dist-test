{"version":3,"sources":["../../../.srctemp/modules/datepicker/datepicker-calendar-inner.component.ts"],"names":[],"mappings":"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","file":"datepicker-calendar-inner.component.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\n\nimport { SkyDateFormatter } from './date-formatter';\n\nimport {\n  SkyDatepickerDate\n} from './datepicker-date';\n\nlet nextDatepickerId = 0;\n\n\nexport class SkyDatepickerCalendarInnerComponent implements OnInit, OnChanges {\n  \n  public startingDay: number;\n\n  \n  public minDate: Date;\n\n  \n  public maxDate: Date;\n\n  \n  public selectedDate: Date;\n\n  \n  public selectedDateChange: EventEmitter<Date> = new EventEmitter<Date>(undefined);\n\n  \n  public calendarModeChange: EventEmitter<string> = new EventEmitter<string>();\n\n  public activeDate: Date;\n\n  public minMode: string = 'day';\n  public maxMode: string = 'year';\n  public monthColLimit: number = 3;\n  public yearColLimit: number = 5;\n  public datepickerMode: string = 'day';\n  public yearRange: number = 20;\n\n  public formatDay: string = 'DD';\n  public formatMonth: string = 'MMMM';\n  public formatYear: string = 'YYYY';\n  public formatDayHeader: string = 'dd';\n  public formatDayTitle: string = 'MMMM YYYY';\n  public formatMonthTitle: string = 'YYYY';\n\n  public datepickerId: string = `sky-datepicker-${++nextDatepickerId}`;\n\n  public stepDay: any = {};\n  public stepMonth: any = {};\n  public stepYear: any = {};\n\n  protected modes: string[] = ['day', 'month', 'year'];\n  protected dateFormatter: SkyDateFormatter = new SkyDateFormatter();\n  protected activeDateId: string;\n\n  public refreshViewHandlerDay: Function;\n  public compareHandlerDay: Function;\n  public refreshViewHandlerMonth: Function;\n  public compareHandlerMonth: Function;\n  public refreshViewHandlerYear: Function;\n  public compareHandlerYear: Function;\n\n  public handleKeydownDay: Function;\n  public handleKeydownMonth: Function;\n  public handleKeydownYear: Function;\n\n  public keys: any = {\n    13: 'enter',\n    32: 'space',\n    33: 'pageup',\n    34: 'pagedown',\n    35: 'end',\n    36: 'home',\n    37: 'left',\n    38: 'up',\n    39: 'right',\n    40: 'down'\n  };\n\n  public ngOnInit(): void {\n\n    if (this.selectedDate) {\n      this.activeDate = new Date(this.selectedDate);\n    } else {\n      this.activeDate = new Date();\n    }\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    this.refreshView();\n  }\n\n  public setCompareHandler(handler: Function, type: string): void {\n    if (type === 'day') {\n      this.compareHandlerDay = handler;\n    }\n\n    if (type === 'month') {\n      this.compareHandlerMonth = handler;\n    }\n\n    if (type === 'year') {\n      this.compareHandlerYear = handler;\n    }\n  }\n\n  public compare(date1: Date, date2: Date) {\n    if (date1 === undefined || date2 === undefined) {\n      return undefined;\n    }\n\n    if (this.datepickerMode === 'day' && this.compareHandlerDay) {\n      return this.compareHandlerDay(date1, date2);\n    }\n\n    if (this.datepickerMode === 'month' && this.compareHandlerMonth) {\n      return this.compareHandlerMonth(date1, date2);\n    }\n\n    /* istanbul ignore else */\n    /* sanity check */\n    if (this.datepickerMode === 'year' && this.compareHandlerYear) {\n      return this.compareHandlerYear(date1, date2);\n    }\n\n  }\n\n  public setRefreshViewHandler(handler: Function, type: string): void {\n    if (type === 'day') {\n      this.refreshViewHandlerDay = handler;\n    }\n\n    if (type === 'month') {\n      this.refreshViewHandlerMonth = handler;\n    }\n\n    if (type === 'year') {\n      this.refreshViewHandlerYear = handler;\n    }\n  }\n\n  public refreshView(): void {\n    if (this.datepickerMode === 'day' && this.refreshViewHandlerDay) {\n      this.refreshViewHandlerDay();\n    }\n\n    if (this.datepickerMode === 'month' && this.refreshViewHandlerMonth) {\n      this.refreshViewHandlerMonth();\n    }\n\n    if (this.datepickerMode === 'year' && this.refreshViewHandlerYear) {\n      this.refreshViewHandlerYear();\n    }\n  }\n\n  public setKeydownHandler(handler: Function, type: string) {\n    if (type === 'day') {\n      this.handleKeydownDay = handler;\n    }\n\n    if (type === 'month') {\n      this.handleKeydownMonth = handler;\n    }\n\n    if (type === 'year') {\n      this.handleKeydownYear = handler;\n    }\n  }\n\n  public handleKeydown(key: string, event: KeyboardEvent): void {\n    if (this.datepickerMode === 'day' && this.handleKeydownDay) {\n      this.handleKeydownDay(key, event);\n    }\n\n    if (this.datepickerMode === 'month' && this.handleKeydownMonth) {\n      this.handleKeydownMonth(key, event);\n    }\n\n    if (this.datepickerMode === 'year' && this.handleKeydownYear) {\n      this.handleKeydownYear(key, event);\n    }\n  }\n\n  public dateFilter(date: Date, format: string): string {\n    return this.dateFormatter.format(date, format);\n  }\n\n  public isActive(dateObject: any): boolean {\n    if (this.compare(dateObject.date, this.activeDate) === 0) {\n      this.activeDateId = dateObject.uid;\n      return true;\n    }\n\n    return false;\n  }\n\n  public onKeydown(event: KeyboardEvent) {\n    let key = this.keys[event.which];\n\n    if (!key || event.shiftKey || event.altKey) {\n      return;\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (key === 'enter' || key === 'space') {\n      if (this.isDisabled(this.activeDate)) {\n        return;\n      }\n      this.select(this.activeDate);\n    } else if (event.ctrlKey && (key === 'up' || key === 'down')) {\n      this.toggleMode(key === 'up' ? 1 : -1);\n    } else {\n      this.handleKeydown(key, event);\n      this.refreshView();\n    }\n  }\n\n  public createDateObject(\n    date: Date,\n    format: string,\n    isSecondary: boolean,\n    id: string): SkyDatepickerDate {\n\n    let dateObject: SkyDatepickerDate = {\n      date: new Date(date.getFullYear(), date.getMonth(), date.getDate()),\n      label: this.dateFilter(date, format),\n      selected: this.compare(date, this.selectedDate) === 0,\n      disabled: this.isDisabled(date),\n      current: this.compare(date, new Date()) === 0,\n      secondary: isSecondary,\n      uid: id\n    };\n\n    return dateObject;\n  }\n\n  public createCalendarRows(\n    dates: Array<SkyDatepickerDate>,\n    size: number): Array<Array<SkyDatepickerDate>> {\n\n    let rows: Array<Array<SkyDatepickerDate>> = [];\n    while (dates.length > 0) {\n      rows.push(dates.splice(0, size));\n    }\n    return rows;\n  }\n\n  /*\n    This is ensures that no strangeness happens when converting a date to local time.\n  */\n  public fixTimeZone(date: Date): Date {\n    let newDate = new Date(date);\n    newDate.setFullYear(\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate());\n\n    return newDate;\n  }\n\n  public selectCalendar(event: Event, date: Date, closePicker: boolean = false) {\n    if (!closePicker) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    this.select(date);\n  }\n\n  public select(date: Date, isManual: boolean = true): void {\n\n    this.activeDate = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n\n    /*\n        Only actually select date if in minmode (day picker mode).\n        Otherwise, just change the active view for the datepicker.\n    */\n    if (this.datepickerMode === this.minMode) {\n      this.selectedDate = new Date(this.activeDate);\n      if (isManual) {\n        this.selectedDateChange.emit(this.selectedDate);\n      }\n\n    } else {\n      this.datepickerMode = this.modes[this.modes.indexOf(this.datepickerMode) - 1];\n      this.calendarModeChange.emit(this.datepickerMode);\n    }\n\n    this.refreshView();\n  }\n\n  public moveCalendar(event: Event, direction: number) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.move(direction);\n  }\n\n  public move(direction: number): void {\n\n    let expectedStep: any;\n    if (this.datepickerMode === 'day') {\n      expectedStep = this.stepDay;\n    }\n\n    if (this.datepickerMode === 'month') {\n      expectedStep = this.stepMonth;\n    }\n\n    if (this.datepickerMode === 'year') {\n      expectedStep = this.stepYear;\n    }\n\n    /* istanbul ignore else */\n    /* sanity check */\n    if (expectedStep) {\n      let year = this.activeDate.getFullYear() + (direction * (expectedStep.years || 0));\n      let month = this.activeDate.getMonth() + (direction * (expectedStep.months || 0));\n\n      this.activeDate = new Date(year, month, 1);\n\n      this.refreshView();\n    }\n  }\n\n  public toggleModeCalendar(event: Event, direction: number) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.toggleMode(direction);\n  }\n\n  public toggleMode(direction: number): void {\n    direction = direction || 1;\n\n    /* istanbul ignore else */\n    /* sanity check */\n    if (!(direction === 1 && this.datepickerMode === this.maxMode) &&\n      !(this.datepickerMode === this.minMode && direction === -1)) {\n      this.datepickerMode = this.modes[this.modes.indexOf(this.datepickerMode) + direction];\n      this.calendarModeChange.emit(this.datepickerMode);\n      this.refreshView();\n    }\n  }\n\n  protected isDisabled(date: Date): boolean {\n\n    return ((this.minDate && this.compare(date, this.minDate) < 0)\n      || (this.maxDate && this.compare(date, this.maxDate) > 0));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sky-datepicker-inner',\n  template: `<div\n  *ngIf=\"datepickerMode\"\n  class=\"sky-datepicker-calendar-inner\"\n  (keydown)=\"onKeydown($event)\">\n  <ng-content></ng-content>\n</div>\n`,\n  styles: [`.sky-datepicker-calendar-inner {\n  border-radius: 5px;\n  background-color: #ffffff;\n  border-top: 1px solid #e2e3e4;\n  border-bottom: 1px solid #e2e3e4;\n  border-left: 1px solid #e2e3e4;\n  border-right: 1px solid #e2e3e4;\n}\n\n.sky-datepicker-calendar-inner /deep/ .sky-btn-default {\n  border-color: #ffffff;\n}\n\n.sky-datepicker-calendar-inner /deep/ .sky-btn-default:hover, .sky-datepicker-calendar-inner /deep/ .sky-btn-active {\n  border-color: #c2c4c6;\n}\n\n.sky-datepicker-calendar-inner /deep/ .sky-datepicker-center {\n  text-align: center;\n}\n\n.sky-datepicker-calendar-inner /deep/ .sky-datepicker-btn-selected {\n  color: #ffffff;\n  background-color: #007ca6;\n  border-top: 1px solid #cdcfd2;\n  border-bottom: 1px solid #cdcfd2;\n  border-left: 1px solid #cdcfd2;\n  border-right: 1px solid #cdcfd2;\n}\n\n.sky-datepicker-calendar-inner /deep/ .sky-datepicker-secondary {\n  color: #686c73;\n}\n\n.sky-datepicker-calendar-inner /deep/ .sky-datepicker-btn-date {\n  min-width: 100%;\n}\n\n.sky-datepicker-calendar-inner /deep/ .sky-datepicker-calendar-title {\n  width: 100%;\n}\n`]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'startingDay': [{ type: Input },],\n'minDate': [{ type: Input },],\n'maxDate': [{ type: Input },],\n'selectedDate': [{ type: Input },],\n'selectedDateChange': [{ type: Output },],\n'calendarModeChange': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}