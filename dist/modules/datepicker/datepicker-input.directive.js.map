{"version":3,"sources":["../../../.srctemp/modules/datepicker/datepicker-input.directive.ts"],"names":[],"mappings":"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","file":"datepicker-input.directive.js","sourceRoot":"","sourcesContent":["import {\n  Directive,\n  Input,\n  OnInit,\n  OnDestroy,\n  forwardRef,\n  HostListener,\n  Renderer,\n  ElementRef,\n  SimpleChanges,\n  OnChanges\n} from '@angular/core';\n\nimport {\n  SkyDatepickerComponent\n} from './datepicker.component';\n\nimport {\n  ControlValueAccessor,\n  NG_VALUE_ACCESSOR,\n  Validator,\n  NG_VALIDATORS,\n  AbstractControl\n} from '@angular/forms';\n\nimport {\n  Subscription\n} from 'rxjs/Subscription';\n\nimport {\n  SkyDateFormatter\n} from './date-formatter';\n\nimport {\n  SkyDatepickerConfigService\n} from './datepicker-config.service';\n\n// tslint:disable:no-forward-ref no-use-before-declare\nconst SKY_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SkyDatepickerInputDirective),\n  multi: true\n};\n\nconst SKY_DATEPICKER_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => SkyDatepickerInputDirective),\n  multi: true\n};\n// tslint:enable\n\n\nexport class SkyDatepickerInputDirective implements\n  OnInit, OnDestroy, ControlValueAccessor, Validator, OnChanges {\n\n  public pickerChangedSubscription: Subscription;\n\n  \n  public skyDatepickerInput: SkyDatepickerComponent;\n\n  \n  public dateFormat: string;\n\n  \n  public skyDatepickerNoValidate: boolean = false;\n\n  \n  public minDate: Date;\n\n  \n  public maxDate: Date;\n\n  private dateFormatter = new SkyDateFormatter();\n\n  private modelValue: Date;\n\n  public constructor(\n    private renderer: Renderer,\n    private elRef: ElementRef,\n    private config: SkyDatepickerConfigService) {\n    this.configureOptions();\n  }\n\n  public configureOptions(): void {\n    Object.assign(this, this.config);\n  }\n\n  public ngOnInit() {\n    this.renderer.setElementClass(this.elRef.nativeElement, 'sky-form-control', true);\n    this.pickerChangedSubscription =\n      this.skyDatepickerInput.dateChanged.subscribe((newDate: Date) => {\n        this.writeValue(newDate);\n        this._onChange(newDate);\n      });\n  }\n\n  public ngOnDestroy() {\n    /* istanbul ignore else */\n    /* sanity check */\n    if (this.pickerChangedSubscription) {\n      this.pickerChangedSubscription.unsubscribe();\n    }\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (changes['minDate']) {\n      this._validatorChange();\n      this.skyDatepickerInput.setMinDate(this.minDate);\n    }\n\n    if (changes['maxDate']) {\n      this._validatorChange();\n      this.skyDatepickerInput.setMaxDate(this.maxDate);\n    }\n  }\n\n  \n  public onChange(event: any) {\n    let newValue = event.target.value;\n    // need to parse date here:\n    this.modelValue = this.dateFormatter.getDateFromString(newValue, this.dateFormat);\n    if (this.dateFormatter.dateIsValid(this.modelValue)) {\n      this._onChange(this.modelValue);\n      this.writeModelValue(this.modelValue);\n    } else {\n      this._onChange(newValue);\n    }\n  }\n\n  \n  public onBlur() {\n    this._onTouched();\n  }\n\n  public registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n\n  public registerOnTouched(fn: () => any): void { this._onTouched = fn; }\n\n  public registerOnValidatorChange(fn: () => void): void { this._validatorChange = fn; }\n\n  public writeValue(value: any) {\n\n    if (value && this.dateFormatter.dateIsValid(value)) {\n      this.modelValue = value;\n    } else if (value) {\n      this.modelValue = this.dateFormatter.getDateFromString(value, this.dateFormat);\n      if (value !== this.modelValue && this.dateFormatter.dateIsValid(this.modelValue)) {\n        this._onChange(this.modelValue);\n      }\n    }\n\n    if (this.dateFormatter.dateIsValid(this.modelValue)) {\n      this.writeModelValue(this.modelValue);\n    } else if (value) {\n      this.renderer.setElementProperty(\n        this.elRef.nativeElement,\n        'value',\n        value);\n    }\n  }\n\n  public validate(control: AbstractControl): {[key: string]: any} {\n    let value = control.value;\n\n    if (!value) {\n      return undefined;\n    }\n\n    let dateValue = this.dateFormatter.getDateFromString(value, this.dateFormat);\n\n    if (!this.dateFormatter.dateIsValid(dateValue) && !this.skyDatepickerNoValidate) {\n      return {\n        'skyDate': {\n          invalid: control.value\n        }\n      };\n    }\n\n    if (this.minDate &&\n      this.dateFormatter.dateIsValid(this.minDate) &&\n      this.dateFormatter.dateIsValid(value) &&\n      value < this.minDate) {\n\n      return {\n        'skyDate': {\n          minDate: this.minDate\n        }\n      };\n    }\n\n    if (this.maxDate &&\n      this.dateFormatter.dateIsValid(this.maxDate) &&\n      this.dateFormatter.dateIsValid(value) &&\n      value > this.maxDate) {\n        return {\n          'skyDate': {\n            maxDate: this.maxDate\n          }\n        };\n      }\n\n    return undefined;\n  }\n\n  private writeModelValue(model: Date) {\n\n    this.renderer.setElementProperty(\n      this.elRef.nativeElement,\n      'value',\n      this.dateFormatter.format(model, this.dateFormat));\n\n    this.skyDatepickerInput.setSelectedDate(model);\n  }\n  /*istanbul ignore next */\n  private _onChange = (_: any) => {};\n  /*istanbul ignore next */\n  private _onTouched = () => {};\n  private _validatorChange = () => {};\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[skyDatepickerInput]',\n  providers: [\n    SKY_DATEPICKER_VALUE_ACCESSOR,\n    SKY_DATEPICKER_VALIDATOR\n  ]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer, },\n{type: ElementRef, },\n{type: SkyDatepickerConfigService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'skyDatepickerInput': [{ type: Input },],\n'dateFormat': [{ type: Input },],\n'skyDatepickerNoValidate': [{ type: Input },],\n'minDate': [{ type: Input },],\n'maxDate': [{ type: Input },],\n'onChange': [{ type: HostListener, args: ['change', ['$event'], ] },],\n'onBlur': [{ type: HostListener, args: ['blur', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}