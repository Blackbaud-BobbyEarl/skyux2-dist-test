{"version":3,"sources":["../../../.srctemp/modules/dropdown/dropdown.component.ts"],"names":[],"mappings":"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","file":"dropdown.component.js","sourceRoot":"","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild\n} from '@angular/core';\n\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil';\n\nimport {\n  SkyPopoverAlignment,\n  SkyPopoverComponent,\n  SkyPopoverTrigger\n} from '../popover';\n\nimport {\n  SkyResources\n} from '../resources';\n\nimport {\n  SkyWindowRefService\n} from '../window';\n\nimport {\n  SkyDropdownMessage,\n  SkyDropdownMessageType,\n  SkyDropdownTriggerType\n} from './types';\n\n\nexport class SkyDropdownComponent implements OnInit, OnDestroy {\n  \n  public alignment: SkyPopoverAlignment = 'left';\n\n  \n  public get buttonStyle(): string{\n    return this._buttonStyle || 'default';\n  }\n\n  public set buttonStyle(value: string) {\n    this._buttonStyle = value;\n  }\n\n  \n  public set buttonType(value: string) {\n    this._buttonType = value;\n  }\n\n  public get buttonType(): string {\n    return this._buttonType || 'select';\n  }\n\n  \n  public get label(): string{\n    return this._label || SkyResources.getString('context_menu_default_label');\n  }\n\n  public set label(value: string) {\n    this._label = value;\n  }\n\n  \n  public dismissOnBlur = true;\n\n  \n  public messageStream = new Subject<SkyDropdownMessage>();\n\n  \n  public title: string;\n\n  \n  public set trigger(value: SkyDropdownTriggerType) {\n    this._trigger = value;\n  }\n\n  public get trigger(): SkyDropdownTriggerType {\n    return this._trigger || 'click';\n  }\n\n  \n  private triggerButton: ElementRef;\n\n  \n  private popover: SkyPopoverComponent;\n\n  private ngUnsubscribe = new Subject();\n  private isKeyboardActive = false;\n  private isOpen = false;\n\n  private _buttonType: string;\n  private _buttonStyle: string;\n  private _label: string;\n  private _trigger: SkyDropdownTriggerType;\n\n  constructor(\n    private windowRef: SkyWindowRefService\n  ) { }\n\n  public ngOnInit() {\n    this.messageStream\n      .takeUntil(this.ngUnsubscribe)\n      .subscribe((message: SkyDropdownMessage) => {\n        this.handleIncomingMessages(message);\n      });\n  }\n\n  public ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n\n  \n  public onKeyDown(event: KeyboardEvent) {\n    const key = event.key.toLowerCase();\n\n    if (this.isOpen) {\n      /* tslint:disable-next-line:switch-default */\n      switch (key) {\n        // After an item is selected with the enter key,\n        // wait a moment before returning focus to the dropdown trigger element.\n        case 'enter':\n        this.windowRef.getWindow().setTimeout(() => {\n          this.sendMessage(SkyDropdownMessageType.FocusTriggerButton);\n        });\n        break;\n\n        // Allow the menu to be opened with the arrowdown key\n        // if it is first opened with the mouse.\n        case 'down':\n        case 'arrowdown':\n        if (!this.isKeyboardActive) {\n          this.isKeyboardActive = true;\n          this.sendMessage(SkyDropdownMessageType.FocusFirstItem);\n          event.preventDefault();\n        }\n        break;\n      }\n\n      return;\n    }\n\n    /* tslint:disable-next-line:switch-default */\n    switch (key) {\n      case 'enter':\n      this.isKeyboardActive = true;\n      break;\n\n      case 'down':\n      case 'arrowdown':\n      this.isKeyboardActive = true;\n      this.sendMessage(SkyDropdownMessageType.Open);\n      event.preventDefault();\n      break;\n    }\n  }\n\n  public onPopoverOpened() {\n    this.isOpen = true;\n    // Focus the first item if the menu was opened with the keyboard.\n    if (this.isKeyboardActive) {\n      this.sendMessage(SkyDropdownMessageType.FocusFirstItem);\n    }\n  }\n\n  public onPopoverClosed() {\n    this.isOpen = false;\n    this.isKeyboardActive = false;\n  }\n\n  public getPopoverTriggerType(): SkyPopoverTrigger {\n    // Map the dropdown trigger type to the popover trigger type.\n    return (this.trigger === 'click') ? 'click' : 'mouseenter';\n  }\n\n  private handleIncomingMessages(message: SkyDropdownMessage) {\n    /* tslint:disable-next-line:switch-default */\n    switch (message.type) {\n      case SkyDropdownMessageType.Open:\n      this.positionPopover();\n      break;\n\n      case SkyDropdownMessageType.Close:\n      this.popover.close();\n      break;\n\n      case SkyDropdownMessageType.Reposition:\n      // Only reposition the dropdown if it is already open.\n      if (this.isOpen) {\n        this.windowRef.getWindow().setTimeout(() => {\n          this.popover.reposition();\n        });\n      }\n      break;\n\n      case SkyDropdownMessageType.FocusTriggerButton:\n      this.triggerButton.nativeElement.focus();\n      break;\n    }\n  }\n\n  private sendMessage(type: SkyDropdownMessageType) {\n    this.messageStream.next({ type });\n  }\n\n  private positionPopover() {\n    this.popover.positionNextTo(\n      this.triggerButton,\n      'below',\n      this.alignment\n    );\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sky-dropdown',\n  template: `<div class=\"sky-dropdown\">\n  <button\n    type=\"button\"\n    class=\"sky-btn sky-dropdown-button\"\n    [ngClass]=\"[\n      'sky-dropdown-button-type-' + buttonType,\n      'sky-btn-' + buttonStyle\n    ]\"\n    [attr.aria-label]=\"label\"\n    [attr.title]=\"title\"\n    [skyPopover]=\"popover\"\n    [skyPopoverTrigger]=\"getPopoverTriggerType()\"\n    [skyPopoverAlignment]=\"alignment\"\n    skyPopoverPlacement=\"below\"\n    #triggerButton>\n\n    <div [ngSwitch]=\"buttonType\">\n      <ng-template ngSwitchCase=\"context-menu\">\n        <i class=\"fa fa-ellipsis-h\"></i>\n      </ng-template>\n\n      <ng-template ngSwitchDefault>\n        <div\n          class=\"sky-dropdown-button-container\"\n          *ngIf=\"buttonType === 'select' || buttonType === 'tab' || !buttonType\">\n          <div class=\"sky-dropdown-button-content-container\">\n            <ng-content\n              select=\"sky-dropdown-button\">\n            </ng-content>\n          </div>\n          <div class=\"sky-dropdown-button-icon-container\">\n            <i class=\"fa fa-caret-down sky-dropdown-caret\"></i>\n          </div>\n        </div>\n        <div\n          *ngIf=\"buttonType !== 'select' && buttonType !== 'tab' && buttonType\">\n          <i\n            class=\"fa fa-lg\"\n            [ngClass]=\"['fa-' + buttonType]\"></i>\n        </div>\n      </ng-template>\n    </div>\n  </button>\n  <sky-popover\n    placement=\"below\"\n    [alignment]=\"alignment\"\n    [dismissOnBlur]=\"dismissOnBlur\"\n    (popoverOpened)=\"onPopoverOpened()\"\n    (popoverClosed)=\"onPopoverClosed()\"\n    [@.disabled]=\"true\"\n    #popover>\n    <ng-content\n      select=\"sky-dropdown-menu\">\n    </ng-content>\n  </sky-popover>\n</div>\n`,\n  styles: [`.sky-dropdown ::ng-deep .sky-popover-container {\n  padding: 0;\n  min-width: auto;\n  max-width: none;\n}\n\n.sky-dropdown ::ng-deep .sky-popover-container .sky-popover {\n  border-radius: 0 !important;\n  border: 0 !important;\n}\n\n.sky-dropdown ::ng-deep .sky-popover-container .sky-popover-body {\n  padding: 0;\n}\n\n.sky-dropdown ::ng-deep .sky-popover-container .sky-popover-arrow {\n  display: none;\n}\n\n.sky-dropdown-button-type-tab {\n  background-color: transparent;\n  border: none;\n  border-radius: 4px 4px 0 0;\n  color: #686c73;\n  cursor: pointer;\n  display: inline-block;\n  font-weight: 600;\n  line-height: 1.8;\n  padding: 8px 16px;\n  background-color: #007ca6;\n  color: #fff;\n  max-width: 100%;\n}\n\n.sky-dropdown-button-type-tab:hover {\n  background-color: #eeeeef;\n  color: #282b31;\n  text-decoration: none;\n}\n\n.sky-dropdown-button-type-tab:hover {\n  background-color: #007ca6;\n  color: #fff;\n}\n\n.sky-dropdown-button-type-context-menu {\n  border-radius: 50%;\n  padding-bottom: 3px;\n  padding-left: 8px;\n  padding-right: 8px;\n  padding-top: 3px;\n}\n\n.sky-dropdown-caret {\n  margin-left: 10px;\n}\n\n.sky-dropdown-button-container {\n  display: flex;\n}\n\n.sky-dropdown-button-content-container {\n  flex-shrink: 1;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.sky-dropdown-button-icon-container {\n  flex-grow: 1;\n}\n`],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SkyWindowRefService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'alignment': [{ type: Input },],\n'buttonStyle': [{ type: Input },],\n'buttonType': [{ type: Input },],\n'label': [{ type: Input },],\n'dismissOnBlur': [{ type: Input },],\n'messageStream': [{ type: Input },],\n'title': [{ type: Input },],\n'trigger': [{ type: Input },],\n'triggerButton': [{ type: ViewChild, args: ['triggerButton', ] },],\n'popover': [{ type: ViewChild, args: [SkyPopoverComponent, ] },],\n'onKeyDown': [{ type: HostListener, args: ['keydown', ['$event'], ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}