{"version":3,"sources":["../../../.srctemp/modules/radio/radio-label.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,YAAA,EAAa,MAAO,eAAA,CAAgB;AAGxD;IAAA;IAoBA,CAAC;IAnBC,yEAAyE;IACzE,iGAAiG;IAE1F,wCAAO,GAAd,UAAe,KAAiB;QAC9B,KAAK,CAAC,eAAe,EAAE,CAAC;IAC1B,CAAC;IAcH,6BAAC;AAAD,CApBA,AAoBC;;AAbM,iCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,iBAAiB;gBAC3B,QAAQ,EAAE,6BACX;aACA,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,qCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AACK,qCAAc,GAA2C;IAChE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,EAAG,EAAE,EAAE;CAClE,CAAC","file":"radio-label.component.js","sourceRoot":"","sourcesContent":["import { Component, HostListener } from '@angular/core';\n\n\nexport class SkyRadioLabelComponent {\n  // When clicking on a checkbox label, angular registers two click events.\n  // This handler ignores all events except for those that deal with the checkbox input explicitly.\n  \n  public onClick(event: MouseEvent) {\n    event.stopPropagation();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sky-radio-label',\n  template: `<ng-content></ng-content>\n`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onClick': [{ type: HostListener, args: ['click', ['$event'], ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}