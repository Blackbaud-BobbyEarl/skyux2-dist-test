{"version":3,"sources":["../../../.srctemp/modules/list-filters/list-filter-inline.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,eAAe,EAGhB,MAAM,eAAA,CAAgB;AAEvB,OAAO,EAAE,gCAAA,EAAiC,MAAO,qCAAA,CAAsC;AAEvF,OAAO,EACL,mBAAmB,EACpB,MAAM,eAAA,CAAgB;AAEvB,OAAO,EACL,eAAe,EAChB,MAAM,eAAA,CAAgB;AAEvB,OAAO,EACL,wBAAwB,EACzB,MAAM,4BAAA,CAA6B;AAGpC;IAME,sCACU,UAA+B;QAA/B,eAAU,GAAV,UAAU,CAAqB;QANlC,kBAAa,GAAoC,EAAE,CAAC;IAOxD,CAAC;IAEG,yDAAkB,GAAzB;QAAA,iBAkBC;QAjBC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAA,MAAM;YAC1C,MAAM,CAAC,IAAI,wBAAwB,CAAC;gBAClC,IAAI,EAAE,MAAM,CAAC,IAAI;gBACjB,cAAc,EAAE,MAAM,CAAC,cAAc;gBACrC,QAAQ,EAAE,MAAM,CAAC,QAAQ;gBACzB,KAAK,EAAE,MAAM,CAAC,KAAK;gBACnB,YAAY,EAAE,MAAM,CAAC,YAAY;aAClC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAA,MAAM;YAC/B,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAC,KAAU;gBACnC,KAAI,CAAC,YAAY,EAAE,CAAC;YACtB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;IACnF,CAAC;IAEM,mDAAY,GAAnB;QACE,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;IACnF,CAAC;IAEO,+DAAwB,GAAhC,UAAiC,aAA8C;QAC7E,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,UAAC,MAAM;YAC9B,MAAM,CAAC,IAAI,eAAe,CAAC;gBACzB,IAAI,EAAE,MAAM,CAAC,IAAI;gBACjB,KAAK,EAAE,MAAM,CAAC,KAAK;gBACnB,cAAc,EAAE,MAAM,CAAC,cAAc;gBACrC,YAAY,EAAE,MAAM,CAAC,YAAY;aAClC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAyBH,mCAAC;AAAD,CApEA,AAoEC;;AAxBM,uCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,wBAAwB;gBAClC,QAAQ,EAAE,yUAWX;aACA,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,2CAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,mBAAmB,GAAG;CAC5B,EAF6F,CAE7F,CAAC;AACK,2CAAc,GAA2C;IAChE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,gCAAgC,EAAG,EAAE,EAAE;CAClF,CAAC","file":"list-filter-inline.component.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  ContentChildren,\n  QueryList,\n  AfterContentInit\n} from '@angular/core';\n\nimport { SkyListFilterInlineItemComponent } from './list-filter-inline-item.component';\n\nimport {\n  ListStateDispatcher\n} from '../list/state';\n\nimport {\n  ListFilterModel\n} from '../list/state';\n\nimport {\n  SkyListFilterInlineModel\n} from './list-filter-inline.model';\n\n\nexport class SkyListFilterInlineComponent implements AfterContentInit {\n  public inlineFilters: Array<SkyListFilterInlineModel> = [];\n\n  \n  private filters: QueryList<SkyListFilterInlineItemComponent>;\n\n  constructor(\n    private dispatcher: ListStateDispatcher\n  ) {}\n\n  public ngAfterContentInit() {\n    this.inlineFilters = this.filters.map(filter => {\n      return new SkyListFilterInlineModel({\n        name: filter.name,\n        filterFunction: filter.filterFunction,\n        template: filter.template,\n        value: filter.value,\n        defaultValue: filter.defaultValue\n      });\n    });\n\n    this.inlineFilters.forEach(filter => {\n      filter.onChange.subscribe((value: any) => {\n        this.applyFilters();\n      });\n    });\n\n    this.dispatcher.filtersUpdate(this.getFilterModelFromInline(this.inlineFilters));\n  }\n\n  public applyFilters() {\n    this.dispatcher.filtersUpdate(this.getFilterModelFromInline(this.inlineFilters));\n  }\n\n  private getFilterModelFromInline(inlineFilters: Array<SkyListFilterInlineModel>) {\n    return inlineFilters.map((filter) => {\n      return new ListFilterModel({\n        name: filter.name,\n        value: filter.value,\n        filterFunction: filter.filterFunction,\n        defaultValue: filter.defaultValue\n      });\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sky-list-filter-inline',\n  template: `<ng-content></ng-content>\n\n<sky-filter-inline>\n  <sky-filter-inline-item\n    *ngFor=\"let filter of inlineFilters\">\n    <sky-list-filter-inline-item-renderer\n      [template]=\"filter.template\"\n      [filter]=\"filter\">\n    </sky-list-filter-inline-item-renderer>\n  </sky-filter-inline-item>\n</sky-filter-inline>\n`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ListStateDispatcher, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'filters': [{ type: ContentChildren, args: [SkyListFilterInlineItemComponent, ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}