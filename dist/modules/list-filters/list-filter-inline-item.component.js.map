{"version":3,"sources":["../../../.srctemp/modules/list-filters/list-filter-inline-item.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,KAAK,EACL,eAAe,EACf,WAAW,EAGX,YAAY,EACb,MAAM,eAAA,CAAgB;AAKvB;IAAA;QAgBE,mCAAmC;QAE5B,aAAQ,GAAsB,IAAI,YAAY,EAAO,CAAC;IA+B/D,CAAC;IA1BQ,mDAAQ,GAAf;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACtD,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;QACpD,CAAC;IACH,CAAC;IAED,sBAAW,sDAAQ;aAAnB;YACI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC;QACjF,CAAC;;;OAAA;IAkBH,uCAAC;AAAD,CAjDA,AAiDC;;AAjBM,2CAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,6BAA6B;gBACvC,QAAQ,EAAE,2BAA2B;aACtC,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,+CAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AACK,+CAAc,GAA2C;IAChE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC1B,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC3B,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAClC,gBAAgB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,QAAQ,EAAG,EAAE,EAAE;IACxD,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,UAAU,EAAG,EAAE,EAAE;IACzD,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,WAAW,EAAG,EAAE,EAAE;CAC/D,CAAC","file":"list-filter-inline-item.component.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  Input,\n  ContentChildren,\n  TemplateRef,\n  QueryList,\n  OnInit,\n  EventEmitter\n} from '@angular/core';\n\nimport { ListItemModel } from '../list/state';\n\n\nexport class SkyListFilterInlineItemComponent implements OnInit {\n  \n  public name: string;\n\n  \n  public value: any;\n\n  \n  public defaultValue: any;\n\n  /* tslint:disable:no-input-rename */\n  \n  public filterFunction: (item: ListItemModel, filter: any) => boolean;\n\n  \n  public templateInput: TemplateRef<any>;\n  /* tslint:enable:no-input-rename */\n\n  public onChange: EventEmitter<any> = new EventEmitter<any>();\n\n  \n  private templates: QueryList<TemplateRef<any>>;\n\n  public ngOnInit() {\n    if (this.name === undefined || this.name.length === 0) {\n      throw new Error('Inline filter requires a name.');\n    }\n  }\n\n  public get template(): TemplateRef<any> {\n      return this.templates.length > 0 ? this.templates.first : this.templateInput;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sky-list-filter-inline-item',\n  template: '<ng-content></ng-content>'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input },],\n'value': [{ type: Input },],\n'defaultValue': [{ type: Input },],\n'filterFunction': [{ type: Input, args: ['filter', ] },],\n'templateInput': [{ type: Input, args: ['template', ] },],\n'templates': [{ type: ContentChildren, args: [TemplateRef, ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}