{"version":3,"sources":["../../../.srctemp/modules/tabs/tabset-nav-button.component.ts"],"names":[],"mappings":"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","file":"tabset-nav-button.component.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  Input\n} from '@angular/core';\n\nimport { SkyResourcesService } from '../resources/resources.service';\n\nimport { SkyTabsetComponent } from './tabset.component';\nimport { SkyTabComponent } from './tab.component';\n\nconst buttonTypeNext = 'next';\nconst buttonTypePrevious = 'previous';\n\n\nexport class SkyTabsetNavButtonComponent {\n  \n  public tabset: SkyTabsetComponent;\n\n  \n  public buttonType: string;\n\n  \n  public set buttonText(value: string) {\n    this._buttonText = value;\n  }\n\n  public get buttonText(): string {\n    if (this._buttonText) {\n      return this._buttonText;\n    }\n\n    switch (this.buttonType) {\n      case buttonTypePrevious:\n        return this.resources.getString('wizard_navigator_previous');\n      case buttonTypeNext:\n        return this.resources.getString('wizard_navigator_next');\n      /* istanbul ignore next */\n      default:\n        return '';\n    }\n  }\n\n  public get disabled(): boolean {\n    let tabToSelect: SkyTabComponent;\n\n    switch (this.buttonType) {\n      case buttonTypePrevious:\n        tabToSelect = this.previousTab;\n        break;\n      case buttonTypeNext:\n        tabToSelect = this.nextTab;\n        break;\n      /* istanbul ignore next */\n      default:\n        break;\n    }\n\n    return !tabToSelect || tabToSelect.disabled;\n  }\n\n  private get selectedTab(): SkyTabComponent {\n    let selectedTab: SkyTabComponent;\n\n    if (this.tabset && this.tabset.tabs) {\n      selectedTab = this.tabset.tabs.filter((tab) => tab.active)[0];\n    }\n\n    return selectedTab;\n  }\n\n  private get nextTab(): SkyTabComponent {\n    let selectedTab = this.selectedTab;\n\n    if (selectedTab) {\n      let tabs = this.tabset.tabs.toArray();\n      return tabs[tabs.indexOf(selectedTab) + 1];\n    }\n\n    return undefined;\n  }\n\n  private get previousTab(): SkyTabComponent {\n    let selectedTab = this.selectedTab;\n\n    if (selectedTab) {\n      let tabs = this.tabset.tabs.toArray();\n      return tabs[tabs.indexOf(selectedTab) - 1];\n    }\n\n    return undefined;\n  }\n\n  private _buttonText: string;\n\n  constructor(private resources: SkyResourcesService) { }\n\n  public buttonClick() {\n    let tabToSelect: SkyTabComponent;\n\n    switch (this.buttonType) {\n      case buttonTypePrevious:\n        tabToSelect = this.previousTab;\n        break;\n      case buttonTypeNext:\n        tabToSelect = this.nextTab;\n        break;\n      /* istanbul ignore next */\n      default:\n        break;\n    }\n\n    /* istanbul ignore else */\n    if (tabToSelect && !tabToSelect.disabled) {\n      this.tabset.selectTab(tabToSelect);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sky-tabset-nav-button',\n  template: `<button\n  type=\"button\"\n  class=\"sky-btn sky-btn-default\"\n  (click)=\"buttonClick()\"\n  [disabled]=\"disabled\"\n>\n  {{ buttonText }}\n</button>\n`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SkyResourcesService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tabset': [{ type: Input },],\n'buttonType': [{ type: Input },],\n'buttonText': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}