{"version":3,"sources":["../../../.srctemp/modules/tabs/tab.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,YAAY,EACZ,KAAK,EAEL,MAAM,EAEN,iBAAiB,EAGlB,MAAM,eAAA,CAAgB;AAEvB,OAAO,EAAE,gBAAA,EAAiB,MAAO,kBAAA,CAAmB;AAGpD;IAuBE,yBAAoB,aAA+B,EAAU,GAAsB;QAA/D,kBAAa,GAAb,aAAa,CAAkB;QAAU,QAAG,GAAH,GAAG,CAAmB;QAF5E,UAAK,GAAG,IAAI,YAAY,EAAO,CAAC;IAE+C,CAAC;IAPvF,sBAAW,uCAAU;aAArB;YACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;QACzC,CAAC;;;OAAA;IAOM,yCAAe,GAAtB;QAAA,iBAcC;QAbC,UAAU,CAAC;YACT,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAI,CAAC,CAAC;YAEhC,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,SAAS,CAAC,UAAC,WAAgB;gBACxD,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,QAAQ,KAAK,WAAW,CAAC;gBAC5C,KAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;YAC1B,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBAChB,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,KAAI,CAAC,CAAC;YACvC,CAAC;QACH,CAAC,CAAC,CAAC;IAEL,CAAC;IAEM,qCAAW,GAAlB,UAAmB,OAAsB;QACvC,0BAA0B;QAC1B,kBAAkB;QAClB,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACZ,IAAI,YAAY,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;YACrC,EAAE,CAAC,CAAC,YAAY;mBACX,IAAI,CAAC,QAAQ,KAAK,SAAS;mBAC3B,YAAY,CAAC,aAAa,KAAK,YAAY,CAAC,YAAY;mBACxD,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YACvC,CAAC;QACH,CAAC;IACH,CAAC;IAEM,qCAAW,GAAlB;QACE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC;IAuBH,sBAAC;AAAD,CAhFA,AAgFC;;AAtBM,0BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,SAAS;gBACnB,QAAQ,EAAE,uGAGX;aACA,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,8BAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,gBAAgB,GAAG;IAC1B,EAAC,IAAI,EAAE,iBAAiB,GAAG;CAC1B,EAH6F,CAG7F,CAAC;AACK,8BAAc,GAA2C;IAChE,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAChC,gBAAgB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACpC,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC9B,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC9B,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC5B,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;CAC3B,CAAC","file":"tab.component.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  AfterViewInit,\n  ChangeDetectorRef,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\n\nimport { SkyTabsetService } from './tabset.service';\n\n\nexport class SkyTabComponent implements OnDestroy, AfterViewInit, OnChanges {\n  \n  public tabHeading: string;\n\n  \n  public tabHeaderCount: string;\n\n  \n  public disabled: boolean;\n\n  \n  public tabIndex: string | number;\n\n  \n  public active: boolean;\n\n  public get allowClose(): boolean {\n    return this.close.observers.length > 0;\n  }\n\n  \n  public close = new EventEmitter<any>();\n\n  constructor(private tabsetService: SkyTabsetService, private ref: ChangeDetectorRef) {}\n\n  public ngAfterViewInit() {\n    setTimeout(() => {\n      this.tabsetService.addTab(this);\n\n      this.tabsetService.activeIndex.subscribe((activeIndex: any) => {\n        this.active = this.tabIndex === activeIndex;\n        this.ref.markForCheck();\n      });\n\n      if (this.active) {\n        this.tabsetService.activateTab(this);\n      }\n    });\n\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    /* istanbul ignore else */\n    /* sanity check */\n    if (changes) {\n      let activeChange = changes['active'];\n      if (activeChange\n        && this.tabIndex !== undefined\n        && activeChange.previousValue !== activeChange.currentValue\n        && this.active) {\n        this.tabsetService.activateTab(this);\n      }\n    }\n  }\n\n  public ngOnDestroy() {\n    this.tabsetService.destroyTab(this);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sky-tab',\n  template: `<div class=\"sky-tab\" [hidden]=\"!active\" role=\"tabpanel\">\n  <ng-content></ng-content>\n</div>\n`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SkyTabsetService, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tabHeading': [{ type: Input },],\n'tabHeaderCount': [{ type: Input },],\n'disabled': [{ type: Input },],\n'tabIndex': [{ type: Input },],\n'active': [{ type: Input },],\n'close': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}