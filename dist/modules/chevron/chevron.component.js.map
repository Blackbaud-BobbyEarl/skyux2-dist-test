{"version":3,"sources":["../../../.srctemp/modules/chevron/chevron.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,YAAA,EAAc,KAAA,EAAO,MAAA,EAAO,MAAO,eAAA,CAAgB;AAGvE;IAAA;QAES,oBAAe,GAAG,IAAI,YAAY,EAAU,CAAC;QAG7C,cAAS,GAAG,IAAI,CAAC;QAGjB,aAAQ,GAAY,KAAK,CAAC;IAgFnC,CAAC;IA9EQ,0CAAY,GAAnB;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,KAAK,IAAI,GAAG,MAAM,GAAG,IAAI,CAAC;QACzD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC5C,CAAC;IA2EH,0BAAC;AAAD,CAxFA,AAwFC;;AA1EM,8BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,aAAa;gBACvB,MAAM,EAAE,CAAC,k3BAgDV,CAAC;gBACA,QAAQ,EAAE,uaAWX;aACA,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,kCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AACK,kCAAc,GAA2C;IAChE,iBAAiB,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IACtC,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC/B,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;CAC7B,CAAC","file":"chevron.component.js","sourceRoot":"","sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n\nexport class SkyChevronComponent {\n  \n  public directionChange = new EventEmitter<string>();\n\n  \n  public direction = 'up';\n\n  \n  public disabled: boolean = false;\n\n  public chevronClick() {\n    this.direction = this.direction === 'up' ? 'down' : 'up';\n    this.directionChange.emit(this.direction);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sky-chevron',\n  styles: [`.sky-chevron {\n  border: none;\n  background-color: transparent;\n  flex-shrink: 0;\n  height: 24px;\n  margin: 0;\n  overflow: hidden;\n  padding: 0;\n  width: 24px;\n  cursor: pointer;\n}\n\n.sky-chevron:hover .sky-chevron-part {\n  border-color: #979ba2;\n}\n\n.sky-chevron-part {\n  border-color: #cdcfd2;\n  border-style: solid;\n  border-width: 3px 0 0 0;\n  display: inline-block;\n  height: 10px;\n  position: relative;\n  top: 6px;\n  transition: transform 250ms, left 250ms;\n  vertical-align: top;\n  width: 10px;\n}\n\n.sky-chevron-up .sky-chevron-left {\n  left: 7px;\n  transform: rotate(-45deg);\n}\n\n.sky-chevron-up .sky-chevron-right {\n  left: -6px;\n  transform: rotate(45deg);\n}\n\n.sky-chevron-down .sky-chevron-left {\n  left: 2px;\n  transform: rotate(45deg);\n}\n\n.sky-chevron-down .sky-chevron-right {\n  left: -1px;\n  transform: rotate(-45deg);\n}\n`],\n  template: `<button\n    type=\"button\"\n    class=\"sky-chevron\"\n    [ngClass]=\"['sky-chevron-' + direction]\"\n    (click)=\"$event.stopPropagation();chevronClick()\"\n    [attr.aria-label]=\"(direction === 'down' ? 'chevron_expand' : 'chevron_collapse') | skyResources\"\n    [disabled]=\"disabled\"\n>\n  <i class=\"sky-chevron-part sky-chevron-left\"></i>\n  <i class=\"sky-chevron-part sky-chevron-right\"></i>\n</button>\n`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'directionChange': [{ type: Output },],\n'direction': [{ type: Input },],\n'disabled': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}