{"version":3,"sources":["../../../.srctemp/modules/grid/grid-cell.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,KAAK,EACL,SAAS,EACT,gBAAgB,EAGhB,uBAAuB,EACxB,MAAM,eAAA,CAAgB;AAKvB,OAAO,EAAE,OAAA,EAAQ,MAAO,iBAAA,CAAkB;AAG1C;IAAA;IAwDA,CAAC;IAxCQ,uCAAQ,GAAf;QACE,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IACzD,CAAC;IAED,sBAAI,qCAAG;aAAP;YACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QACxB,CAAC;;;OAAA;IAED,sBAAI,uCAAK;aAAT;YACE,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAC5D,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;YACtE,CAAC;YAED,MAAM,CAAC,SAAS,CAAC;QACnB,CAAC;;;OAAA;IA0BH,2BAAC;AAAD,CAxDA,AAwDC;;AAzBM,+BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,eAAe;gBACzB,QAAQ,EAAE,mCAAmC;gBAC7C,MAAM,EAAE,CAAC,2HAOV,CAAC;gBACA,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,mCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AACK,mCAAc,GAA2C;IAChE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC1B,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC9B,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC9B,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACnC,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,gBAAgB,EAAE,EAAG,EAAE,EAAE;CAChF,CAAC","file":"grid-cell.component.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  Input,\n  ViewChild,\n  ViewContainerRef,\n  TemplateRef,\n  OnInit,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport {\n  ListItemModel\n} from '../list/state/items/item.model';\n\nimport { getData } from '../list/helpers';\n\n\nexport class SkyGridCellComponent implements OnInit {\n  \n  public item: ListItemModel;\n\n  \n  public columnId: string;\n\n  \n  private template: TemplateRef<any>;\n\n  \n  private fieldSelector: string;\n\n  \n  private container: ViewContainerRef;\n\n  public ngOnInit() {\n    this.container.createEmbeddedView(this.template, this);\n  }\n\n  get row() {\n    return this.item.data;\n  }\n\n  get value() {\n    if (this.item.data && (this.fieldSelector || this.columnId)) {\n      return getData(this.item.data, this.fieldSelector || this.columnId);\n    }\n\n    return undefined;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sky-grid-cell',\n  template: '<ng-template #cell></ng-template>',\n  styles: [`:host {\n  display: block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  padding: 8px;\n}\n`],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'item': [{ type: Input },],\n'columnId': [{ type: Input },],\n'template': [{ type: Input },],\n'fieldSelector': [{ type: Input },],\n'container': [{ type: ViewChild, args: ['cell', { read: ViewContainerRef }, ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}