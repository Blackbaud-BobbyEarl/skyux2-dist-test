{"version":3,"sources":["../../../../../.srctemp/modules/list-view-checklist/state/items/items.orchestrator.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EACL,0BAA0B,EAC3B,MAAM,4BAA4B,CAAC;AAEpC,OAAO,EACL,SAAS,EACV,MAAM,wBAAwB,CAAC;AAEhC,OAAO,EACL,0BAA0B,EAC3B,MAAM,cAAc,CAAC;AAEtB,OAAO,EACL,gCAAgC,EACjC,MAAM,WAAW,CAAC;AAEnB,IAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAEjC;IACU,sDAAiE;IACzE,0BAA0B;IAC1B;QAAA,YACE,iBAAO,SAER;QADC,KAAI,CAAC,QAAQ,CAAC,gCAAgC,EAAE,KAAI,CAAC,IAAI,CAAC,CAAC;;IAC7D,CAAC;IAEO,iDAAI,GAAZ,UACE,KAA4C,EAC5C,MAAwC;QAExC,IAAM,YAAY,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,0BAA0B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAA7C,CAA6C,CAAC,CAAC;QAE7F,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC,IAAI,SAAS,CACd,YAAY,UAChB,MAAM,CAAC,WAAW,GAAG,MAAM,EAAE,GAAG,KAAK,CAAC,UAAU,EAChD,KAAK,EACL,KAAK,CAAC,KAAK,CACZ,CAAC;QACJ,CAAC;QAED,MAAM,CAAC,IAAI,SAAS,CACd,KAAK,CAAC,KAAK,QAAK,YAAY,GAChC,MAAM,CAAC,WAAW,GAAG,MAAM,EAAE,GAAG,KAAK,CAAC,UAAU,EAChD,KAAK,EACL,MAAM,CAAC,SAAS,CACjB,CAAC;IACJ,CAAC;IACH,yCAAC;AAAD,CA9BA,AA8BC,CA7BS,0BAA0B,GA6BnC","file":"items.orchestrator.js","sourceRoot":"","sourcesContent":["import {\n  ChecklistStateOrchestrator\n} from '../checklist-state.rxstate';\n\nimport {\n  AsyncList\n} from 'microedge-rxstate/dist';\n\nimport {\n  ListViewChecklistItemModel\n} from './item.model';\n\nimport {\n  ListViewChecklistItemsLoadAction\n} from './actions';\n\nconst moment = require('moment');\n\nexport class ListViewChecklistItemsOrchestrator\n  extends ChecklistStateOrchestrator<AsyncList<ListViewChecklistItemModel>> {\n  /* istanbul ignore next */\n  constructor() {\n    super();\n    this.register(ListViewChecklistItemsLoadAction, this.load);\n  }\n\n  private load(\n    state: AsyncList<ListViewChecklistItemModel>,\n    action: ListViewChecklistItemsLoadAction): AsyncList<ListViewChecklistItemModel> {\n\n    const newListItems = action.items.map(item => new ListViewChecklistItemModel(item.id, item));\n\n    if (action.refresh) {\n      return new AsyncList<ListViewChecklistItemModel>(\n        [...newListItems],\n        action.dataChanged ? moment() : state.lastUpdate,\n        false,\n        state.count\n      );\n    }\n\n    return new AsyncList<ListViewChecklistItemModel>(\n      [...state.items, ...newListItems],\n      action.dataChanged ? moment() : state.lastUpdate,\n      false,\n      action.itemCount\n    );\n  }\n}\n"]}