{"version":3,"sources":["../../../.srctemp/modules/select-field/select-field.component.ts"],"names":[],"mappings":"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","file":"select-field.component.js","sourceRoot":"","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  forwardRef,\n  Input\n} from '@angular/core';\n\nimport {\n  ControlValueAccessor,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\n\nimport { Observable } from 'rxjs/Observable';\n\nimport {\n  SkyModalService,\n  SkyModalCloseArgs\n} from '../modal';\n\nimport {\n  SkyResourcesService\n} from '../resources';\n\nimport {\n  SkyToken\n} from '../tokens';\n\nimport {\n  SkySelectField,\n  SkySelectFieldSelectMode\n} from './types';\n\nimport { SkySelectFieldPickerContext } from './select-field-picker-context';\nimport { SkySelectFieldPickerComponent } from './select-field-picker.component';\n\n\nexport class SkySelectFieldComponent implements ControlValueAccessor {\n  \n  public ariaLabel: string;\n\n  \n  public ariaLabelledBy: string;\n\n  \n  public data: Observable<SkySelectField[]>;\n\n  \n  public set descriptorKey(value: string) {\n    this._descriptorKey = value;\n  }\n\n  public get descriptorKey(): string {\n    return this._descriptorKey || 'label';\n  }\n\n  \n  public set disabled(value: boolean) {\n    this._disabled = value;\n  }\n\n  public get disabled(): boolean {\n    return this._disabled || false;\n  }\n\n  \n  public set selectMode(value: SkySelectFieldSelectMode) {\n    this._selectMode = value;\n  }\n\n  public get selectMode(): SkySelectFieldSelectMode {\n    return this._selectMode || 'multiple';\n  }\n\n  \n  public set multipleSelectOpenButtonText(value: string) {\n    this._multipleSelectOpenButtonText = value;\n  }\n\n  public get multipleSelectOpenButtonText(): string {\n    return this._multipleSelectOpenButtonText ||\n      this.resourcesService.getString('select_field_multiple_select_open_button');\n  }\n\n  \n  public set singleSelectClearButtonTitle(value: string) {\n    this._singleSelectClearButtonTitle = value;\n  }\n\n  public get singleSelectClearButtonTitle(): string {\n    return this._singleSelectClearButtonTitle ||\n      this.resourcesService.getString('select_field_single_select_clear_button_title');\n  }\n\n  \n  public set singleSelectOpenButtonTitle(value: string) {\n    this._singleSelectOpenButtonTitle = value;\n  }\n\n  public get singleSelectOpenButtonTitle(): string {\n    return this._singleSelectOpenButtonTitle ||\n      this.resourcesService.getString('select_field_single_select_open_button_title');\n  }\n\n  \n  public set singleSelectPlaceholderText(value: string) {\n    this._singleSelectPlaceholderText = value;\n  }\n\n  public get singleSelectPlaceholderText(): string {\n    return this._singleSelectPlaceholderText ||\n      this.resourcesService.getString('select_field_single_select_placeholder');\n  }\n\n  \n  public set pickerHeading(value: string) {\n    this._pickerHeading = value;\n  }\n\n  public get pickerHeading(): string {\n    if (this._pickerHeading) {\n      return this._pickerHeading;\n    }\n\n    return this.resourcesService.getString(`select_field_${this.selectMode}_select_picker_heading`);\n  }\n\n  public get value(): any {\n    return this._value;\n  }\n\n  public set value(value: any) {\n    this._value = value;\n    this.onChange(this.value);\n    this.onTouched();\n  }\n\n  public get singleSelectModeValue(): string {\n    const value = this.value;\n\n    if (value) {\n      return (value as any)[this.descriptorKey];\n    }\n\n    return '';\n  }\n\n  public tokens: SkyToken[];\n\n  private _descriptorKey: string;\n  private _disabled: boolean;\n  private _multipleSelectOpenButtonText: string;\n  private _pickerHeading: string;\n  private _selectMode: SkySelectFieldSelectMode;\n  private _singleSelectClearButtonTitle: string;\n  private _singleSelectOpenButtonTitle: string;\n  private _singleSelectPlaceholderText: string;\n  private _value: any;\n\n  constructor(\n    private changeDetector: ChangeDetectorRef,\n    private modalService: SkyModalService,\n    private resourcesService: SkyResourcesService\n  ) { }\n\n  public onTokensChange(change: SkyToken[]) {\n    if (!change || change === this.tokens) {\n      return;\n    }\n\n    const newIds = change.map(token => token.value.id);\n\n    this.data.take(1).subscribe((items: SkySelectField[]) => {\n      const newValues = items.filter(item => newIds.indexOf(item.id) > -1);\n      this.value = newValues;\n      this.setTokensFromValue();\n      this.changeDetector.markForCheck();\n    });\n  }\n\n  public openPicker() {\n    const pickerContext = new SkySelectFieldPickerContext();\n    pickerContext.headingText = this.pickerHeading;\n    pickerContext.data = this.data;\n    pickerContext.selectedValue = this.value;\n    pickerContext.selectMode = this.selectMode;\n\n    const modalInstance = this.modalService.open(SkySelectFieldPickerComponent, {\n      providers: [{\n        provide: SkySelectFieldPickerContext,\n        useValue: pickerContext\n      }]\n    });\n\n    modalInstance.closed.subscribe((result: SkyModalCloseArgs) => {\n      if (result.reason === 'save') {\n        if (this.selectMode === 'single') {\n          this.writeValue(result.data[0]);\n        } else {\n          this.writeValue(result.data);\n        }\n      }\n    });\n  }\n\n  public writeValue(value: any) {\n    if (this.disabled) {\n      return;\n    }\n\n    if (value) {\n      this.value = value;\n      this.setTokensFromValue();\n      this.changeDetector.markForCheck();\n    }\n  }\n\n  // Angular automatically constructs these methods.\n  /* istanbul ignore next */\n  public onChange = (value: any) => {};\n  /* istanbul ignore next */\n  public onTouched = () => {};\n\n  public registerOnChange(fn: (value: any) => void) {\n    this.onChange = fn;\n  }\n\n  public registerOnTouched(fn: () => void) {\n    this.onTouched = fn;\n  }\n\n  public setDisabledState(disabled: boolean) {\n    this.disabled = disabled;\n    this.changeDetector.markForCheck();\n  }\n\n  public clearSelection() {\n    this.value = undefined;\n  }\n\n  private setTokensFromValue() {\n    let tokens: SkyToken[] = [];\n\n    // Tokens only appear for multiple select mode.\n    if (this.selectMode === 'single') {\n      return;\n    }\n\n    // Collapse the tokens into a single token if the user has selected many options.\n    if (this.value.length > 5) {\n      tokens = [{\n        value: {\n          [this.descriptorKey]: this.resourcesService\n            .getString('select_field_multiple_select_summary')\n            .replace('{0}', this.value.length.toString())\n        }\n      }];\n    } else {\n      tokens = this.value.map((value: any) => ({ value }));\n    }\n\n    this.tokens = tokens;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sky-select-field',\n  template: `<div class=\"sky-select-field\">\n  <ng-container\n    *ngTemplateOutlet=\"(selectMode === 'multiple') ? multipleSelectMode : singleSelectMode \">\n  </ng-container>\n</div>\n\n<ng-template #multipleSelectMode>\n  <div class=\"sky-select-field-multiple-select-mode\">\n    <button\n      class=\"sky-btn sky-btn-default\"\n      type=\"button\"\n      [attr.aria-label]=\"ariaLabel\"\n      [attr.aria-labelledby]=\"ariaLabelledBy\"\n      [disabled]=\"disabled\"\n      (click)=\"openPicker()\">\n      <i\n        class=\"fa fa-plus-circle\"\n        aria-hidden=\"true\">\n      </i>\n      {{ multipleSelectOpenButtonText }}\n    </button>\n    <sky-tokens\n      *ngIf=\"tokens && tokens.length\"\n      [disabled]=\"disabled\"\n      [displayWith]=\"descriptorKey\"\n      [tokens]=\"tokens\"\n      (tokensChange)=\"onTokensChange($event)\"\n      (tokenSelected)=\"openPicker()\">\n    </sky-tokens>\n  </div>\n</ng-template>\n\n<ng-template #singleSelectMode>\n  <div class=\"sky-select-field-single-select-mode\">\n    <div\n      class=\"sky-input-group sky-btn sky-btn-default\"\n      role=\"button\"\n      [attr.tabindex]=\"(disabled) ? false : 0\"\n      [attr.aria-label]=\"ariaLabel\"\n      [attr.aria-labelledby]=\"ariaLabelledBy\"\n      [attr.title]=\"singleSelectOpenButtonTitle\"\n      [ngClass]=\"{ 'sky-btn-disabled': disabled }\"\n      (click)=\"openPicker()\"\n      (keydown.enter)=\"openPicker();$event.preventDefault();$event.stopPropagation();\">\n      <div class=\"sky-form-control\">\n        {{ singleSelectModeValue }}\n        <div\n          *ngIf=\"!singleSelectModeValue\"\n          class=\"sky-deemphasized\">\n          {{ singleSelectPlaceholderText }}\n        </div>\n      </div>\n      <div class=\"sky-input-group-btn\">\n        <button\n          *ngIf=\"singleSelectModeValue\"\n          class=\"sky-btn\"\n          type=\"button\"\n          [attr.title]=\"singleSelectClearButtonTitle\"\n          [disabled]=\"disabled\"\n          (click)=\"clearSelection();$event.stopPropagation();\"\n          (keydown.enter)=\"clearSelection();$event.preventDefault();$event.stopPropagation();\">\n          <i\n            class=\"fa fa-times\"\n            aria-hidden=\"true\">\n          </i>\n        </button>\n      </div>\n      <div class=\"sky-input-group-btn\">\n        <button\n          class=\"sky-btn\"\n          type=\"button\"\n          [attr.title]=\"'select_field_single_select_open_button_title' | skyResources\"\n          [disabled]=\"disabled\"\n          (click)=\"openPicker();$event.stopPropagation();\">\n          <i\n            class=\"fa fa-sort\"\n            aria-hidden=\"true\">\n          </i>\n        </button>\n      </div>\n    </div>\n  </div>\n</ng-template>\n`,\n  styles: [`.sky-select-field-multiple-select-mode > .sky-btn {\n  margin-bottom: 10px;\n}\n\n.sky-select-field-single-select-mode .sky-input-group {\n  padding: 0;\n}\n\n.sky-select-field-single-select-mode .sky-input-group .sky-form-control,\n.sky-select-field-single-select-mode .sky-input-group .sky-btn {\n  border: 0;\n}\n\n.sky-select-field-single-select-mode .sky-input-group:hover {\n  cursor: pointer;\n}\n\n.sky-select-field-single-select-mode .sky-input-group .sky-form-control + .sky-input-group-btn .sky-btn {\n  padding-right: 5px;\n}\n\n.sky-select-field-single-select-mode .sky-input-group .sky-input-group-btn + .sky-input-group-btn .sky-btn {\n  padding-left: 5px;\n}\n`],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    SkyResourcesService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      /* tslint:disable-next-line:no-forward-ref */\n      useExisting: forwardRef(() => SkySelectFieldComponent),\n      multi: true\n    }\n  ]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n{type: SkyModalService, },\n{type: SkyResourcesService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ariaLabel': [{ type: Input },],\n'ariaLabelledBy': [{ type: Input },],\n'data': [{ type: Input },],\n'descriptorKey': [{ type: Input },],\n'disabled': [{ type: Input },],\n'selectMode': [{ type: Input },],\n'multipleSelectOpenButtonText': [{ type: Input },],\n'singleSelectClearButtonTitle': [{ type: Input },],\n'singleSelectOpenButtonTitle': [{ type: Input },],\n'singleSelectPlaceholderText': [{ type: Input },],\n'pickerHeading': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}