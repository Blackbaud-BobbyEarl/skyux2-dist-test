{"version":3,"sources":["../../../../.srctemp/modules/link-records/state/link-records-state.state-node.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,SAAA,EAAU,MAAO,wBAAA,CAAyB;AACnD,OAAO,EAAE,wBAAA,EAAyB,MAAO,4BAAA,CAA6B;AACtE,OAAO,EAAE,6BAAA,EAA8B,MAAO,8BAAA,CAA+B;AAC7E,OAAO,EAAE,iCAAA,EAAkC,MAAO,gCAAA,CAAiC;AACnF,OAAO,EAAE,gCAAA,EAAiC,MAAO,8BAAA,CAA+B;AAChF,OAAO,EAAE,iCAAA,EAAkC,MAAO,gCAAA,CAAiC;AACnF,OAAO,EAAE,kCAAA,EAAmC,MAAO,kCAAA,CAAmC;AAGtF;IAAyC,uCAAmC;IAC1E,6BAAY,YAAsC,EAAE,UAAyC;QAA7F,YACE,kBAAM,YAAY,EAAE,UAAU,CAAC,SAQhC;QANC,KAAI;aACD,QAAQ,CAAC,SAAS,EAAE,iCAAiC,CAAC;aACtD,QAAQ,CAAC,QAAQ,EAAE,gCAAgC,CAAC;aACpD,QAAQ,CAAC,SAAS,EAAE,iCAAiC,CAAC;aACtD,QAAQ,CAAC,UAAU,EAAE,kCAAkC,CAAC;aACxD,KAAK,EAAE,CAAC;;IACb,CAAC;IASH,0BAAC;AAAD,CAnBA,AAmBC,CAnBwC,SAAS;;AAW3C,8BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,kCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,wBAAwB,GAAG;IAClC,EAAC,IAAI,EAAE,6BAA6B,GAAG;CACtC,EAH6F,CAG7F,CAAC","file":"link-records-state.state-node.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { StateNode } from 'microedge-rxstate/dist';\nimport { SkyLinkRecordsStateModel } from './link-records-state.model';\nimport { SkyLinkRecordsStateDispatcher } from './link-records-state.rxstate';\nimport { SkyLinkRecordsMatchesOrchestrator } from './matches/matches.orchestrator';\nimport { SkyLinkRecordsFieldsOrchestrator } from './fields/fields.orchestrator';\nimport { SkyLinkRecordsResultsOrchestrator } from './results/results.orchestrator';\nimport { SkyLinkRecordsSelectedOrchestrator } from './selected/selected.orchestrator';\n\n\nexport class SkyLinkRecordsState extends StateNode<SkyLinkRecordsStateModel> {\n  constructor(initialState: SkyLinkRecordsStateModel, dispatcher: SkyLinkRecordsStateDispatcher) {\n    super(initialState, dispatcher);\n\n    this\n      .register('matches', SkyLinkRecordsMatchesOrchestrator)\n      .register('fields', SkyLinkRecordsFieldsOrchestrator)\n      .register('results', SkyLinkRecordsResultsOrchestrator)\n      .register('selected', SkyLinkRecordsSelectedOrchestrator)\n      .begin();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SkyLinkRecordsStateModel, },\n{type: SkyLinkRecordsStateDispatcher, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}