{"version":3,"sources":["../../../../../.srctemp/modules/link-records/state/matches/matches.orchestrator.ts"],"names":[],"mappings":"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","file":"matches.orchestrator.js","sourceRoot":"","sourcesContent":["import { SkyLinkRecordsStateOrchestrator } from '../link-records-state.rxstate';\nimport { AsyncList } from 'microedge-rxstate/dist';\nconst moment = require('moment');\n\nimport { SKY_LINK_RECORDS_STATUSES } from '../../link-records-statuses';\nimport { SkyLinkRecordsMatchModel } from './match.model';\nimport {\n  SkyLinkRecordsMatchesLoadAction,\n  SkyLinkRecordsMatchesSetStatusAction,\n  SkyLinkRecordsMatchesSetItemAction\n} from './actions';\n\nexport class SkyLinkRecordsMatchesOrchestrator\n  extends SkyLinkRecordsStateOrchestrator<AsyncList<SkyLinkRecordsMatchModel>> {\n  constructor() {\n    super();\n\n    this\n      .register(SkyLinkRecordsMatchesLoadAction, this.load)\n      .register(SkyLinkRecordsMatchesSetStatusAction, this.setStatus)\n      .register(SkyLinkRecordsMatchesSetItemAction, this.setItem);\n  }\n\n  private load(\n    state: AsyncList<SkyLinkRecordsMatchModel>,\n    action: SkyLinkRecordsMatchesLoadAction): AsyncList<SkyLinkRecordsMatchModel> {\n    const newMatches = action.matches\n      .filter(m => m)\n      .map(m => new SkyLinkRecordsMatchModel(m))\n      .filter(m => m.status !== SKY_LINK_RECORDS_STATUSES.NoMatch\n        || !SKY_LINK_RECORDS_STATUSES.isValid(status));\n\n    if (action.refresh) {\n      return new AsyncList<SkyLinkRecordsMatchModel>([...newMatches], moment());\n    }\n\n    return new AsyncList<SkyLinkRecordsMatchModel>([...state.items, ...newMatches], moment());\n  }\n\n  private setStatus(\n    state: AsyncList<SkyLinkRecordsMatchModel>,\n    action: SkyLinkRecordsMatchesSetStatusAction): AsyncList<SkyLinkRecordsMatchModel> {\n      const newMatches = state.items\n        .filter(m => m)\n        .map(m => {\n          let match = new SkyLinkRecordsMatchModel(m);\n          if (match.key === action.key) {\n            match.status = action.status;\n          }\n\n          return match;\n        })\n        .filter(m => m.status !== SKY_LINK_RECORDS_STATUSES.NoMatch\n          || !SKY_LINK_RECORDS_STATUSES.isValid(status));\n\n      return new AsyncList<SkyLinkRecordsMatchModel>([...newMatches], moment());\n  }\n\n  private setItem(\n    state: AsyncList<SkyLinkRecordsMatchModel>,\n    action: SkyLinkRecordsMatchesSetItemAction): AsyncList<SkyLinkRecordsMatchModel> {\n      const newMatches = state.items\n        .filter(m => m)\n        .map(m => {\n          let match = new SkyLinkRecordsMatchModel(m);\n          if (match.key === action.key) {\n            match.item = (action.item) ? Object.assign({}, action.item) : undefined;\n          }\n\n          return match;\n        })\n        .filter(m => m.status !== SKY_LINK_RECORDS_STATUSES.NoMatch\n          || !SKY_LINK_RECORDS_STATUSES.isValid(status));\n\n      return new AsyncList<SkyLinkRecordsMatchModel>([...newMatches], moment());\n  }\n}\n"]}