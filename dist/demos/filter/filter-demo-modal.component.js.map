{"version":3,"sources":["../../../.srctemp/demos/filter/filter-demo-modal.component.ts"],"names":[],"mappings":"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","file":"filter-demo-modal.component.js","sourceRoot":"","sourcesContent":["import { Component } from '@angular/core';\n\nimport { SkyModalInstance } from '../../core';\n\nimport { SkyFilterDemoModalContext } from './filter-demo-modal-context';\n\n\nexport class SkyFilterDemoModalComponent {\n  public fruitType = 'any';\n  public hideOrange: boolean;\n\n  constructor(\n    public context: SkyFilterDemoModalContext,\n    public instance: SkyModalInstance\n  ) {\n    if (\n      this.context &&\n      this.context.appliedFilters &&\n      this.context.appliedFilters.length > 0\n    ) {\n      this.setFormFilters(this.context.appliedFilters);\n    } else {\n      this.clearAllFilters();\n    }\n  }\n\n  public applyFilters() {\n    let result = this.getAppliedFiltersArray();\n    this.instance.save(result);\n  }\n\n  public clearAllFilters() {\n    this.hideOrange = false;\n    this.fruitType = 'any';\n  }\n\n  public cancel() {\n    this.instance.cancel();\n  }\n\n  private getAppliedFiltersArray() {\n    let appliedFilters: any[] = [];\n    if (this.fruitType !== 'any') {\n      appliedFilters.push({\n        name: 'fruitType',\n        value: this.fruitType,\n        label: this.fruitType\n      });\n    }\n\n    if (this.hideOrange) {\n      appliedFilters.push({\n        name: 'hideOrange',\n        value: true,\n        label: 'hide orange fruits'\n      });\n    }\n\n    return appliedFilters;\n  }\n\n  private setFormFilters(appliedFilters: any[]) {\n    for (let i = 0; i < appliedFilters.length; i++) {\n      if (appliedFilters[i].name === 'fruitType') {\n        this.fruitType = appliedFilters[i].value;\n      }\n\n      if (appliedFilters[i].name === 'hideOrange') {\n        this.hideOrange = appliedFilters[i].value;\n      }\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sky-demo-filter-modal-form',\n  template: `<sky-modal>\n  <sky-modal-header>\n    Food preferences\n  </sky-modal-header>\n  <sky-modal-content>\n    <label for=\"sky-demo-select-type\">Fruit type</label>\n    <select id=\"sky-demo-select-type\" [(ngModel)]=\"fruitType\" class=\"sky-form-control\">\n      <option value=\"any\">Any fruit</option>\n      <option value=\"citrus\">Citrus</option>\n      <option value=\"berry\">Berry</option>\n    </select>\n    <div style=\"margin-top: 15px;\">\n      <sky-checkbox [(ngModel)]=\"hideOrange\">\n        <sky-checkbox-label>\n          Hide orange fruits\n        </sky-checkbox-label>\n      </sky-checkbox>\n    </div>\n  </sky-modal-content>\n  <sky-modal-footer>\n    <button\n      type=\"button\"\n      class=\"sky-btn sky-btn-primary\"\n      (click)=\"applyFilters()\">\n      Apply filters\n    </button>\n    <button\n      type=\"button\"\n      class=\"sky-btn sky-btn-link\"\n      (click)=\"clearAllFilters()\">\n      Clear all filters\n    </button>\n    <button\n      type=\"button\"\n      class=\"sky-btn sky-btn-link\"\n      (click)=\"cancel()\">\n      Cancel\n    </button>\n  </sky-modal-footer>\n</sky-modal>\n`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SkyFilterDemoModalContext, },\n{type: SkyModalInstance, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}