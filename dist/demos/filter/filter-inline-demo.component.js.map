{"version":3,"sources":["../../../.srctemp/demos/filter/filter-inline-demo.component.ts"],"names":[],"mappings":"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","file":"filter-inline-demo.component.js","sourceRoot":"","sourcesContent":["import { Component } from '@angular/core';\n\n\nexport class SkyFilterInlineDemoComponent {\n\n  public filtersActive: boolean = false;\n\n  public showInlineFilters: boolean = false;\n\n  public fruitType: string = 'any';\n\n  public hideOrange: boolean = false;\n\n  public items: any[] = [\n      {\n          name: 'Orange',\n          description: 'A round, orange fruit.',\n          type: 'citrus',\n          color: 'orange'\n      },\n      {\n          name: 'Mango',\n          description: 'Delicious in smoothies, but don\\'t eat the skin.',\n          type: 'other',\n          color: 'orange'\n      },\n      {\n          name: 'Lime',\n          description: 'A sour, green fruit used in many drinks.',\n          type: 'citrus',\n          color: 'green'\n      },\n      {\n          name: 'Strawberry',\n          description: 'A red fruit that goes well with shortcake.',\n          type: 'berry',\n          color: 'red'\n      },\n      {\n          name: 'Blueberry',\n          description: 'A small, blue fruit often found in muffins.',\n          type: 'berry',\n          color: 'blue'\n      }\n\n  ];\n\n  public filteredItems: any[];\n\n  public appliedFilters: any[] = [];\n\n  constructor() {\n    this.filteredItems = this.items.slice();\n  }\n\n  public filterButtonClicked() {\n    this.showInlineFilters = !this.showInlineFilters;\n  }\n\n  public fruitTypeChange(newValue: string) {\n    this.fruitType = newValue;\n    this.setFilterActiveState();\n  }\n\n  public hideOrangeChange(newValue: boolean) {\n    this.hideOrange = newValue;\n    this.setFilterActiveState();\n  }\n\n  private setFilterActiveState() {\n    this.appliedFilters = [];\n    if (this.fruitType !== 'any') {\n      this.appliedFilters.push({\n        name: 'fruitType',\n        value: this.fruitType\n      });\n    }\n    if (this.hideOrange) {\n      this.appliedFilters.push({\n        name: 'hideOrange',\n        value: true\n      });\n    }\n    this.filtersActive = this.appliedFilters.length > 0;\n\n    this.filteredItems = this.filterItems(this.items, this.appliedFilters);\n  }\n\n  private orangeFilterFailed(filter: any, item: any) {\n    return filter.name === 'hideOrange' && filter.value && item.color === 'orange';\n  }\n\n  private fruitTypeFilterFailed(filter: any, item: any) {\n    return filter.name === 'fruitType' && filter.value !== 'any' && filter.value !== item.type;\n  }\n\n  private itemIsShown(filters: any[], item: any[]) {\n    let passesFilter = true,\n        j: number;\n\n    for (j = 0; j < filters.length; j++) {\n      if (this.orangeFilterFailed(filters[j], item)) {\n        passesFilter = false;\n      } else if (this.fruitTypeFilterFailed(filters[j], item)) {\n        passesFilter = false;\n      }\n    }\n\n    return passesFilter;\n  }\n\n  private filterItems(items: any[], filters: any[]) {\n      let i: number,\n          passesFilter: boolean,\n          result: any[] = [];\n\n      for (i = 0; i < items.length; i++) {\n        passesFilter = this.itemIsShown(filters, items[i]);\n        if (passesFilter) {\n          result.push(items[i]);\n        }\n      }\n\n      return result;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sky-filter-inline-demo',\n  template: `<div>\n  <sky-toolbar>\n    <sky-toolbar-section>\n      <sky-toolbar-item>\n        <sky-filter-button\n          [active]=\"filtersActive\"\n          (filterButtonClick)=\"filterButtonClicked()\">\n        </sky-filter-button>\n      </sky-toolbar-item>\n    </sky-toolbar-section>\n  </sky-toolbar>\n  <sky-filter-inline [hidden]=\"!showInlineFilters\">\n    <sky-filter-inline-item>\n      <label for=\"sky-demo-select-type\">Fruit type</label>\n      <select\n        id=\"sky-demo-select-type\"\n        [ngModel]=\"fruitType\"\n        (ngModelChange)=\"fruitTypeChange($event)\">\n        <option value=\"any\">Any fruit</option>\n        <option value=\"citrus\">Citrus</option>\n        <option value=\"berry\">Berry</option>\n      </select>\n    </sky-filter-inline-item>\n    <sky-filter-inline-item>\n      <sky-checkbox\n        [ngModel]=\"hideOrange\"\n        (ngModelChange)=\"hideOrangeChange($event)\"\n        >\n        <sky-checkbox-label>\n          Hide orange fruits\n        </sky-checkbox-label>\n      </sky-checkbox>\n    </sky-filter-inline-item>\n  </sky-filter-inline>\n  <sky-repeater expandMode=\"none\">\n    <sky-repeater-item *ngFor=\"let item of filteredItems\">\n      <sky-repeater-item-title>\n        {{item.name}}\n      </sky-repeater-item-title>\n      <sky-repeater-item-content>\n        <div>\n          {{item.description}}\n        </div>\n      </sky-repeater-item-content>\n    </sky-repeater-item>\n  </sky-repeater>\n\n</div>\n`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}