{"version":3,"sources":["../../../.srctemp/demos/tokens/tokens-demo.component.ts"],"names":[],"mappings":"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","file":"tokens-demo.component.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  OnDestroy\n} from '@angular/core';\n\nimport { Subject } from 'rxjs/Subject';\n\nimport {\n  SkyToken,\n  SkyTokenSelectedEventArgs,\n  SkyTokensMessageType,\n  SkyTokensMessage\n} from '../../core';\n\n\nexport class SkyTokensDemoComponent implements OnDestroy {\n  public colors: SkyToken[];\n  public filters: SkyToken[];\n  public tokensController: Subject<SkyTokensMessage>;\n\n  private defaultColors = [\n    { name: 'Red' },\n    { name: 'Black' },\n    { name: 'Blue' },\n    { name: 'Brown' },\n    { name: 'Green' },\n    { name: 'Orange' },\n    { name: 'Pink' },\n    { name: 'Purple' },\n    { name: 'Turquoise' },\n    { name: 'White' },\n    { name: 'Yellow' }\n  ];\n\n  private selectedFilters = [\n    { label: 'Canada' },\n    { label: 'Older than 55' },\n    { label: 'Employed' },\n    { label: 'Added before 2018' }\n  ];\n\n  constructor() {\n    this.createColors();\n    this.filters = this.parseTokens(this.selectedFilters);\n  }\n\n  public ngOnDestroy() {\n    if (this.tokensController) {\n      this.tokensController.complete();\n    }\n  }\n\n  public resetColors() {\n    this.createColors();\n  }\n\n  public changeColors() {\n    this.colors = this.parseTokens([\n      { name: 'Red' },\n      { name: 'White' },\n      { name: 'Blue' }\n    ]);\n  }\n\n  public destroyColors() {\n    this.colors = undefined;\n  }\n\n  public createColors() {\n    this.colors = this.parseTokens(this.defaultColors);\n  }\n\n  public onTokenSelected(args: SkyTokenSelectedEventArgs) {\n    console.log('Token selected:', args);\n  }\n\n  public onFocusIndexUnderRange() {\n    console.log('Focus index was less than zero.');\n  }\n\n  public onFocusIndexOverRange() {\n    console.log('Focus index was greater than the number of tokens.');\n  }\n\n  public focusLastToken() {\n    if (!this.tokensController) {\n      this.tokensController = new Subject<SkyTokensMessage>();\n    }\n\n    this.tokensController.next({\n      type: SkyTokensMessageType.FocusLastToken\n    });\n  }\n\n  private parseTokens(data: any[]): SkyToken[] {\n    return data.map((item: any) => {\n      return {\n        value: item\n      } as SkyToken;\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sky-tokens-demo',\n  template: `<h3 class=\"sky-subsection-heading\">\n  Default setup\n</h3>\n\n<p>\n  These tokens can be navigated with the arrow keys, and they can be dismissed with the close buttons.\n</p>\n\n<p>\n  <sky-tokens\n    [(tokens)]=\"colors\">\n  </sky-tokens>\n</p>\n\n<hr>\n\n<h3 class=\"sky-subsection-heading\">\n  Non-dismissible tokens\n</h3>\n\n<p>\n  These tokens cannot be dismissed, but they can still be navigated with the arrow keys.\n</p>\n\n<p>\n  <sky-tokens\n    [(tokens)]=\"colors\"\n    [dismissible]=\"false\">\n  </sky-tokens>\n</p>\n\n<hr>\n\n<h3 class=\"sky-subsection-heading\">\n  Non-focusable tokens\n</h3>\n\n<p>\n  These tokens cannot be focused using the tab key, but they can still be clicked and navigated with the arrow keys.\n</p>\n\n<p>\n  <sky-tokens\n    [(tokens)]=\"colors\"\n    [dismissible]=\"false\"\n    [focusable]=\"false\">\n  </sky-tokens>\n</p>\n\n<hr>\n\n<h3 class=\"sky-subsection-heading\">\n  Disabled tokens\n</h3>\n\n<p>\n  These tokens are disabled and cannot be dismissed or navigated with the arrow keys.\n</p>\n\n<p>\n  <sky-tokens\n    [(tokens)]=\"colors\"\n    [disabled]=\"true\">\n  </sky-tokens>\n</p>\n\n<hr>\n\n<h3 class=\"sky-subsection-heading\">\n  Token value interactions\n</h3>\n\n<p>\n  <button\n    class=\"sky-btn sky-btn-default\"\n    type=\"button\"\n    (click)=\"changeColors()\">\n    Change tokens\n  </button>\n\n  <button\n    class=\"sky-btn sky-btn-default\"\n    type=\"button\"\n    (click)=\"resetColors()\">\n    Reset tokens\n  </button>\n\n  <button\n    class=\"sky-btn sky-btn-default\"\n    type=\"button\"\n    (click)=\"destroyColors()\">\n    Destroy tokens\n  </button>\n</p>\n\n<hr>\n\n<h3 class=\"sky-subsection-heading\">\n  Custom setup\n</h3>\n\n<p>\n  These tokens define a custom property to display their values. When users select a token, it emits an event.\n</p>\n\n<p>\n  <sky-tokens\n    displayWith=\"label\"\n    [(tokens)]=\"filters\"\n    [messageStream]=\"tokensController\"\n    (focusIndexOverRange)=\"onFocusIndexOverRange()\"\n    (focusIndexUnderRange)=\"onFocusIndexUnderRange()\"\n    (tokenSelected)=\"onTokenSelected($event)\">\n    (You may also include content inside the tokens component.)\n  </sky-tokens>\n</p>\n\n<p>\n  <button\n    class=\"sky-btn sky-btn-default\"\n    (click)=\"focusLastToken()\">\n    Focus last token\n  </button>\n</p>\n`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}