{"version":3,"sources":["../../../.srctemp/demos/list/list-provider-demo.component.ts"],"names":[],"mappings":"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","file":"list-provider-demo.component.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  Injectable\n} from '@angular/core';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/of';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport 'rxjs/add/operator/map';\n\nimport {\n  ListDataProvider,\n  ListDataRequestModel,\n  ListDataResponseModel,\n  ListItemModel\n} from '../../core';\n\n\nexport class DemoListProvider extends ListDataProvider {\n  public items: Observable<ListItemModel[]>;\n  public remoteCount: BehaviorSubject<number> = new BehaviorSubject<number>(0);\n\n  constructor() {\n    super();\n\n    this.items = Observable.of([\n      {\n        id: '1',\n        data: {\n          column1: 101, column2: 'Apple', column3: 'Anne eats apples'\n        }\n      },\n      {\n        id: '2',\n        data: {\n          column1: 202, column2: 'Banana', column3: 'Ben eats bananas'\n        }\n      },\n      {\n        id: '3',\n        data: {\n          column1: 303, column2: 'Pear', column3: 'Patty eats pears'\n        }\n      },\n      {\n        id: '4',\n        data: {\n          column1: 404, column2: 'Grape', column3: 'George eats grapes'\n        }\n      },\n      {\n        id: '5',\n        data: {\n          column1: 505, column2: 'Banana', column3: 'Becky eats bananas'\n        }\n      },\n      {\n        id: '6',\n        data: {\n          column1: 606, column2: 'Lemon', column3: 'Larry eats lemons'\n        }\n      },\n      {\n        id: '7',\n        data: {\n          column1: 707, column2: 'Strawberry', column3: 'Sally eats strawberries'\n        }\n      }\n    ]);\n  }\n\n  public get(request: ListDataRequestModel): Observable<ListDataResponseModel> {\n    /*\n      In get() you get data based on a given ListDataRequestModel.\n      You can fetch data remotely here and return an Observable<ListDataResponseModel>.\n    */\n    return this.fakeHttpRequest(request);\n  }\n\n  public count(): Observable<number> {\n    return this.remoteCount;\n  }\n\n  private fakeHttpRequest(request: ListDataRequestModel): Observable<ListDataResponseModel> {\n    return this.items.map((items: ListItemModel[]) => {\n      let searchedList = items;\n\n      if (request.search.searchText) {\n        let searchText = request.search.searchText.toLowerCase();\n\n        searchedList = items.filter((item) => {\n          return (\n            item.data.column2.toLowerCase().indexOf(searchText) > -1 ||\n            item.data.column3.toLowerCase().indexOf(searchText) > -1\n          );\n        });\n      }\n\n      let itemStart = (request.pageNumber - 1) * request.pageSize;\n      let pagedResult = searchedList.slice(itemStart, itemStart + request.pageSize);\n\n      this.remoteCount.next(searchedList.length);\n\n      return new ListDataResponseModel({\n        count: searchedList.length,\n        items: pagedResult\n      });\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n\nexport class SkyListProviderDemoComponent {\n  constructor(\n    public listDataProvider: DemoListProvider\n  ) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sky-list-provider-demo',\n  template: `<sky-list [dataProvider]=\"listDataProvider\">\n  <sky-list-toolbar></sky-list-toolbar>\n\n  <sky-list-view-grid fit=\"scroll\">\n    <sky-grid-column field=\"column1\" heading=\"Column1\"></sky-grid-column>\n    <sky-grid-column field=\"column2\" heading=\"Column2\"></sky-grid-column>\n    <sky-grid-column field=\"column3\" heading=\"Column3\"></sky-grid-column>\n  </sky-list-view-grid>\n\n  <sky-list-paging pageSize=\"5\"></sky-list-paging>\n</sky-list>\n`,\n  providers: [DemoListProvider]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DemoListProvider, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}