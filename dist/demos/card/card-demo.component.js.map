{"version":3,"sources":["../../../.srctemp/demos/card/card-demo.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAU,MAAO,eAAA,CAAgB;AAG1C;IAAA;QACS,cAAS,GAAG,IAAI,CAAC;QACjB,gBAAW,GAAG,IAAI,CAAC;QACnB,eAAU,GAAG,IAAI,CAAC;QAClB,iBAAY,GAAG,IAAI,CAAC;IAgE7B,CAAC;IAAD,2BAAC;AAAD,CApEA,AAoEC;;AA/DM,+BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,eAAe;gBACzB,QAAQ,EAAE,68DAsDX;aACA,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,mCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC","file":"card-demo.component.js","sourceRoot":"","sourcesContent":["import { Component } from '@angular/core';\n\n\nexport class SkyCardDemoComponent {\n  public showTitle = true;\n  public showContent = true;\n  public showAction = true;\n  public showCheckbox = true;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sky-card-demo',\n  template: `<sky-card [selectable]=\"showCheckbox\">\n  <sky-card-title *ngIf=\"showTitle\">Large card</sky-card-title>\n  <sky-card-content *ngIf=\"showContent\">\n    This card demonstrates the amount of space that is available for a card that uses\n    the default large size. If the content does not require this much space, you can\n    set the card size to small. The type of content to display in the body of a card\n    varies based on what the card represents and whether it prompts users to action.\n  </sky-card-content>\n  <sky-card-actions *ngIf=\"showAction\">\n    <button class=\"sky-btn sky-btn-default\">Click me</button>\n  </sky-card-actions>\n</sky-card>\n<sky-card size=\"small\" [selectable]=\"showCheckbox\">\n  <sky-card-title *ngIf=\"showTitle\">Small card</sky-card-title>\n  <sky-card-content *ngIf=\"showContent\">\n    This card demonstrates the reduced amount of space that is available when you\n    set the card size to small.\n  </sky-card-content>\n  <sky-card-actions *ngIf=\"showAction\">\n    <sky-dropdown buttonType=\"context-menu\">\n      <sky-dropdown-menu>\n        <sky-dropdown-item>\n          <button type=\"button\">\n            Action\n          </button>\n        </sky-dropdown-item>\n      </sky-dropdown-menu>\n    </sky-dropdown>\n  </sky-card-actions>\n</sky-card>\n<div>\n  <ul class=\"sky-list-unstyled\">\n    <li>\n      <sky-checkbox [(ngModel)]=\"showTitle\">\n        <sky-checkbox-label>Show title</sky-checkbox-label>\n      </sky-checkbox>\n    </li>\n    <li>\n      <sky-checkbox [(ngModel)]=\"showContent\">\n        <sky-checkbox-label>Show content</sky-checkbox-label>\n      </sky-checkbox>\n    </li>\n    <li>\n      <sky-checkbox [(ngModel)]=\"showAction\">\n        <sky-checkbox-label>Show action</sky-checkbox-label>\n      </sky-checkbox>\n    </li>\n    <li>\n      <sky-checkbox [(ngModel)]=\"showCheckbox\">\n        <sky-checkbox-label>Show checkbox</sky-checkbox-label>\n      </sky-checkbox>\n    </li>\n  </ul>\n</div>\n`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}