{"version":3,"sources":["../../../.srctemp/demos/grid/grid-demo.component.ts"],"names":[],"mappings":"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","file":"grid-demo.component.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  OnInit\n} from '@angular/core';\n\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nimport {\n  ListSortFieldSelectorModel\n} from '../../core';\n\n\nexport class SkyGridDemoComponent implements OnInit {\n  public items: any[] = [\n    { id: '1', column1: 101, column2: 'Apple', column3: 'Anne eats apples', composite: 'Comp A' },\n    { id: '2', column1: 202, column2: 'Banana', column3: 'Ben eats bananas', composite: 'Comp B' },\n    { id: '3', column1: 303, column2: 'Pear', column3: 'Patty eats pears', composite: 'Comp C' },\n    { id: '4', column1: 404, column2: 'Grape', column3: 'George eats grapes', composite: 'Comp D' },\n    { id: '5', column1: 505, column2: 'Banana', column3: 'Becky eats bananas',\n      composite: 'Comp E' },\n    { id: '6', column1: 606, column2: 'Lemon', column3: 'Larry eats lemons', composite: 'Comp F' },\n    { id: '7', column1: 707, column2: 'Strawberry', column3: 'Sally eats strawberries',\n      composite: 'Comp G' }\n  ];\n\n  public asyncHeading = new BehaviorSubject<string>('');\n\n  public ngOnInit() {\n    // Simulate async request:\n    setTimeout(() => {\n      this.asyncHeading.next('Column1');\n    }, 1000);\n  }\n\n  public sortChanged(activeSort: ListSortFieldSelectorModel) {\n    const sortField = activeSort.fieldSelector;\n    const descending = activeSort.descending;\n\n    this.items = this.items.sort((a: any, b: any) => {\n      let value1 = a[sortField];\n      let value2 = b[sortField];\n\n      if (value1 && typeof value1 === 'string') {\n        value1 = value1.toLowerCase();\n      }\n\n      if (value2 && typeof value2 === 'string') {\n        value2 = value2.toLowerCase();\n      }\n\n      if (value1 === value2) {\n        return 0;\n      }\n\n      let result = value1 > value2 ? 1 : -1;\n\n      if (descending) {\n        result *= -1;\n      }\n\n      return result;\n    }).slice();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sky-grid-demo',\n  template: `<sky-grid\n  fit=\"scroll\"\n  [data]=\"items\"\n  (sortFieldChange)=\"sortChanged($event)\">\n  <sky-grid-column\n    id=\"column1\"\n    field=\"column1\"\n    [heading]=\"asyncHeading | async\">\n  </sky-grid-column>\n  <sky-grid-column\n    id=\"column2\"\n    field=\"column2\"\n    heading=\"Column2\">\n  </sky-grid-column>\n  <sky-grid-column\n    id=\"column3\"\n    field=\"column3\"\n    heading=\"Column3\">\n  </sky-grid-column>\n  <sky-grid-column\n    id=\"composite\"\n    field=\"composite\"\n    heading=\"Composite column\"\n    [template]=\"customColumnTemplate\">\n  </sky-grid-column>\n</sky-grid>\n\n<ng-template\n  let-row=\"row\"\n  let-value=\"value\"\n  #customColumnTemplate>\n  <div>\n    Value: {{value}}\n  </div>\n  <div>\n    Column 2: {{row.column2}}\n  </div>\n</ng-template>\n`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}