{"version":3,"sources":["../../../.srctemp/modules/radio/radio.component.ts"],"names":[],"mappings":"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","file":"radio.component.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  forwardRef,\n  Input\n} from '@angular/core';\n\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\n/**\n * Auto-incrementing integer used to generate unique ids for checkbox components.\n */\nlet nextId = 0;\n\n/**\n * Provider Expression that allows sky-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n */\n// tslint:disable:no-forward-ref no-use-before-declare\nexport const SKY_RADIO_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SkyRadioComponent),\n  multi: true\n};\n// tslint:enable\n\n\nexport class SkyRadioComponent implements ControlValueAccessor {\n  /**\n   * Hidden label for screen readers.\n   */\n  \n  public label: string = '';\n\n  /**\n   * Id of label for the checkbox.\n   */\n  \n  public labelledBy: string;\n\n  \n  public id: string = `sky-radio-${++nextId}`;\n\n  \n  public disabled: boolean = false;\n\n  \n  public tabindex: number = 0;\n\n  \n  public name: string;\n\n  \n  public value: any;\n\n  public get inputId(): string {\n    return `input-${this.id}`;\n  }\n\n  public selectedValue: any;\n  private onChangeCallback: (value: any) => void;\n\n  public onInputBlur() {\n    this.onTouchedCallback();\n  }\n\n  public onRadioChanged(newValue: any) {\n    if (this.disabled) {\n      return;\n    }\n\n    if (newValue === this.selectedValue) {\n      return;\n    }\n\n    this.selectedValue = newValue;\n    this.onChangeCallback(newValue);\n  }\n\n  // Satisfying ControlValueAccessor interface.\n  public writeValue(value: any) {\n    if (value === undefined) {\n      return;\n    }\n\n    this.selectedValue = value;\n  }\n\n  // onChanged callback set by ControlValueAccessor.\n  public registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n  // onTouched callback set by ControlValueAccessor.\n  public registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n\n  // Satisfying ControlValueAccessor interface.\n  /* istanbul ignore next */\n  private onTouchedCallback(): () => void {\n    return () => {};\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sky-radio',\n  template: `<label class=\"sky-radio-wrapper\">\n  <input type=\"radio\"\n        [id]=\"inputId\"\n        [ngModel]=\"selectedValue\"\n        [disabled]=\"disabled\"\n        [name]=\"name\"\n        [value]=\"value\"\n        [tabIndex]=\"tabindex\"\n        [attr.aria-label]=\"label\"\n        [attr.aria-labelledby]=\"labelledBy\"\n        (blur)=\"onInputBlur()\"\n        (ngModelChange)=\"onRadioChanged($event)\"/>\n  <span class=\"sky-radio\"></span>\n  <ng-content select=\"sky-radio-label\"></ng-content>\n</label>\n`,\n  styles: [`.sky-radio-wrapper {\n  display: inline-block;\n  margin-bottom: 5px;\n  cursor: pointer;\n}\n\n.sky-radio-wrapper input {\n  opacity: 0;\n  position: absolute;\n  height: 22px;\n  width: 22px;\n  margin: 0;\n  padding: 0;\n  cursor: pointer;\n}\n\n.sky-radio {\n  border-top: 1px solid #cdcfd2;\n  border-bottom: 1px solid #cdcfd2;\n  border-left: 1px solid #cdcfd2;\n  border-right: 1px solid #cdcfd2;\n  cursor: pointer;\n  display: inline-block;\n  height: 22px;\n  margin: 0;\n  padding: 0;\n  vertical-align: middle;\n  width: 22px;\n  text-align: center;\n  font-size: 15px;\n  border-radius: 50%;\n  line-height: 19px;\n}\n\n.sky-radio-wrapper input:hover + .sky-radio {\n  border: 2px solid #007ca6;\n}\n\n.sky-radio-wrapper input:checked + .sky-radio {\n  background-color: #007ca6;\n  border-color: #007ca6;\n  border-width: 1px;\n}\n\n.sky-radio-wrapper input:checked + .sky-radio:before {\n  color: #ffffff;\n  content: \"\\\\f00c\";\n  font-family: FontAwesome;\n  font-size: 13px;\n}\n\n.sky-radio-wrapper input:disabled + .sky-radio {\n  background-color: #eeeeef;\n  border-top: 1px solid #e2e3e4;\n  border-bottom: 1px solid #e2e3e4;\n  border-left: 1px solid #e2e3e4;\n  border-right: 1px solid #e2e3e4;\n  cursor: default;\n}\n\n.sky-radio-wrapper input:focus + .sky-radio {\n  outline: thin dotted;\n  outline: -webkit-focus-ring-color auto 5px;\n}\n`],\n  providers: [SKY_RADIO_CONTROL_VALUE_ACCESSOR]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'label': [{ type: Input },],\n'labelledBy': [{ type: Input },],\n'id': [{ type: Input },],\n'disabled': [{ type: Input },],\n'tabindex': [{ type: Input },],\n'name': [{ type: Input },],\n'value': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}