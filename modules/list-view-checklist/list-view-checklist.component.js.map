{"version":3,"sources":["../../../.srctemp/modules/list-view-checklist/list-view-checklist.component.ts"],"names":[],"mappings":"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","file":"list-view-checklist.component.js","sourceRoot":"","sourcesContent":["import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  OnDestroy,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/operator/take';\n\nimport {\n  ListViewComponent\n} from '../list/list-view.component';\n\nimport {\n  AsyncList\n} from 'microedge-rxstate/dist';\n\nimport {\n  ListItemModel\n} from '../list/state/items/item.model';\n\nimport {\n  ListState,\n  ListStateDispatcher\n} from '../list/state';\n\nimport {\n  ChecklistState,\n  ChecklistStateDispatcher,\n  ChecklistStateModel\n} from './state';\n\nimport {\n  ListViewChecklistItemsLoadAction\n} from './state/items/actions';\n\nimport {\n  ListViewChecklistItemModel\n} from './state/items/item.model';\n\nimport {\n  ListToolbarItemModel\n} from '../list/state/toolbar/toolbar-item.model';\n\nimport {\n  ListToolbarSetTypeAction\n} from '../list/state/toolbar/actions';\n\nimport {\n  getData\n} from '../list/helpers';\n\nimport {\n  ListSelectedSetItemSelectedAction,\n  ListSelectedSetItemsSelectedAction\n} from '../list/state/selected/actions';\n\n\nexport class SkyListViewChecklistComponent extends ListViewComponent implements AfterViewInit, OnDestroy {\n  \n  set name(value: string) {\n    this.viewName = value;\n  }\n\n  \n  public search: (data: any, searchText: string) => boolean = this.searchFunction();\n\n  /* tslint:disable */\n  \n  public labelFieldSelector: string = 'label';\n  /* tslint:enable */\n\n  \n  public description: string = 'description';\n\n  \n  public set selectMode(value: string) {\n    this._selectMode = value;\n    this.updateActions();\n  }\n\n  public get selectMode(): string {\n    return this._selectMode;\n  }\n\n  \n  private selectAllTemplate: TemplateRef<any>;\n\n  \n  private clearSelectionsTemplate: TemplateRef<any>;\n\n  private hasSelectToolbarItems = false;\n  private ngUnsubscribe = new Subject();\n\n  private _selectMode = 'multiple';\n\n  constructor(\n    state: ListState,\n    private dispatcher: ListStateDispatcher,\n    private checklistState: ChecklistState,\n    private checklistDispatcher: ChecklistStateDispatcher\n  ) {\n    super(state, 'Checklist View');\n\n    let lastUpdate: any;\n    Observable.combineLatest(\n      this.state.map(s => s.items).distinctUntilChanged(),\n      (items: AsyncList<ListItemModel>) => {\n        let dataChanged = lastUpdate === undefined || items.lastUpdate !== lastUpdate;\n        lastUpdate = items.lastUpdate;\n        let newItems = items.items.map(item => {\n          return new ListViewChecklistItemModel(item.id, {\n            label:\n              this.labelFieldSelector ? getData(item.data, this.labelFieldSelector) : undefined,\n            description:\n              this.description ? getData(item.data, this.description) : undefined\n          });\n        });\n\n        this.checklistDispatcher.next(\n          new ListViewChecklistItemsLoadAction(newItems, true, dataChanged, items.count)\n        );\n      }\n    )\n    .takeUntil(this.ngUnsubscribe)\n    .subscribe();\n  }\n\n  public onViewActive() {\n    if (this.search !== undefined) {\n      this.dispatcher.searchSetFunctions([this.search]);\n    }\n\n    let fieldSelectors: Array<string> = [];\n    if (this.labelFieldSelector) {\n      fieldSelectors.push(this.labelFieldSelector);\n    }\n\n    if (this.description) {\n      fieldSelectors.push(this.description);\n    }\n\n    this.dispatcher.searchSetFieldSelectors(fieldSelectors);\n\n    this.dispatcher.next(new ListToolbarSetTypeAction('search'));\n  }\n\n  public ngAfterViewInit() {\n    this.updateActions();\n  }\n\n  public ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n\n  get items(): Observable<ListViewChecklistItemModel[]> {\n    return this.checklistState.map(state => state.items.items);\n  }\n\n  public searchFunction() {\n    return (data: any, searchText: string) => {\n      if (this.labelFieldSelector !== undefined) {\n        let label = getData(data, this.labelFieldSelector);\n        /* tslint:disable:no-null-keyword */\n        if (\n          label !== undefined &&\n          label !== null &&\n          label.toString().toLowerCase().indexOf(searchText) !== -1\n        ) {\n          return true;\n        }\n        /* tslint:enable:no-null-keyword */\n      }\n\n      if (this.description !== undefined) {\n        let description = getData(data, this.description);\n        /* tslint:disable:no-null-keyword */\n        if (\n          description !== undefined &&\n          description !== null &&\n          description.toString().toLowerCase().indexOf(searchText) !== -1\n        ) {\n          return true;\n        }\n        /* tslint:enable:no-null-keyword */\n      }\n\n      return false;\n    };\n  }\n\n  public itemSelected(id: string): Observable<boolean> {\n    return this.state.map(state => state.selected.item.selectedIdMap.get(id));\n  }\n\n  public setItemSelection(item: ListItemModel, event: any) {\n    this.dispatcher.next(new ListSelectedSetItemSelectedAction(item.id, event.checked));\n  }\n\n  public singleSelectRowClick(item: ListItemModel) {\n    this.dispatcher.next(new ListSelectedSetItemsSelectedAction([item.id], true, true));\n  }\n\n  public clearSelections() {\n    this.state.map(state => state.items.items)\n      .take(1)\n      .subscribe(items => {\n        this.dispatcher\n          .next(new ListSelectedSetItemsSelectedAction(items.map(item => item.id), false, false));\n      });\n  }\n\n  public selectAll() {\n    this.state.map(state => state.items.items)\n      .take(1)\n      .subscribe(items => {\n        this.dispatcher\n          .next(new ListSelectedSetItemsSelectedAction(items.map(item => item.id), true, false));\n      });\n  }\n\n  private updateActions() {\n    const selectAllId = 'select-all';\n    const clearAllId = 'clear-all';\n\n    switch (this.selectMode) {\n      case 'single':\n        this.dispatcher.toolbarRemoveItems([selectAllId, clearAllId]);\n        this.hasSelectToolbarItems = false;\n        break;\n      default:\n        if (!this.hasSelectToolbarItems) {\n          this.dispatcher.toolbarAddItems([\n            new ListToolbarItemModel(\n              {\n                id: 'select-all',\n                template: this.selectAllTemplate,\n                location: 'right',\n                index: 500,\n                view: this.id\n              }\n            ),\n            new ListToolbarItemModel(\n              {\n                id: 'clear-all',\n                template: this.clearSelectionsTemplate,\n                location: 'right',\n                index: 500,\n                view: this.id\n              }\n            )\n          ]);\n\n          this.hasSelectToolbarItems = true;\n        }\n        break;\n    }\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sky-list-view-checklist',\n  template: `<div class=\"sky-list-view-checklist\" *ngIf=\"active | async\">\n  <div [ngSwitch]=\"selectMode\">\n    <ng-template ngSwitchCase=\"single\">\n      <div role=\"radiogroup\">\n        <sky-list-view-checklist-item\n          *ngFor=\"let item of items | async\"\n          [item]=\"item\"\n          [attr.sky-cmp-id]=\"item.id\">\n            <button\n              role=\"radio\"\n              [attr.aria-checked]=\"(itemSelected(item.id) | async) || false\"\n              type=\"button\"\n              class=\"sky-list-view-checklist-single-button\"\n              [ngClass]=\"{ 'sky-list-view-checklist-row-selected' : (itemSelected(item.id) | async) }\"\n              (click)=\"singleSelectRowClick(item)\">\n              <div class=\"sky-emphasized\" *ngIf=\"item.label\">{{item.label}}</div>\n              <div *ngIf=\"item.description\">{{item.description}}</div>\n            </button>\n        </sky-list-view-checklist-item>\n      </div>\n    </ng-template>\n\n    <ng-template ngSwitchDefault>\n      <sky-list-view-checklist-item\n        *ngFor=\"let item of items | async\"\n        [item]=\"item\"\n        [attr.sky-cmp-id]=\"item.id\">\n          <sky-checkbox\n            [checked]=\"itemSelected(item.id) | async\"\n            (change)=\"setItemSelection(item, $event)\">\n            <sky-checkbox-label>\n              <div class=\"sky-emphasized\" *ngIf=\"item.label\" [attr.title]=\"item.label\">\n                {{item.label}}\n              </div>\n              <div *ngIf=\"item.description\" [attr.title]=\"item.description\">\n                {{item.description}}\n              </div>\n            </sky-checkbox-label>\n          </sky-checkbox>\n        </sky-list-view-checklist-item>\n    </ng-template>\n  </div>\n</div>\n\n\n<ng-template #selectAllTemplate>\n  <button\n    class=\"sky-btn sky-btn-link sky-list-view-checklist-select-all\"\n    (click)=\"selectAll(); false\"\n  >\n    {{'checklist_select_all' | skyResources}}\n  </button>\n</ng-template>\n\n<ng-template #clearSelectionsTemplate>\n  <button\n    class=\"sky-btn sky-btn-link sky-list-view-checklist-clear-all\"\n    (click)=\"clearSelections(); false\"\n  >\n    {{'checklist_clear_all' | skyResources}}\n  </button>\n</ng-template>\n`,\n  styles: [`.sky-list-view-checklist /deep/ .sky-checkbox-wrapper {\n  display: flex;\n  align-items: center;\n}\n\n.sky-list-view-checklist /deep/ .sky-checkbox-wrapper > .sky-checkbox, .sky-list-view-checklist /deep/ .sky-checkbox-wrapper > input {\n  flex: 1;\n  max-width: 22px;\n}\n`],\n  providers: [\n    /* tslint:disable */\n    { provide: ListViewComponent, useExisting: forwardRef(() => SkyListViewChecklistComponent)},\n    /* tslint:enable */\n    ChecklistState,\n    ChecklistStateDispatcher,\n    ChecklistStateModel\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ListState, },\n{type: ListStateDispatcher, },\n{type: ChecklistState, },\n{type: ChecklistStateDispatcher, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input },],\n'search': [{ type: Input },],\n'labelFieldSelector': [{ type: Input, args: ['label', ] },],\n'description': [{ type: Input },],\n'selectMode': [{ type: Input },],\n'selectAllTemplate': [{ type: ViewChild, args: ['selectAllTemplate', ] },],\n'clearSelectionsTemplate': [{ type: ViewChild, args: ['clearSelectionsTemplate', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}