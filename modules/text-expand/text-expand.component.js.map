{"version":3,"sources":["../../../.srctemp/modules/text-expand/text-expand.component.ts"],"names":[],"mappings":"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","file":"text-expand.component.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  Input,\n  ElementRef,\n  ViewChild,\n  AfterContentInit\n} from '@angular/core';\n\nimport {\n  SkyResourcesService\n} from '../resources';\nimport {\n  SkyModalService\n} from '../modal';\nimport {\n  SkyTextExpandModalComponent\n} from './text-expand-modal.component';\nimport {\n  SkyTextExpandModalContext\n} from './text-expand-modal-context';\nimport {\n  SkyTextExpandAdapterService\n} from './text-expand-adapter.service';\n\n\nexport class SkyTextExpandComponent implements AfterContentInit {\n\n  private _maxLength: number = 200;\n\n  \n  public set text(value: string) {\n    this.setup(value);\n  }\n  \n  public truncateNewlines = true;\n  \n  public set maxLength(value: number) {\n    this._maxLength = value;\n    this.setup(this.expandedText);\n  }\n  public get maxLength(): number { return this._maxLength; }\n  \n  public maxExpandedLength: number = 600;\n  \n  public maxExpandedNewlines: number = 2;\n  \n  public expandModalTitle: string = this.resources.getString('text_expand_modal_title');\n  \n  public containerEl: ElementRef;\n  \n  public textEl: ElementRef;\n\n  public isExpanded: boolean = false;\n  public expandable: boolean;\n  public buttonText: string;\n  private seeMoreText: string = this.resources.getString('text_expand_see_more');\n  private seeLessText: string = this.resources.getString('text_expand_see_less');\n  private textToShow: string;\n  private collapsedText: string;\n  private expandedText: string;\n  private newlineCount: number;\n\n  constructor(\n    private resources: SkyResourcesService,\n    private modalService: SkyModalService,\n    private textExpandAdapter: SkyTextExpandAdapterService) { }\n\n  public textExpand() {\n    if (this.newlineCount > this.maxExpandedNewlines\n      || this.expandedText.length > this.maxExpandedLength) {\n      // Modal View\n      /* istanbul ignore else */\n      /* sanity check */\n      if (!this.isExpanded) {\n        this.modalService.open(\n          SkyTextExpandModalComponent,\n          [\n            {\n              provide: SkyTextExpandModalContext,\n              useValue: {\n                header: this.expandModalTitle,\n                text: this.expandedText\n              }\n            }\n          ]\n        );\n      }\n    } else {\n      // Normal View\n      if (!this.isExpanded) {\n        this.setContainerMaxHeight();\n        setTimeout(() => {\n          this.isExpanded = true;\n          this\n            .animateText(this.collapsedText, this.expandedText, true);\n        }, 10);\n\n      } else {\n        this.setContainerMaxHeight();\n        setTimeout(() => {\n          this.isExpanded = false;\n          this\n            .animateText(this.expandedText, this.collapsedText, false);\n        }, 10);\n      }\n    }\n  }\n\n  public animationEnd() {\n    // Ensure the correct text is displayed\n    this.textExpandAdapter.setText(this.textEl, this.textToShow);\n    // Set height back to auto so the browser can change the height as needed with window changes\n    this.textExpandAdapter.setContainerHeight(this.containerEl, undefined);\n  }\n\n  public ngAfterContentInit() {\n    this.setup(this.expandedText);\n  }\n\n  private setContainerMaxHeight() {\n    // ensure everything is reset\n    this.animationEnd();\n    /* Before animation is kicked off, ensure that a maxHeight exists */\n    /* Once we have support for angular v4 animations with parameters we can use that instead */\n    let currentHeight = this.textExpandAdapter.getContainerHeight(this.containerEl);\n    this.textExpandAdapter.setContainerHeight(this.containerEl, `${currentHeight}px`);\n  }\n\n  private setup(value: string) {\n    if (value) {\n      this.newlineCount = this.getNewlineCount(value);\n      this.collapsedText = this.getTruncatedText(value, this.maxLength);\n      this.expandedText = value;\n      if (this.collapsedText !== value) {\n        this.buttonText = this.seeMoreText;\n        this.isExpanded = false;\n        this.expandable = true;\n      } else {\n        this.expandable = false;\n      }\n      this.textToShow = this.collapsedText;\n    } else {\n      this.textToShow = '';\n      this.expandable = false;\n    }\n    this.textExpandAdapter.setText(this.textEl, this.textToShow);\n  }\n\n  private getNewlineCount(value: string) {\n    let matches = value.match(/\\n/gi);\n\n    if (matches) {\n      return matches.length;\n    }\n\n    return 0;\n  }\n  private getTruncatedText(value: string, length: number) {\n    let i: number;\n    if (this.truncateNewlines) {\n      value = value.replace(/\\n+/gi, ' ');\n    }\n    // Jump ahead one character and see if it's a space, and if it isn't,\n    // back up to the first space and break there so a word doesn't get cut\n    // in half.\n    if (length < value.length) {\n      for (i = length; i > length - 10; i--) {\n        if (/\\s/.test(value.charAt(i))) {\n          length = i;\n          break;\n        }\n      }\n    }\n    return value.substr(0, length);\n  }\n\n  private animateText(previousText: string, newText: string,\n    expanding: boolean) {\n\n    let adapter = this.textExpandAdapter;\n    let container = this.containerEl;\n    // Reset max height\n    adapter.setContainerHeight(container, undefined);\n    // Measure the current height so we can animate from it.\n    let currentHeight = adapter.getContainerHeight(container);\n    this.textToShow = newText;\n    adapter.setText(this.textEl, this.textToShow);\n    this.buttonText = expanding ? this.seeLessText : this.seeMoreText;\n    // Measure the new height so we can animate to it.\n    let newHeight = adapter.getContainerHeight(container);\n    if (newHeight < currentHeight) {\n      // The new text is smaller than the old text, so put the old text back before doing\n      // the collapse animation to avoid showing a big chunk of whitespace.\n      adapter.setText(this.textEl, previousText);\n    }\n\n    adapter.setContainerHeight(container, `${currentHeight}px`);\n    // This timeout is necessary due to the browser needing to pick up the non-auto height being set\n    // in order to do the transtion in height correctly. Without it the transition does not fire.\n    setTimeout(() => {\n      adapter.setContainerHeight(container, `${newHeight}px`);\n      /* This resets values if the transition does not get kicked off */\n      setTimeout(() => {\n        this.animationEnd();\n      }, 500);\n    }, 10);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sky-text-expand',\n  template: `<div\n  class=\"sky-text-expand-container\"\n  (transitionend)=\"animationEnd()\"\n   #container>\n  <span class=\"sky-text-expand-text\" #text></span>\n  <span class=\"sky-text-expand-ellipsis\" *ngIf=\"!isExpanded && expandable\">... </span>\n  <button type=\"button\" class=\"sky-btn sky-btn-link-inline sky-text-expand-see-more\" *ngIf=\"expandable\" (click)=\"textExpand()\">{{buttonText}}</button>\n</div>\n`,\n  styles: [`.sky-text-expand-ellipsis {\n  letter-spacing: 2px;\n  white-space: nowrap;\n  margin-right: 3px;\n}\n\n.sky-text-expand-space {\n  white-space: normal;\n}\n\n.sky-text-expand-see-more {\n  white-space: nowrap;\n}\n\n.sky-text-expand-text {\n  margin: 0;\n  white-space: pre-wrap;\n}\n\n.sky-text-expand-container {\n  word-break: break-word;\n  word-wrap: break-word;\n  overflow: hidden;\n  height: auto;\n  transition: max-height 250ms;\n}\n\n.sky-text-expand-modal-content {\n  white-space: pre-line;\n}\n`],\n  providers: [\n    SkyTextExpandAdapterService,\n    SkyResourcesService\n  ]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SkyResourcesService, },\n{type: SkyModalService, },\n{type: SkyTextExpandAdapterService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'text': [{ type: Input },],\n'truncateNewlines': [{ type: Input },],\n'maxLength': [{ type: Input },],\n'maxExpandedLength': [{ type: Input },],\n'maxExpandedNewlines': [{ type: Input },],\n'expandModalTitle': [{ type: Input },],\n'containerEl': [{ type: ViewChild, args: ['container', ] },],\n'textEl': [{ type: ViewChild, args: ['text', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}