{"version":3,"sources":["../../../.srctemp/modules/tabs/tabset.service.ts"],"names":[],"mappings":"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","file":"tabset.service.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { SkyTabComponent } from './tab.component';\n\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport 'rxjs/add/operator/take';\n\n\nexport class SkyTabsetService {\n\n  public tabs: BehaviorSubject<Array<SkyTabComponent>>\n    = new BehaviorSubject<Array<SkyTabComponent>>([]);\n\n  public activeIndex: BehaviorSubject<any> = new BehaviorSubject(0);\n\n  public activateTab(tab: SkyTabComponent) {\n    this.tabs.take(1).subscribe((currentTabs) => {\n      this.activeIndex.next(tab.tabIndex);\n    });\n  }\n\n  public activateTabIndex(tabIndex: string | number) {\n\n    this.tabs.take(1).subscribe((currentTabs) => {\n      let newSelectedTab = this.getTabFromIndex(tabIndex, currentTabs);\n\n      if (newSelectedTab) {\n        this.activeIndex.next(newSelectedTab.tabIndex);\n      } else {\n        this.activeIndex.next(tabIndex);\n      }\n    });\n  }\n\n  public addTab(tab: SkyTabComponent) {\n\n    this.tabs.take(1).subscribe((currentTabs) => {\n      if (!tab.tabIndex) {\n        tab.tabIndex = 0;\n        let lastTabIndex = this.getLastTabIndex(currentTabs);\n        if (currentTabs && (lastTabIndex || lastTabIndex === 0)) {\n          tab.tabIndex = lastTabIndex + 1;\n        }\n      }\n      currentTabs.push(tab);\n      this.tabs.next(currentTabs);\n    });\n  }\n\n  public destroyTab(tab: SkyTabComponent) {\n\n    this.tabs.take(1).subscribe((currentTabs) => {\n\n      let tabIndex = currentTabs.indexOf(tab);\n      if (tab.active) {\n        // Try selecting the next tab first, and if there's no next tab then\n        // try selecting the previous one.\n        let newActiveTab = currentTabs[tabIndex + 1] || currentTabs[tabIndex - 1];\n\n        /*istanbul ignore else */\n        if (newActiveTab) {\n          this.activeIndex.next(newActiveTab.tabIndex);\n        }\n      }\n\n      if (tabIndex > -1) {\n        currentTabs.splice(tabIndex, 1);\n      }\n      this.tabs.next(currentTabs);\n    });\n\n  }\n\n  public destroy() {\n    this.tabs.complete();\n    this.activeIndex.complete();\n  }\n\n  private getLastTabIndex(tabs: Array<SkyTabComponent>) {\n    let result: any = undefined;\n    for (let i = 0; i < tabs.length; i++) {\n      if (typeof tabs[i].tabIndex === 'number' &&\n        (result === undefined || result < tabs[i].tabIndex)) {\n        result = tabs[i].tabIndex;\n      }\n    }\n    return result;\n  }\n\n  private getTabFromIndex(index: string | number, currentTabs: Array<SkyTabComponent>) {\n    for (let i = 0, n = currentTabs.length; i < n; i++) {\n      let existingTab = currentTabs[i];\n\n      if (existingTab.tabIndex === index || existingTab.tabIndex.toString() === index) {\n        return existingTab;\n      }\n    }\n\n    return undefined;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}