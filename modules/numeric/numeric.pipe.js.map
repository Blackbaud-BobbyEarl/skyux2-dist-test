{"version":3,"sources":["../../../.srctemp/modules/numeric/numeric.pipe.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAA,EAAoB,MAAO,eAAA,CAAgB;AACpD,OAAO,EAAE,iBAAA,EAAkB,MAAO,mBAAA,CAAoB;AACtD,OAAO,EAAE,cAAA,EAAe,MAAO,mBAAA,CAAoB;AAEnD;;;;;;;;;;;;;;;;;;;EAmBE;AAEF;IAEE,wBACmB,UAA6B;QAA7B,eAAU,GAAV,UAAU,CAAmB;IAC5C,CAAC;IAEE,kCAAS,GAAhB,UAAiB,KAAa,EAAE,aAAkB;QAChD,IAAI,OAAO,GAAG,IAAI,cAAc,EAAE,CAAC;QACnC,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YAClB,EAAE,CAAC,CAAC,aAAa,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;gBACvC,OAAO,CAAC,MAAM,GAAG,aAAa,CAAC,MAAM,CAAC;YACxC,CAAC;YACD,EAAE,CAAC,CAAC,aAAa,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;gBACvC,OAAO,CAAC,MAAM,GAAG,aAAa,CAAC,MAAM,CAAC;YACxC,CAAC;YACD,EAAE,CAAC,CAAC,aAAa,CAAC,GAAG,KAAK,SAAS,CAAC,CAAC,CAAC;gBACpC,OAAO,CAAC,GAAG,GAAG,aAAa,CAAC,GAAG,CAAC;YAClC,CAAC;QACH,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IACtD,CAAC;IAUH,qBAAC;AAAD,CA9BA,AA8BC;;AATM,yBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;gBACnB,IAAI,EAAE,YAAY;aACnB,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,6BAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,iBAAiB,GAAG;CAC1B,EAF6F,CAE7F,CAAC","file":"numeric.pipe.js","sourceRoot":"","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { SkyNumericService } from './numeric.service';\nimport { NumericOptions } from './numeric.options';\n\n/*\n * Shortens numbers to 1K, 1M, 1B, 1T and can format for currency\n * All three arguments in the options object, Digits, format and ISO, are optional,\n * defaulting to 1, number and USD respectively\n * Usage:\n *  number_expression | skyNumeric[:numbericOptions]]]\n *\n *  options is an object to be passed in with the following parameters:\n *    digits\n *    format\n *    iso\n * Example:\n *  {{ 1075 | skyNumeric:{digits: 1, format: 'currency', iso: 'USD'} }}\n *  formats to: $1.1K\n * Example:\n *  {{ 2075000 | skyNumeric:{digits: 2} }}\n *  formats to: 2.08M\n * Note: Be sure you have a space between the curly bracket surrounding the options object\n * and the two curly brackets closing the pipe or it will not work.  Thanks angular pipes.\n*/\n\nexport class SkyNumericPipe implements PipeTransform {\n\n  constructor(\n    private readonly skyNumeric: SkyNumericService\n  ) { }\n\n  public transform(value: number, optionsObject: any): string {\n    let options = new NumericOptions();\n    if (optionsObject) {\n      if (optionsObject.digits !== undefined) {\n        options.digits = optionsObject.digits;\n      }\n      if (optionsObject.format !== undefined) {\n        options.format = optionsObject.format;\n      }\n      if (optionsObject.iso !== undefined) {\n        options.iso = optionsObject.iso;\n      }\n    }\n    return this.skyNumeric.formatNumber(value, options);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'skyNumeric'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SkyNumericService, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}