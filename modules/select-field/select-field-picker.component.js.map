{"version":3,"sources":["../../../.srctemp/modules/select-field/select-field-picker.component.ts"],"names":[],"mappings":"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","file":"select-field-picker.component.js","sourceRoot":"","sourcesContent":["import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  OnInit,\n  ViewChild\n} from '@angular/core';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/take';\n\nimport {\n  ListItemModel\n} from '../list/state';\n\nimport { SkyListFilterInlineModel } from '../list-filters/list-filter-inline.model';\n\nimport {\n  SkyListViewChecklistComponent\n} from '../list-view-checklist';\n\nimport {\n  SkyModalInstance\n} from '../modal';\n\nimport {\n  SkyWindowRefService\n} from '../window';\n\nimport {\n  SkySelectField,\n  SkySelectFieldSelectMode\n} from './types';\n\nimport { SkySelectFieldPickerContext } from './select-field-picker-context';\n\n\nexport class SkySelectFieldPickerComponent implements OnInit, AfterContentInit {\n  public categories: string[];\n  public data: Observable<any>;\n  public selectMode: SkySelectFieldSelectMode;\n  public headingText: string;\n\n  public readonly defaultCategory = 'any';\n  public selectedCategory = this.defaultCategory;\n  public selectedIds: any[] = [];\n\n  \n  private listViewChecklist: SkyListViewChecklistComponent;\n\n  constructor(\n    private context: SkySelectFieldPickerContext,\n    private instance: SkyModalInstance,\n    private elementRef: ElementRef,\n    private windowRef: SkyWindowRefService\n  ) { }\n\n  public ngOnInit() {\n    this.data = this.context.data;\n    this.headingText = this.context.headingText;\n    this.selectMode = this.context.selectMode;\n    this.selectedIds = this.getSelectedIds();\n    this.assignCategories();\n  }\n\n  public ngAfterContentInit() {\n    this.windowRef.getWindow().setTimeout(() => {\n      this.elementRef.nativeElement.querySelector('.sky-search-input').focus();\n    });\n  }\n\n  public save() {\n    this.latestData.subscribe((items: SkySelectField[]) => {\n      const results = items.filter((item: SkySelectField) => {\n        return (this.selectedIds.indexOf(item.id) > -1);\n      });\n      this.instance.save(results);\n    });\n  }\n\n  public close() {\n    this.instance.close();\n  }\n\n  public filterByCategory(model: ListItemModel, category: string) {\n    return (category === this.defaultCategory || model.data.category === category);\n  }\n\n  public onCategoryChange(change: SkyListFilterInlineModel, filter: any) {\n    // Reset the selected values when the category changes.\n    this.listViewChecklist.clearSelections();\n    filter.changed(change);\n  }\n\n  public onSelectedIdsChange(selectedMap: Map<string, boolean>) {\n    this.latestData.subscribe((items: SkySelectField[]) => {\n      this.selectedIds = items.filter(item => selectedMap.get(item.id))\n        .map(item => item.id);\n    });\n  }\n\n  private assignCategories() {\n    this.latestData.subscribe((items: SkySelectField[]) => {\n      const allCategories = items.map(item => item.category);\n      // Remove duplicate category names:\n      this.categories = allCategories.filter((category: string, i: number, categories: string[]) => {\n        return (category && categories.indexOf(category) === i);\n      });\n    });\n  }\n\n  private get latestData(): Observable<SkySelectField[]> {\n    return this.data.take(1);\n  }\n\n  private getSelectedIds(): string[] {\n    const context = this.context;\n    const selectedValue = context.selectedValue;\n\n    if (selectedValue) {\n      if (context.selectMode === 'single') {\n        return [context.selectedValue.id];\n      }\n\n      return context.selectedValue.map((item: SkySelectField) => item.id);\n    }\n\n    return [];\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sky-select-field-picker',\n  template: `<div class=\"sky-select-field-picker\">\n  <sky-modal>\n    <sky-modal-header>\n      {{ headingText }}\n    </sky-modal-header>\n    <sky-modal-content>\n      <div class=\"sky-select-field-picker-content\">\n        <sky-list\n          [data]=\"data\"\n          [selectedIds]=\"selectedIds\"\n          (selectedIdsChange)=\"onSelectedIdsChange($event)\">\n          <sky-list-toolbar>\n            <sky-list-filter-inline\n              *ngIf=\"categories && categories.length\">\n              <sky-list-filter-inline-item\n                name=\"category\"\n                [defaultValue]=\"defaultCategory\"\n                [filter]=\"filterByCategory\"\n                [value]=\"defaultCategory\">\n                <ng-template\n                  let-filter=\"filter\">\n                  <select\n                    [ngModel]=\"filter.value\"\n                    (ngModelChange)=\"onCategoryChange($event, filter)\">\n                    <option\n                      [value]=\"defaultCategory\">\n                      {{ 'select_field_picker_show_all_category' | skyResources }}\n                    </option>\n                    <option\n                      *ngFor=\"let category of categories\"\n                      [value]=\"category\">\n                      {{ category }}\n                    </option>\n                  </select>\n                </ng-template>\n              </sky-list-filter-inline-item>\n            </sky-list-filter-inline>\n          </sky-list-toolbar>\n          <sky-list-view-checklist\n            label=\"label\"\n            description=\"description\"\n            [selectMode]=\"selectMode\">\n          </sky-list-view-checklist>\n          <sky-list-paging\n            pageSize=\"6\">\n          </sky-list-paging>\n        </sky-list>\n      </div>\n    </sky-modal-content>\n    <sky-modal-footer>\n      <button\n        type=\"button\"\n        class=\"sky-btn sky-btn-primary sky-select-field-picker-btn-save\"\n        (click)=\"save()\">\n        {{ 'select_field_picker_save_button' | skyResources }}\n      </button>\n      <button\n        type=\"button\"\n        class=\"sky-btn sky-btn-link sky-select-field-picker-btn-close\"\n        (click)=\"close()\">\n        {{ 'select_field_picker_close_button' | skyResources }}\n      </button>\n    </sky-modal-footer>\n  </sky-modal>\n</div>\n`,\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SkySelectFieldPickerContext, },\n{type: SkyModalInstance, },\n{type: ElementRef, },\n{type: SkyWindowRefService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'listViewChecklist': [{ type: ViewChild, args: [SkyListViewChecklistComponent, ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}