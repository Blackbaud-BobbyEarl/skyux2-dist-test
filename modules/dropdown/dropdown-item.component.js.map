{"version":3,"sources":["../../../.srctemp/modules/dropdown/dropdown-item.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAEL,uBAAuB,EACvB,iBAAiB,EACjB,SAAS,EACT,UAAU,EACX,MAAM,eAAA,CAAgB;AAGvB;IAKE,kCACS,UAAsB,EACrB,cAAiC;QADlC,eAAU,GAAV,UAAU,CAAY;QACrB,mBAAc,GAAd,cAAc,CAAmB;QANpC,aAAQ,GAAG,KAAK,CAAC;QACjB,eAAU,GAAG,KAAK,CAAC;IAMtB,CAAC;IAEE,kDAAe,GAAtB;QACE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC3E,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QACtC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;IACtC,CAAC;IAEM,+CAAY,GAAnB,UAAoB,iBAA0B;QAC5C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAErB,EAAE,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAC7B,CAAC;QAED,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;IACtC,CAAC;IAEM,8CAAW,GAAlB;QACE,mCAAmC;QACnC,IAAM,WAAW,GAAG,CAClB,IAAI,CAAC,aAAa;YAClB,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,IAAI,CACrD,CAAC;QACF,kBAAkB;QAClB,MAAM,CAAC,WAAW,CAAC;IACrB,CAAC;IAEM,6CAAU,GAAjB;QACE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;IACrC,CAAC;IA+DH,+BAAC;AAAD,CAtGA,AAsGC;;AA9DM,mCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,mBAAmB;gBAC7B,QAAQ,EAAE,kMASX;gBACC,MAAM,EAAE,CAAC,y0BAwCV,CAAC;gBACA,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,uCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,UAAU,GAAG;IACpB,EAAC,IAAI,EAAE,iBAAiB,GAAG;CAC1B,EAH6F,CAG7F,CAAC","file":"dropdown-item.component.js","sourceRoot":"","sourcesContent":["import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef\n} from '@angular/core';\n\n\nexport class SkyDropdownItemComponent implements AfterViewInit {\n  public isActive = false;\n  public isDisabled = false;\n  public buttonElement: HTMLButtonElement;\n\n  public constructor(\n    public elementRef: ElementRef,\n    private changeDetector: ChangeDetectorRef\n  ) { }\n\n  public ngAfterViewInit() {\n    this.buttonElement = this.elementRef.nativeElement.querySelector('button');\n    this.isDisabled = !this.isFocusable();\n    this.changeDetector.detectChanges();\n  }\n\n  public focusElement(enableNativeFocus: boolean) {\n    this.isActive = true;\n\n    if (enableNativeFocus) {\n      this.buttonElement.focus();\n    }\n\n    this.changeDetector.detectChanges();\n  }\n\n  public isFocusable(): boolean {\n    /*tslint:disable no-null-keyword */\n    const isFocusable = (\n      this.buttonElement &&\n      this.buttonElement.getAttribute('disabled') === null\n    );\n    /*tslint:enable */\n    return isFocusable;\n  }\n\n  public resetState() {\n    this.isActive = false;\n    this.changeDetector.markForCheck();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sky-dropdown-item',\n  template: `<div\n  class=\"sky-dropdown-item\"\n  [ngClass]=\"{\n    'sky-dropdown-item-active': isActive,\n    'sky-dropdown-item-disabled': isDisabled\n  }\">\n  <ng-content>\n  </ng-content>\n</div>\n`,\n  styles: [`.sky-dropdown-item {\n  background-color: transparent;\n  border: none;\n  display: block;\n  margin: 4px;\n  min-width: 160px;\n  text-align: left;\n  transition: background-color 150ms;\n}\n\n.sky-dropdown-item.sky-dropdown-item-active, .sky-dropdown-item:hover {\n  background-color: #eeeeef;\n}\n\n.sky-dropdown-item.sky-dropdown-item-disabled {\n  cursor: default;\n}\n\n.sky-dropdown-item.sky-dropdown-item-disabled:hover {\n  background-color: transparent;\n}\n\n.sky-dropdown-item ::ng-deep > button {\n  background-color: transparent;\n  border: none;\n  color: #282b31;\n  cursor: pointer;\n  display: block;\n  padding: 3px 20px;\n  text-align: left;\n  width: 100%;\n}\n\n.sky-dropdown-item ::ng-deep > button[disabled] {\n  color: #686c73;\n}\n\n.sky-dropdown-item ::ng-deep > button[disabled]:hover {\n  cursor: default;\n}\n`],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}