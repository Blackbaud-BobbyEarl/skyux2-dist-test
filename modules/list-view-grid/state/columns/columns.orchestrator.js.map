{"version":3,"sources":["../../../../../.srctemp/modules/list-view-grid/state/columns/columns.orchestrator.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,qBAAqB,EAAE,MAAM,uBAAuB,CAAC;AAC9D,OAAO,EAAE,SAAS,EAAE,MAAM,wBAAwB,CAAC;AAEnD,OAAO,EAAE,kBAAkB,EAAE,MAAM,eAAe,CAAC;AACnD,OAAO,EAAE,6BAA6B,EAAE,MAAM,WAAW,CAAC;AAE1D,IAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAEjC;IACU,mDAAoD;IAC5D,0BAA0B;IAC1B;QAAA,YACE,iBAAO,SAIR;QAFC,KAAI;aACD,QAAQ,CAAC,6BAA6B,EAAE,KAAI,CAAC,IAAI,CAAC,CAAC;;IACxD,CAAC;IAEO,8CAAI,GAAZ,UACE,KAAoC,EACpC,MAAqC;QACrC,IAAM,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,IAAI,kBAAkB,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,EAArC,CAAqC,CAAC,CAAC;QAElF,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC,IAAI,SAAS,CAAyB,UAAU,UAAG,MAAM,EAAE,CAAC,CAAC;QACtE,CAAC;QAED,MAAM,CAAC,IAAI,SAAS,CAAyB,KAAK,CAAC,KAAK,QAAK,UAAU,GAAG,MAAM,EAAE,CAAC,CAAC;IACtF,CAAC;IACH,sCAAC;AAAD,CArBA,AAqBC,CApBS,qBAAqB,GAoB9B","file":"columns.orchestrator.js","sourceRoot":"","sourcesContent":["import { GridStateOrchestrator } from '../grid-state.rxstate';\nimport { AsyncList } from 'microedge-rxstate/dist';\n\nimport { SkyGridColumnModel } from '../../../grid';\nimport { ListViewGridColumnsLoadAction } from './actions';\n\nconst moment = require('moment');\n\nexport class ListViewGridColumnsOrchestrator\n  extends GridStateOrchestrator<AsyncList<SkyGridColumnModel>> {\n  /* istanbul ignore next */\n  constructor() {\n    super();\n\n    this\n      .register(ListViewGridColumnsLoadAction, this.load);\n  }\n\n  private load(\n    state: AsyncList<SkyGridColumnModel>,\n    action: ListViewGridColumnsLoadAction): AsyncList<SkyGridColumnModel> {\n    const newColumns = action.columns.map(g => new SkyGridColumnModel(g.template, g));\n\n    if (action.refresh) {\n      return new AsyncList<SkyGridColumnModel>([...newColumns], moment());\n    }\n\n    return new AsyncList<SkyGridColumnModel>([...state.items, ...newColumns], moment());\n  }\n}\n"]}