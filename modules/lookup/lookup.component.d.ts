import { AfterContentInit, ChangeDetectorRef, ElementRef, OnDestroy } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import 'rxjs/add/observable/fromEvent';
import { Subject } from 'rxjs/Subject';
import { SkyAutocompleteSelectionChange } from '../autocomplete';
import { SkyToken, SkyTokensMessage } from '../tokens';
import { SkyWindowRefService } from '../window';
import { SkyLookupAutocompleteAdapter } from './lookup-autocomplete-adapter';
export declare class SkyLookupComponent extends SkyLookupAutocompleteAdapter implements AfterContentInit, OnDestroy, ControlValueAccessor {
    private changeDetector;
    private elementRef;
    private windowRef;
    ariaLabel: string;
    ariaLabelledBy: string;
    disabled: boolean;
    placeholderText: string;
    tokens: SkyToken[];
    readonly value: any[];
    isInputFocused: boolean;
    tokensController: Subject<SkyTokensMessage>;
    private autocompleteInputDirective;
    private lookupInput;
    private ngUnsubscribe;
    private idle;
    private markForTokenFocusOnKeyUp;
    private _tokens;
    constructor(changeDetector: ChangeDetectorRef, elementRef: ElementRef, windowRef: SkyWindowRefService);
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    onAutocompleteSelectionChange(change: SkyAutocompleteSelectionChange): void;
    onTokensChange(change: SkyToken[]): void;
    onTokensFocusIndexOverRange(): void;
    onTokensKeyUp(event: KeyboardEvent): void;
    writeValue(value: any[]): void;
    onChange: (value: any[]) => void;
    onTouched: () => void;
    registerOnChange(fn: (value: any) => void): void;
    registerOnTouched(fn: () => void): void;
    setDisabledState(disabled: boolean): void;
    clearSearchText(): void;
    private addToSelected(item);
    private addEventListeners();
    private removeEventListeners();
    private focusTokensOnInputKeyUp();
    private focusInputOnHostClick();
    private focusInput();
    private cloneItems(items);
    private parseTokens(data);
    private sendTokensMessage(type);
}
