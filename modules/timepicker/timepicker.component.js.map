{"version":3,"sources":["../../../.srctemp/modules/timepicker/timepicker.component.ts"],"names":[],"mappings":"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","file":"timepicker.component.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit\n} from '@angular/core';\n\nimport { Subject } from 'rxjs/Subject';\n\nimport {\n  SkyDropdownMessage,\n  SkyDropdownMessageType\n} from '../dropdown';\n\nimport { SkyTimepickerTimeOutput } from './timepicker.interface';\n\nconst moment = require('moment');\n\n\nexport class SkyTimepickerComponent implements OnInit {\n  \n  public selectedTimeChanged: EventEmitter<SkyTimepickerTimeOutput> =\n    new EventEmitter<SkyTimepickerTimeOutput>();\n\n  public dropdownController = new Subject<SkyDropdownMessage>();\n  public activeTime: Date;\n  public returnFormat: string;\n  public timeFormat: string = 'hh';\n  public hours: Array<number>;\n  public minutes: Array<number>;\n  public localeFormat: string;\n  public minuteMultiplier: number;\n  public is8601: boolean = false;\n\n  public ngOnInit() {\n    this.setFormat(this.timeFormat);\n  }\n\n  public setFormat(format: string) {\n    let h: number = 12;\n    let m: number = 12;\n    let minuteMultiplier: number = 5;\n    let localeFormat: string = 'h:mm A';\n    if (format === 'hh') { h = 12; m = 12; minuteMultiplier = 5; localeFormat = 'h:mm A'; }\n    if (format === 'HH') {\n      h = 24;\n      m = 4;\n      minuteMultiplier = 15;\n      localeFormat = 'HH:mm';\n      this.is8601 = true;\n    }\n    let data: {\n      'hours': Array<number>,\n      'minutes': Array<number>,\n      'localeFormat': string,\n      'minuteMultiplier': number\n    };\n\n    data = {\n      'hours': Array.apply(undefined, Array(h))\n        .map(function (x: number, i: number) {\n          if (format === 'hh') { return ++i; }\n          /* istanbul ignore else */\n          if (format === 'HH') { return i; }\n          /* istanbul ignore next */\n          /* sanity check */\n          return 0;\n        }),\n      'minutes': Array.apply(undefined, Array(m))\n        .map(function (x: number, i: number) {\n          return i * minuteMultiplier;\n        }),\n      'localeFormat': localeFormat,\n      'minuteMultiplier': minuteMultiplier\n    };\n\n    this.hours = data.hours;\n    this.minutes = data.minutes;\n    this.localeFormat = data.localeFormat;\n    this.minuteMultiplier = data.minuteMultiplier;\n  }\n\n  public set selectedTime(newTime: SkyTimepickerTimeOutput) {\n    if (typeof newTime !== 'undefined') {\n      /* sanity check */\n      /* istanbul ignore else */\n      if (newTime.local !== 'Invalid date') {\n        this.activeTime = newTime.iso8601;\n      }\n    }\n  }\n\n  public get selectedTime() {\n    const time: SkyTimepickerTimeOutput = {\n      hour: moment(this.activeTime).hour(),\n      minute: moment(this.activeTime).minute(),\n      meridie: moment(this.activeTime).format('A'),\n      timezone: parseInt(moment(this.activeTime).format('Z'), 10),\n      iso8601: this.activeTime,\n      local: moment(this.activeTime).format(this.localeFormat),\n      customFormat: (typeof this.returnFormat !== 'undefined')\n        ? this.returnFormat : this.localeFormat\n    };\n\n    return time;\n  }\n\n  public setTime(event: any) {\n    /* istanbul ignore else */\n    if (typeof event !== 'undefined') {\n      /* istanbul ignore else */\n      if (event.type === 'click') {\n        event.stopPropagation();\n        if (event.target.name === 'hour') {\n          this.selectedHour = parseInt(event.target.innerHTML, 0);\n        }\n        if (event.target.name === 'minute') {\n          this.selectedMinute = parseInt(event.target.innerHTML, 0);\n        }\n        if (event.target.name === 'meridie') {\n          this.selectedMeridies = event.target.innerHTML;\n        }\n      }\n    }\n  }\n\n  public onButtonClick() {\n    this.dropdownController.next({\n      type: SkyDropdownMessageType.Close\n    });\n  }\n\n  public set selectedHour(setHour: number) {\n    let hour: number;\n    let hourOffset: number = 0;\n    if (this.selectedMeridies === 'AM' && setHour === 12) { hourOffset = -12; }\n    if (this.selectedMeridies === 'PM' && setHour !== 12) { hourOffset = 12; }\n    if (this.is8601) { hourOffset = 0; }\n    hour = moment({ 'hour': setHour }).add(hourOffset, 'hours').hour();\n\n    this.activeTime = moment({\n      'hour': hour,\n      'minute': moment(this.activeTime).get('minute') + 0\n    }).toDate();\n    this.selectedTimeChanged.emit(this.selectedTime);\n  }\n\n  public set selectedMinute(minute: number) {\n    this.activeTime = moment({\n      'hour': moment(this.activeTime).get('hour') + 0,\n      'minute': minute\n    }).toDate();\n    this.selectedTimeChanged.emit(this.selectedTime);\n  }\n\n  public set selectedMeridies(meridies: string) {\n    /* istanbul ignore else */\n    if (!this.is8601) {\n      if (meridies !== this.selectedMeridies) {\n        this.activeTime = moment(this.activeTime).add(12, 'hours').toDate();\n        this.selectedTimeChanged.emit(this.selectedTime);\n      }\n    }\n  }\n\n  public get selectedHour() {\n    if (!this.is8601) {\n      /* istanbul ignore next */\n      return parseInt(moment(this.activeTime).format('h'), 0) || 1;\n    }\n    /* istanbul ignore else */\n    if (this.is8601) {\n      return moment(this.activeTime).hour() + 0;\n    }\n  }\n\n  public get selectedMinute() {\n    return moment(this.activeTime).minute() + 0;\n  }\n\n  public get selectedMeridies() {\n    if (this.activeTime) {\n      return moment(this.activeTime).format('A');\n    }\n    return '';\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sky-timepicker',\n  template: `<div class=\"sky-input-group\">\n  <ng-content></ng-content>\n  <div class=\"sky-input-group-btn sky-input-group-timepicker-btn\">\n    <sky-dropdown\n      buttonType=\"clock-o\"\n      alignment=\"right\"\n      [messageStream]=\"dropdownController\">\n      <sky-dropdown-menu>\n        <sky-dropdown-item>\n          <div class=\"sky-timepicker-container\">\n            <section class=\"sky-timepicker-column\" [ngClass]=\"{'sky-timepicker-24hour':is8601}\">\n              <ol>\n                <li *ngFor=\"let hour of hours;\">\n                  <button type=\"button\" name=\"hour\" (click)=\"setTime($event);\" [ngClass]=\"{'sky-btn-active': selectedHour === hour}\">{{hour}}</button>\n                </li>\n              </ol>\n            </section>\n            <section class=\"sky-timepicker-column\">\n              <ol>\n                <li *ngFor=\"let minute of minutes;\">\n                  <button type=\"button\" name=\"minute\" (click)=\"setTime($event);\" [ngClass]=\"{'sky-btn-active': selectedMinute === minute}\">{{ '00' .substring(0, 2 - (minute) .toString() .length) + (minute) }}</button>\n                </li>\n              </ol>\n            </section>\n            <section *ngIf=\"!is8601\" class=\"sky-timepicker-column\">\n              <ol>\n                <li>\n                  <button type=\"button\" name=\"meridie\" (click)=\"setTime($event);\" [ngClass]=\"{'sky-btn-active': selectedMeridies === 'AM'}\">AM</button>\n                </li>\n                <li>\n                  <button type=\"button\" name=\"meridie\" (click)=\"setTime($event);\" [ngClass]=\"{'sky-btn-active': selectedMeridies === 'PM'}\">PM</button>\n                </li>\n              </ol>\n            </section>\n          </div>\n          <div class=\"sky-timepicker-container sky-timepicker-footer\">\n            <section class=\"sky-timepicker-column\">\n              <button\n                type=\"button\"\n                (click)=\"onButtonClick()\">\n                {{'timepicker_close' | skyResources}}\n              </button>\n            </section>\n          </div>\n        </sky-dropdown-item>\n      </sky-dropdown-menu>\n    </sky-dropdown>\n  </div>\n</div>\n`,\n  styles: [`.sky-input-group-timepicker-btn /deep/ .sky-btn {\n  border-radius: 0;\n}\n\n.sky-input-group-timepicker-btn /deep/ .sky-dropdown-menu {\n  box-shadow: none;\n  background-color: transparent;\n  text-align: center;\n}\n\n.sky-input-group /deep/ .sky-dropdown-item {\n  box-shadow: 0 0 3px 0;\n}\n\n.sky-timepicker-container {\n  font-size: 15px;\n  display: flex;\n  padding: 5px;\n  background-color: #eeeeef;\n}\n\n.sky-timepicker-container button {\n  background-color: #ffffff;\n  border-width: 0;\n  padding: 15px;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  width: 100%;\n  height: 100%;\n}\n\n.sky-timepicker-container :last-child ol {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n\n.sky-timepicker-container :last-child ol li {\n  border-bottom: 1px solid #e2e3e4;\n  flex: 1;\n}\n\n.sky-timepicker-column {\n  margin: 5px;\n}\n\n.sky-timepicker-column ol {\n  border-top: 1px solid #e2e3e4;\n  border-right: 1px solid #e2e3e4;\n  border-bottom: 1px solid #e2e3e4;\n  border-left: 1px solid #e2e3e4;\n  column-gap: 1px;\n  columns: 2;\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n}\n\n.sky-timepicker-column ol li {\n  text-align: center;\n  cursor: pointer;\n  margin: 0;\n}\n\n.sky-timepicker-column ol li button {\n  cursor: pointer;\n}\n\n.sky-timepicker-column ol li button:focus {\n  outline: thin dotted;\n  outline: -webkit-focus-ring-color auto 5px;\n  outline-offset: -2px;\n}\n\n.sky-timepicker-column ol li button:hover {\n  background-color: #eeeeef;\n}\n\n.sky-timepicker-column ol li button:active {\n  background-color: #e2e3e4;\n}\n\n.sky-timepicker-column ol li button.sky-btn-active:hover {\n  background-color: #007ca6;\n}\n\n.sky-timepicker-column ol .sky-btn-active {\n  background-color: #007ca6;\n  color: #ffffff;\n}\n\n.sky-timepicker-column.sky-timepicker-24hour ol {\n  columns: 4;\n}\n\n.sky-timepicker-column.sky-timepicker-24hour ol li {\n  border-bottom-width: 0px;\n}\n\n.sky-timepicker-footer {\n  margin: 0px;\n  padding: 10px;\n  padding-top: 0px;\n}\n\n.sky-timepicker-footer .sky-timepicker-column {\n  width: 100%;\n}\n\n.sky-timepicker-footer button {\n  border-style: solid;\n  border-width: 1px;\n  border-color: #e2e3e4;\n  padding: 10px;\n  cursor: pointer;\n}\n`],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'selectedTimeChanged': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}