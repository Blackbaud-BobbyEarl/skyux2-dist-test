{"version":3,"sources":["../../../.srctemp/modules/repeater/repeater.component.ts"],"names":[],"mappings":"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","file":"repeater.component.js","sourceRoot":"","sourcesContent":["import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  Input,\n  QueryList\n} from '@angular/core';\n\nimport { SkyRepeaterItemComponent } from './repeater-item.component';\nimport { SkyRepeaterService } from './repeater.service';\n\n\nexport class SkyRepeaterComponent implements AfterContentInit {\n  \n  public set expandMode(value: string) {\n    this._expandMode = value;\n    this.updateForExpandMode();\n  }\n\n  public get expandMode(): string {\n    return this._expandMode || 'none';\n  }\n\n  \n  public items: QueryList<SkyRepeaterItemComponent>;\n\n  private _expandMode = 'none';\n\n  constructor(private repeaterService: SkyRepeaterService) {\n    this.repeaterService.itemCollapseStateChange.subscribe((item: SkyRepeaterItemComponent) => {\n      if (this.expandMode === 'single' && item.isExpanded) {\n        this.items.forEach((otherItem) => {\n          if (otherItem !== item && otherItem.isExpanded) {\n            otherItem.isExpanded = false;\n          }\n        });\n      }\n    });\n\n    this.updateForExpandMode();\n  }\n\n  public ngAfterContentInit() {\n    // HACK: Not updating for expand mode in a timeout causes an error.\n    // https://github.com/angular/angular/issues/6005\n    this.items.changes.subscribe(() => {\n      setTimeout(() => {\n        this.updateForExpandMode(this.items.last);\n      }, 0);\n    });\n\n    setTimeout(() => {\n      this.updateForExpandMode();\n    }, 0);\n  }\n\n  private updateForExpandMode(itemAdded?: SkyRepeaterItemComponent) {\n    if (this.items) {\n      let foundExpanded = false;\n      let isCollapsible = this.expandMode !== 'none';\n      let isSingle = this.expandMode === 'single';\n\n      // Keep any newly-added expanded item expanded and collapse the rest.\n      if (itemAdded && itemAdded.isExpanded) {\n        foundExpanded = true;\n      }\n\n      this.items.forEach((item) => {\n        item.isCollapsible = isCollapsible;\n\n        if (item !== itemAdded && isSingle && item.isExpanded) {\n          if (foundExpanded) {\n            item.updateForExpanded(false, false);\n          }\n\n          foundExpanded = true;\n        }\n      });\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sky-repeater',\n  styles: [`.sky-repeater {\n  padding: 0;\n}\n`],\n  template: `<div class=\"sky-repeater\">\n  <ng-content></ng-content>\n</div>\n`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SkyRepeaterService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'expandMode': [{ type: Input },],\n'items': [{ type: ContentChildren, args: [SkyRepeaterItemComponent, ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}