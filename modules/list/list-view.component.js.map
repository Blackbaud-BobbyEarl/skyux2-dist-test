{"version":3,"sources":["../../../.srctemp/modules/list/list-view.component.ts"],"names":[],"mappings":"AAIA,OAAO,wCAAwC,CAAC;AAEhD,IAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAEjC;IAUE,2BAAY,KAAgB,EAAE,WAAmB;QAAjD,iBAWC;QAbO,WAAM,GAAW,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC;QAG9D,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;QAE5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,OAAO,CAAC,MAAM,EAAhB,CAAgB,CAAC,CAAC;QAExD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,KAAI,CAAC,MAAM,EAA9B,CAA8B,CAAC,CAAC;QAElE,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAC1C,UAAA,QAAQ,IAAI,OAAA,QAAQ,GAAG,KAAI,CAAC,YAAY,EAAE,GAAG,KAAI,CAAC,cAAc,EAAE,EAAtD,CAAsD,CACnE,CAAC;IACJ,CAAC;IAED,sBAAI,iCAAE;aAAN;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC;;;OAAA;IAED,sBAAI,oCAAK;aAAT;YACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;;;OAAA;IAED,0BAA0B;IACnB,wCAAY,GAAnB;IACA,CAAC;IAEM,0CAAc,GAArB;IACA,CAAC;IACH,wBAAC;AAAD,CArCA,AAqCC,IAAA","file":"list-view.component.js","sourceRoot":"","sourcesContent":["import { ListState } from './state';\nimport { SkyListComponent } from '../list/list.component';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/distinctUntilChanged';\n\nconst moment = require('moment');\n\nexport abstract class ListViewComponent {\n  public active: Observable<boolean>;\n\n  protected viewName: string;\n  protected state: ListState;\n  protected list: SkyListComponent;\n  protected hasToolbar: Observable<boolean>;\n\n  private viewId: string = moment().toDate().getTime().toString();\n\n  constructor(state: ListState, defaultName: string) {\n    this.state = state;\n    this.viewName = defaultName;\n\n    this.hasToolbar = this.state.map(s => s.toolbar.exists);\n\n    this.active = this.state.map(s => s.views.active === this.viewId);\n\n    this.active.distinctUntilChanged().subscribe(\n      isActive => isActive ? this.onViewActive() : this.onViewInactive()\n    );\n  }\n\n  get id() {\n    return this.viewId;\n  }\n\n  get label() {\n    return this.viewName;\n  }\n\n  /* istanbul ignore next */\n  public onViewActive() {\n  }\n\n  public onViewInactive() {\n  }\n}\n"]}