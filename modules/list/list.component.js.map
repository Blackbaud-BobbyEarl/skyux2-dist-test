{"version":3,"sources":["../../../.srctemp/modules/list/list.component.ts"],"names":[],"mappings":"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","file":"list.component.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\n\nimport {\n  ListItemsLoadAction,\n  ListItemsSetLoadingAction\n} from './state/items/actions';\n\nimport {\n  ListSelectedLoadAction,\n  ListSelectedSetLoadingAction\n} from './state/selected/actions';\n\nimport {\n  ListSelectedModel\n} from './state/selected/selected.model';\n\nimport {\n  ListSortModel\n} from './state/sort/sort.model';\n\nimport {\n  ListSortSetFieldSelectorsAction\n} from './state/sort/actions';\n\nimport {\n  ListSortFieldSelectorModel\n} from './state/sort/field-selector.model';\n\nimport {\n  ListFilterModel\n} from './state/filters/filter.model';\n\nimport {\n  AsyncItem\n} from 'microedge-rxstate/dist';\n\nimport {\n  getValue\n} from 'microedge-rxstate/dist/helpers';\n\nimport { ListDataRequestModel } from './list-data-request.model';\nimport { ListDataResponseModel } from './list-data-response.model';\nimport { ListDataProvider } from './list-data.provider';\nimport { SkyListInMemoryDataProvider } from '../list-data-provider-in-memory';\nimport { ListState, ListStateDispatcher } from './state';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/combineLatest';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/operator/take';\nimport 'rxjs/add/operator/skip';\n\nimport { ListViewComponent } from './list-view.component';\n\nimport { ListSearchModel } from './state/search/search.model';\n\nimport {\n  ListViewsLoadAction,\n  ListViewsSetActiveAction\n} from './state/views/actions';\n\nimport { ListViewModel } from './state/views/view.model';\nimport { ListItemModel } from './state/items/item.model';\n\nimport {\n  isObservable\n} from './helpers';\n\nconst moment = require('moment');\n\n\nexport class SkyListComponent implements AfterContentInit, OnChanges {\n  public id: string = moment().toDate().getTime().toString();\n  \n  public data?: Array<any> | Observable<Array<any>> = [];\n\n  \n  public dataProvider?: ListDataProvider;\n\n  \n  public defaultView?: ListViewComponent;\n\n  \n  public initialTotal?: number;\n\n  \n  public selectedIds?: Array<string> | Observable<Array<string>>;\n\n  \n  public sortFields?: ListSortFieldSelectorModel |\n  Array<ListSortFieldSelectorModel> |\n  Observable<Array<ListSortFieldSelectorModel>> |\n  Observable<ListSortFieldSelectorModel>;\n\n  \n  public appliedFilters: Array<ListFilterModel> = [];\n\n  \n  public selectedIdsChange = new EventEmitter<Map<string, boolean>>();\n\n  \n  public appliedFiltersChange = new EventEmitter<Array<ListFilterModel>>();\n\n  /* tslint:disable */\n  \n  private searchFunction: (data: any, searchText: string) => boolean;\n  /* tslint:enable */\n\n  private dataFirstLoad: boolean = false;\n\n  \n  private listViews: QueryList<ListViewComponent>;\n\n  constructor(\n    private state: ListState,\n    private dispatcher: ListStateDispatcher\n  ) {}\n\n  public ngAfterContentInit() {\n    if (this.data && this.dataProvider && this.initialTotal) {\n      this.dataFirstLoad = true;\n    }\n\n    if (this.listViews.length > 0) {\n      let defaultView: ListViewComponent =\n        (this.defaultView === undefined) ? this.listViews.first : this.defaultView;\n\n      this.dispatcher.next(\n        new ListViewsLoadAction(this.listViews.map(v => new ListViewModel(v.id, v.label)))\n      );\n\n      // activate the default view\n      this.dispatcher.next(new ListViewsSetActiveAction(defaultView.id));\n    } else {\n      return;\n    }\n\n    // set sort fields\n    getValue(this.sortFields,\n    (sortFields: ListSortFieldSelectorModel[] | ListSortFieldSelectorModel) => {\n      let sortArray: any;\n      if (!Array.isArray(sortFields) && sortFields) {\n        sortArray = [sortFields];\n      } else {\n        sortArray = sortFields;\n      }\n      this.dispatcher.next(new ListSortSetFieldSelectorsAction(sortArray || []));\n    });\n\n    this.displayedItems.subscribe(result => {\n      this.dispatcher.next(new ListItemsSetLoadingAction());\n      this.dispatcher.next(new ListItemsLoadAction(result.items, true, true, result.count));\n    });\n\n    // Emit new selected items when they change if there is an observer.\n    if (this.selectedIdsChange.observers.length > 0) {\n\n      this.state.map(current => current.selected).distinctUntilChanged()\n        .skip(1)\n        .subscribe((selected: any) => {\n          this.selectedIdsChange.emit(selected.item.selectedIdMap);\n        });\n    }\n\n    if (this.appliedFiltersChange.observers.length > 0) {\n      this.state.map(current => current.filters).distinctUntilChanged()\n        .skip(1)\n        .subscribe((filters: any) => {\n          this.appliedFiltersChange.emit(filters);\n        });\n    }\n\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (changes['appliedFilters'] &&\n      changes['appliedFilters'].currentValue !== changes['appliedFilters'].previousValue) {\n      this.dispatcher.filtersUpdate(this.appliedFilters);\n    }\n  }\n\n  public refreshDisplayedItems(): void {\n    this.displayedItems.take(1).subscribe((result: any) => {\n      this.dispatcher.next(new ListItemsSetLoadingAction());\n      this.dispatcher.next(new ListItemsLoadAction(result.items, true, true, result.count));\n    });\n  }\n\n  get displayedItems(): Observable<ListDataResponseModel> {\n    if (!this.data && !this.dataProvider) {\n      throw new Error('List requires data or dataProvider to be set.');\n    }\n\n    let data: any = this.data;\n    if (!isObservable(data)) {\n      data = Observable.of(this.data);\n    }\n\n    if (!this.dataProvider) {\n      this.dataProvider = new SkyListInMemoryDataProvider(data, this.searchFunction);\n    }\n\n    let selectedIds: any = this.selectedIds || Observable.of([]);\n    if (!isObservable(selectedIds)) {\n      selectedIds = Observable.of(selectedIds);\n    }\n\n    let selectedChanged: boolean = false;\n\n    return Observable.combineLatest(\n      this.state.map(s => s.filters).distinctUntilChanged(),\n      this.state.map(s => s.search).distinctUntilChanged(),\n      this.state.map(s => s.sort.fieldSelectors).distinctUntilChanged(),\n      this.state.map(s => s.paging.itemsPerPage).distinctUntilChanged(),\n      this.state.map(s => s.paging.pageNumber).distinctUntilChanged(),\n      selectedIds.distinctUntilChanged().map((selectedId: any) => {\n        selectedChanged = true;\n        return selectedId;\n      }),\n      data.distinctUntilChanged(),\n      (\n        filters: ListFilterModel[],\n        search: ListSearchModel,\n        sortFieldSelectors: Array<ListSortFieldSelectorModel>,\n        itemsPerPage: number,\n        pageNumber: number,\n        selected: Array<string>,\n        itemsData: Array<any>\n      ) => {\n\n        if (selectedChanged) {\n          this.dispatcher.next(new ListSelectedSetLoadingAction());\n          this.dispatcher.next(new ListSelectedLoadAction(selected));\n          this.dispatcher.next(new ListSelectedSetLoadingAction(false));\n          selectedChanged = false;\n        }\n\n        let response: Observable<ListDataResponseModel>;\n        if (this.dataFirstLoad) {\n          this.dataFirstLoad = false;\n          let initialItems = itemsData.map(d =>\n            new ListItemModel(d.id || moment().toDate().getTime().toString(), d));\n          response = Observable.of(new ListDataResponseModel({\n            count: this.initialTotal,\n            items: initialItems\n          }));\n        } else {\n          response = this.dataProvider.get(new ListDataRequestModel({\n            filters: filters,\n            pageSize: itemsPerPage,\n            pageNumber: pageNumber,\n            search: search,\n            sort: new ListSortModel({ fieldSelectors: sortFieldSelectors })\n          }));\n        }\n\n        return response;\n      }).flatMap((value: Observable<ListDataResponseModel>, index: number) => {\n        return value;\n      });\n  }\n\n  public get selectedItems(): Observable<Array<ListItemModel>> {\n    return Observable.combineLatest(\n      this.state.map(current => current.items.items).distinctUntilChanged(),\n      this.state.map(current => current.selected).distinctUntilChanged(),\n      (items: Array<ListItemModel>, selected: AsyncItem<ListSelectedModel>) => {\n        return items.filter(i => selected.item.selectedIdMap.get(i.id));\n      }\n    );\n  }\n\n  public get lastUpdate() {\n    return this.state.map(s =>\n      s.items.lastUpdate ? moment(s.items.lastUpdate).toDate() : undefined\n    );\n  }\n\n  public get views() {\n    return this.listViews.toArray();\n  }\n\n  public get itemCount() {\n    return this.dataProvider.count();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sky-list',\n  template: '<ng-content></ng-content>',\n  providers: [ListState, ListStateDispatcher],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ListState, },\n{type: ListStateDispatcher, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'dataProvider': [{ type: Input },],\n'defaultView': [{ type: Input },],\n'initialTotal': [{ type: Input },],\n'selectedIds': [{ type: Input },],\n'sortFields': [{ type: Input },],\n'appliedFilters': [{ type: Input },],\n'selectedIdsChange': [{ type: Output },],\n'appliedFiltersChange': [{ type: Output },],\n'searchFunction': [{ type: Input, args: ['search', ] },],\n'listViews': [{ type: ContentChildren, args: [ListViewComponent, ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}