{"version":3,"sources":["../../../../../.srctemp/modules/list/state/sort/sort.orchestrator.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,qBAAqB,EAAE,MAAM,uBAAuB,CAAC;AAC9D,OAAO,EAAE,aAAa,EAAE,MAAM,cAAc,CAAC;AAC7C,OAAO,EAAE,kBAAkB,EAAE,MAAM,eAAe,CAAC;AACnD,OAAO,EACL,+BAA+B,EAC/B,0BAA0B,EAC1B,uBAAuB,EACxB,MAAM,WAAW,CAAC;AAEnB;IAA0C,wCAAoC;IAC5E,0BAA0B;IAC1B;QAAA,YACE,iBAAO,SAMR;QAJC,KAAI;aACD,QAAQ,CAAC,+BAA+B,EAAE,KAAI,CAAC,iBAAiB,CAAC;aACjE,QAAQ,CAAC,0BAA0B,EAAE,KAAI,CAAC,YAAY,CAAC;aACvD,QAAQ,CAAC,uBAAuB,EAAE,KAAI,CAAC,SAAS,CAAC,CAAC;;IACvD,CAAC;IAEO,gDAAiB,GAAzB,UACE,KAAoB,EACpB,MAAuC;QAEvC,MAAM,CAAC,IAAI,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,cAAc,EAAE,MAAM,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;IAChG,CAAC;IAEO,2CAAY,GAApB,UAAqB,KAAoB,EAAE,MAAkC;QAC3E,IAAM,YAAY,GAAG,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,UAAA,SAAS,IAAI,OAAA,IAAI,kBAAkB,CAAC,SAAS,CAAC,EAAjC,CAAiC,CAAC,CAAC;QAC1F,MAAM,CAAC,IAAI,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,SAAS,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC;IAClF,CAAC;IAEO,wCAAS,GAAjB,UAAkB,KAAoB,EAAE,MAA+B;QACrE,IAAM,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,UAAA,MAAM,IAAI,OAAA,IAAI,kBAAkB,CAAC,MAAM,CAAC,EAA9B,CAA8B,CAAC,CAAC;QAC9E,MAAM,CAAC,IAAI,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;IAC5E,CAAC;IACH,2BAAC;AAAD,CA3BA,AA2BC,CA3ByC,qBAAqB,GA2B9D","file":"sort.orchestrator.js","sourceRoot":"","sourcesContent":["import { ListStateOrchestrator } from '../list-state.rxstate';\nimport { ListSortModel } from './sort.model';\nimport { ListSortLabelModel } from './label.model';\nimport {\n  ListSortSetFieldSelectorsAction,\n  ListSortSetAvailableAction,\n  ListSortSetGlobalAction\n} from './actions';\n\nexport class ListSortOrchestrator extends ListStateOrchestrator<ListSortModel> {\n  /* istanbul ignore next */\n  constructor() {\n    super();\n\n    this\n      .register(ListSortSetFieldSelectorsAction, this.setFieldSelectors)\n      .register(ListSortSetAvailableAction, this.setAvailable)\n      .register(ListSortSetGlobalAction, this.setGlobal);\n  }\n\n  private setFieldSelectors(\n    state: ListSortModel,\n    action: ListSortSetFieldSelectorsAction\n  ): ListSortModel {\n    return new ListSortModel(Object.assign({}, state, { fieldSelectors: action.fieldSelectors }));\n  }\n\n  private setAvailable(state: ListSortModel, action: ListSortSetAvailableAction): ListSortModel {\n    const newAvailable = action.available.map(available => new ListSortLabelModel(available));\n    return new ListSortModel(Object.assign({}, state, { available: newAvailable }));\n  }\n\n  private setGlobal(state: ListSortModel, action: ListSortSetGlobalAction): ListSortModel {\n    const newGlobal = action.global.map(global => new ListSortLabelModel(global));\n    return new ListSortModel(Object.assign({}, state, { global: newGlobal }));\n  }\n}\n"]}