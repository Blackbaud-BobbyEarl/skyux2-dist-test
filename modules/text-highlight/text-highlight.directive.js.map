{"version":3,"sources":["../../../.srctemp/modules/text-highlight/text-highlight.directive.ts"],"names":[],"mappings":"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","file":"text-highlight.directive.js","sourceRoot":"","sourcesContent":["import {\n  AfterContentChecked,\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges\n} from '@angular/core';\n\nimport { MutationObserverService } from '../mutation/mutation-observer-service';\n\nconst className = 'sky-highlight-mark';\n\n\nexport class SkyTextHighlightDirective\n  implements OnChanges, AfterViewInit, AfterContentChecked, OnDestroy {\n\n  \n  public skyHighlight: string = undefined;\n\n  private existingHighlight = false;\n  private observer: MutationObserver;\n\n  private static getRegexMatch(node: HTMLElement, searchText: string): RegExpExecArray {\n    const text = node.nodeValue;\n    const newSearchText = searchText.replace(/\\\\/g, '\\\\\\\\');\n    const searchRegex = new RegExp(newSearchText, 'gi');\n    return searchRegex.exec(text);\n  }\n\n  private static markNode(node: any, searchText: string) {\n    const regexMatch = SkyTextHighlightDirective.getRegexMatch(node, searchText);\n\n    // found match\n    if (regexMatch && regexMatch.length > 0) {\n\n      // split apart text node with mark tags in the middle on the search term\n      const matchIndex = regexMatch.index;\n\n      const middle = node.splitText(matchIndex);\n      middle.splitText(searchText.length);\n      const middleClone = middle.cloneNode(true);\n\n      const markNode = document.createElement('mark');\n      markNode.className = className;\n      markNode.appendChild(middleClone);\n      middle.parentNode.replaceChild(markNode, middle);\n\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n\n  private static markTextNodes(node: HTMLElement, searchText: string) {\n    if (node.nodeType === 3) {\n      return SkyTextHighlightDirective.markNode(node, searchText);\n\n    } else if (node.nodeType === 1 && node.childNodes) {\n      for (let i = 0; i < node.childNodes.length; i++) {\n        let childNode = node.childNodes[i] as HTMLElement;\n        i += SkyTextHighlightDirective.markTextNodes(childNode, searchText);\n      }\n    }\n\n    return 0;\n  }\n\n  private static removeHighlight(el: ElementRef) {\n    const matchedElements =\n      el.nativeElement.querySelectorAll(`mark.${className}`) as NodeList;\n\n    /* istanbul ignore else */\n    /* sanity check */\n    if (matchedElements) {\n      for (let i = 0; i < matchedElements.length; i++) {\n        const node = matchedElements[i];\n        const parentNode = node.parentNode;\n\n        parentNode.replaceChild(node.firstChild, node);\n        parentNode.normalize();\n      }\n    }\n  }\n\n  constructor(private el: ElementRef, private observerService: MutationObserverService) { }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.skyHighlight && !changes.skyHighlight.firstChange) {\n      this.highlight();\n    }\n  }\n\n  public ngAfterViewInit(): void {\n    let me = this;\n\n    this.observer = this.observerService.create((mutations: MutationRecord[]) => {\n      me.highlight();\n    });\n\n    this.observeDom();\n  }\n\n  public ngAfterContentChecked(): void {\n    this.highlight();\n  }\n\n  public ngOnDestroy(): void {\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n  private readyForHighlight(searchText: string): boolean {\n    return searchText && this.el.nativeElement;\n  }\n\n  private highlight(): void {\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n\n    const searchText = this.skyHighlight;\n\n    if (this.existingHighlight) {\n      SkyTextHighlightDirective.removeHighlight(this.el);\n    }\n\n    if (this.readyForHighlight(searchText)) {\n      const node: HTMLElement = this.el.nativeElement;\n\n      // mark all matched text in the DOM\n      SkyTextHighlightDirective.markTextNodes(node, searchText);\n      this.existingHighlight = true;\n    }\n\n    this.observeDom();\n  }\n\n  private observeDom() {\n    if (this.observer) {\n      const config = { attributes: true, childList: true, characterData: true };\n      this.observer.observe(this.el.nativeElement, config);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[skyHighlight]'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: MutationObserverService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'skyHighlight': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}