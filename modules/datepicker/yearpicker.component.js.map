{"version":3,"sources":["../../../.srctemp/modules/datepicker/yearpicker.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EAEV,MAAM,eAAA,CAAgB;AAEvB,OAAO,EACL,mCAAmC,EACpC,MAAM,uCAAA,CAAwC;AAO/C;IAKE,gCAAmB,UAA+C;QAF3D,SAAI,GAAoC,EAAE,CAAC;QAGhD,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;IAEM,yCAAQ,GAAf;QAAA,iBAeC;QAbC,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,EAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS,EAAC,CAAC;QAE9D,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC;YACpC,KAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC,EAAE,MAAM,CAAC,CAAC;QAEX,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;QAE7D,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,UAAC,GAAW,EAAE,KAAoB;YAClE,KAAI,CAAC,YAAY,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QAChC,CAAC,EAAE,MAAM,CAAC,CAAC;QAEX,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;IAChC,CAAC;IAES,gDAAe,GAAzB,UAA0B,IAAY;QACpC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,CAAC,CAAC;IAC5F,CAAC;IAEO,6CAAY,GAApB,UAAqB,KAAW,EAAE,KAAW;QAC3C,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;IACnD,CAAC;IAEO,gDAAe,GAAvB;QACE,IAAI,KAAK,GAA6B,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QAC3E,IAAI,IAAU,CAAC;QACf,IAAI,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,CAAC;QAE3E,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC;YACnD,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;YAC5C,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAElC,KAAK,CAAC,CAAC,CAAC;gBACN,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAC9B,IAAI,EACJ,IAAI,CAAC,UAAU,CAAC,UAAU,EAC1B,KAAK,EACL,IAAI,CAAC,UAAU,CAAC,YAAY,GAAG,GAAG,GAAG,CAAC,CACvC,CAAC;QACN,CAAC;QAED,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK;YAC1B,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;IACtF,CAAC;IAEO,6CAAY,GAApB,UAAqB,GAAW,EAAE,KAAoB;QACpD,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;QAEpD,0BAA0B;QAC1B,kBAAkB;QAClB,EAAE,CAAC,CAAC,GAAG,KAAK,MAAM,CAAC,CAAC,CAAC;YACnB,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC;QAClB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC,CAAC;YACxB,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC;QAC7C,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC,CAAC;YAC3B,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC;QAClB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,MAAM,CAAC,CAAC,CAAC;YAC1B,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC;QAC7C,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,QAAQ,IAAI,GAAG,KAAK,UAAU,CAAC,CAAC,CAAC;YAClD,IAAI,IAAI,CAAC,GAAG,KAAK,QAAQ,GAAG,CAAE,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;QACnE,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,MAAM,CAAC,CAAC,CAAC;YAC1B,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,CAAC;QACxE,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,KAAK,CAAC,CAAC,CAAC;YACzB,IAAI;kBACA,IAAI,CAAC,eAAe,CACpB,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,WAAW,EAAE,CACvC,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,CAAC,CAAC;QACxC,CAAC;QACD,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAE/C,CAAC;IAwEH,6BAAC;AAAD,CA1JA,AA0JC;;AAvEM,iCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,gBAAgB;gBAC1B,QAAQ,EAAE,knEA6DX;aACA,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,qCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,mCAAmC,GAAG;CAC5C,EAF6F,CAE7F,CAAC","file":"yearpicker.component.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  OnInit\n} from '@angular/core';\n\nimport {\n  SkyDatepickerCalendarInnerComponent\n} from './datepicker-calendar-inner.component';\n\nimport {\n  SkyDatepickerDate\n} from './datepicker-date';\n\n\nexport class SkyYearPickerComponent implements OnInit {\n  public datepicker: SkyDatepickerCalendarInnerComponent;\n  public title: string;\n  public rows: Array<Array<SkyDatepickerDate>> = [];\n\n  public constructor(datepicker: SkyDatepickerCalendarInnerComponent) {\n    this.datepicker = datepicker;\n  }\n\n  public ngOnInit(): void {\n\n    this.datepicker.stepYear = {years: this.datepicker.yearRange};\n\n    this.datepicker.setRefreshViewHandler(() => {\n      this.refreshYearView();\n    }, 'year');\n\n    this.datepicker.setCompareHandler(this.compareYears, 'year');\n\n    this.datepicker.setKeydownHandler((key: string, event: KeyboardEvent) => {\n      this.keydownYears(key, event);\n    }, 'year');\n\n    this.datepicker.refreshView();\n  }\n\n  protected getStartingYear(year: number): number {\n    return Math.floor((year - 1) / this.datepicker.yearRange) * this.datepicker.yearRange + 1;\n  }\n\n  private compareYears(date1: Date, date2: Date): number {\n    return date1.getFullYear() - date2.getFullYear();\n  }\n\n  private refreshYearView() {\n    let years: Array<SkyDatepickerDate> = new Array(this.datepicker.yearRange);\n    let date: Date;\n    let start = this.getStartingYear(this.datepicker.activeDate.getFullYear());\n\n    for (let i = 0; i < this.datepicker.yearRange; i++) {\n      date = new Date(this.datepicker.activeDate);\n      date.setFullYear(start + i, 0, 1);\n\n      years[i] =\n        this.datepicker.createDateObject(\n          date,\n          this.datepicker.formatYear,\n          false,\n          this.datepicker.datepickerId + '-' + i\n        );\n    }\n\n    this.title = [years[0].label,\n      years[this.datepicker.yearRange - 1].label].join(' - ');\n    this.rows = this.datepicker.createCalendarRows(years, this.datepicker.yearColLimit);\n  }\n\n  private keydownYears(key: string, event: KeyboardEvent) {\n    let date = this.datepicker.activeDate.getFullYear();\n\n    /* istanbul ignore else */\n    /* sanity check */\n    if (key === 'left') {\n      date = date - 1;\n    } else if (key === 'up') {\n      date = date - this.datepicker.yearColLimit;\n    } else if (key === 'right') {\n      date = date + 1;\n    } else if (key === 'down') {\n      date = date + this.datepicker.yearColLimit;\n    } else if (key === 'pageup' || key === 'pagedown') {\n      date += (key === 'pageup' ? - 1 : 1) * this.datepicker.yearRange;\n    } else if (key === 'home') {\n      date = this.getStartingYear(this.datepicker.activeDate.getFullYear());\n    } else if (key === 'end') {\n      date\n        = this.getStartingYear(\n          this.datepicker.activeDate.getFullYear()\n          ) + this.datepicker.yearRange - 1;\n    }\n    this.datepicker.activeDate.setFullYear(date);\n\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sky-yearpicker',\n  template: `<table *ngIf=\"datepicker.datepickerMode==='year'\" role=\"grid\">\n  <thead>\n    <tr>\n      <th>\n        <button\n          type=\"button\"\n          class=\"sky-btn sky-btn-default sky-btn-sm sky-datepicker-btn-previous\"\n          (click)=\"datepicker.moveCalendar($event, -1)\"\n          tabindex=\"-1\"\n          >\n          <i class=\"fa fa-chevron-left\"></i>\n        </button>\n      </th>\n      <th [attr.colspan]=\"((datepicker.yearColLimit - 2) <= 0) ? 1 : datepicker.yearColLimit - 2\">\n        <button\n          [id]=\"datepicker.datepickerId + '-title'\"\n          role=\"heading\"\n          type=\"button\"\n          class=\"sky-btn sky-btn-default sky-btn-sm sky-datepicker-calendar-title\"\n          (click)=\"datepicker.toggleModeCalendar($event)\"\n          [disabled]=\"datepicker.datepickerMode === datepicker.maxMode\"\n          [ngClass]=\"{'sky-btn-disabled': datepicker.datepickerMode === datepicker.maxMode}\"\n          tabindex=\"-1\"\n          >\n          <strong>{{title}}</strong>\n        </button>\n      </th>\n      <th>\n        <button\n          type=\"button\"\n          class=\"sky-btn sky-btn-default sky-btn-sm sky-datepicker-btn-next\"\n          (click)=\"datepicker.moveCalendar($event, 1)\"\n          tabindex=\"-1\"\n          >\n          <i class=\"fa fa-chevron-right\"></i>\n        </button>\n      </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let row of rows\">\n      <td\n        *ngFor=\"let date of row\"\n        class=\"sky-datepicker-row\"\n        role=\"gridcell\"\n        >\n        <button\n          type=\"button\"\n          class=\"sky-btn sky-btn-default sky-datepicker-btn-date\"\n          [ngClass]=\"{'sky-datepicker-btn-selected': date.selected, 'sky-btn-disabled': date.disabled, 'sky-btn-active': datepicker.isActive(date)}\"\n          [disabled]=\"date.disabled\"\n          (click)=\"datepicker.selectCalendar($event, date.date)\"\n          tabindex=\"-1\"\n          >\n          <span\n            [ngClass]=\"{'sky-datepicker-current': date.current }\">{{date.label}}</span>\n        </button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SkyDatepickerCalendarInnerComponent, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}