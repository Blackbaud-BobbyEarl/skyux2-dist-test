{"version":3,"sources":["../../../.srctemp/modules/datepicker/daypicker.component.ts"],"names":[],"mappings":"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","file":"daypicker.component.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  SkyDatepickerCalendarInnerComponent\n} from './datepicker-calendar-inner.component';\n\nimport {\n  SkyDatepickerDate\n} from './datepicker-date';\n\n\nexport class SkyDayPickerComponent implements OnInit {\n\n  public labels: any[] = [];\n  public title: string;\n  public rows: Array<Array<SkyDatepickerDate>> = [];\n  public weekNumbers: number[] = [];\n  public datepicker: SkyDatepickerCalendarInnerComponent;\n  public CURRENT_THEME_TEMPLATE: any;\n\n  private daysInMonth: Array<number> = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n  public constructor(datepicker: SkyDatepickerCalendarInnerComponent) {\n    this.datepicker = datepicker;\n  }\n\n  public ngOnInit(): void {\n\n    this.datepicker.stepDay = {months: 1};\n\n    this.datepicker.setRefreshViewHandler(() => {\n      this.refreshDayView();\n    }, 'day');\n\n    this.datepicker.setCompareHandler(this.compareDays, 'day');\n\n    this.datepicker.setKeydownHandler((key: string, event: KeyboardEvent) => {\n      this.keydownDays(key, event);\n    }, 'day');\n\n    this.datepicker.refreshView();\n  }\n\n  protected getDates(startDate: Date, n: number): Date[] {\n    let dates: Date[] = new Array(n);\n    let current = new Date(startDate.getTime());\n    let i = 0;\n    let date: Date;\n    while (i < n) {\n      date = new Date(current.getTime());\n      date = this.datepicker.fixTimeZone(date);\n      dates[i++] = date;\n      current = new Date(current.getFullYear(), current.getMonth(), current.getDate() + 1);\n    }\n    return dates;\n  }\n\n  private compareDays(date1: Date, date2: Date): number {\n    let d1 = new Date(date1.getFullYear(), date1.getMonth(), date1.getDate());\n    let d2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate());\n    return d1.getTime() - d2.getTime();\n  }\n\n  private refreshDayView() {\n    let year = this.datepicker.activeDate.getFullYear();\n    let month = this.datepicker.activeDate.getMonth();\n    let firstDayOfMonth = new Date(year, month, 1);\n    let difference = this.datepicker.startingDay - firstDayOfMonth.getDay();\n    let numDisplayedFromPreviousMonth = (difference > 0)\n      ? 7 - difference\n      : -difference;\n    let firstDate = new Date(firstDayOfMonth.getTime());\n\n    /* istanbul ignore else */\n    /* sanity check */\n    if (numDisplayedFromPreviousMonth > 0) {\n      firstDate.setDate(-numDisplayedFromPreviousMonth + 1);\n    }\n\n    // 42 is the number of days on a six-week calendar\n    let days: Date[] = this.getDates(firstDate, 42);\n    let pickerDates: Array<SkyDatepickerDate> = [];\n    for (let i = 0; i < 42; i++) {\n      let _dateObject = this.datepicker.createDateObject(\n        days[i],\n        this.datepicker.formatDay,\n        days[i].getMonth() !== month,\n        this.datepicker.datepickerId + '-' + i\n      );\n      pickerDates[i] = _dateObject;\n    }\n\n    this.labels = [];\n    for (let j = 0; j < 7; j++) {\n      this.labels[j] = {};\n      this.labels[j].abbr =\n        this.datepicker.dateFilter(pickerDates[j].date, this.datepicker.formatDayHeader);\n      this.labels[j].full = this.datepicker.dateFilter(pickerDates[j].date, 'EEEE');\n    }\n\n    this.title =\n      this.datepicker.dateFilter(this.datepicker.activeDate, this.datepicker.formatDayTitle);\n    this.rows = this.datepicker.createCalendarRows(pickerDates, 7);\n  }\n\n  private keydownDays(key: string, event: KeyboardEvent) {\n    let date = this.datepicker.activeDate.getDate();\n    /* istanbul ignore else */\n    /* sanity check */\n    if (key === 'left') {\n      date = date - 1;\n    } else if (key === 'up') {\n      date = date - 7;\n    } else if (key === 'right') {\n      date = date + 1;\n    } else if (key === 'down') {\n      date = date + 7;\n    } else if (key === 'pageup' || key === 'pagedown') {\n      let month = this.datepicker.activeDate.getMonth() + (key === 'pageup' ? - 1 : 1);\n      this.datepicker.activeDate.setMonth(month, 1);\n      date =\n      Math.min(\n        this.getDaysInMonth(\n          this.datepicker.activeDate.getFullYear(),\n          this.datepicker.activeDate.getMonth()\n        ),\n        date);\n    } else if (key === 'home') {\n      date = 1;\n    } else if (key === 'end') {\n      date = this.getDaysInMonth(\n        this.datepicker.activeDate.getFullYear(),\n        this.datepicker.activeDate.getMonth()\n      );\n    }\n    this.datepicker.activeDate.setDate(date);\n  }\n\n  private getDaysInMonth(year: number, month: number) {\n    return month === 1 && year % 4 === 0 &&\n      (year % 400 === 0 || year % 100 !== 0) ? 29 : this.daysInMonth[month];\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sky-daypicker',\n  template: `<table\n  *ngIf=\"datepicker.datepickerMode==='day'\"\n  role=\"grid\"\n  [attr.aria-labelledby]=\"datepicker.datepickerId+'-title'\"\n  [attr.aria-activedescendant]=\"datepicker.activeDateId\">\n  <thead>\n    <tr>\n      <th scope=\"col\">\n        <button\n          type=\"button\"\n          class=\"sky-btn sky-btn-default sky-btn-sm sky-datepicker-btn-previous\"\n          (click)=\"datepicker.moveCalendar($event, -1)\"\n          tabindex=\"-1\"\n          aria-hidden=\"true\"\n          >\n          <i class=\"fa fa-chevron-left\"></i>\n        </button>\n      </th>\n      <th [attr.colspan]=\"5 + (datepicker.showWeeks ? 1 : 0)\" scope=\"col\">\n        <button\n          [id]=\"datepicker.datepickerId + '-title'\"\n          type=\"button\"\n          class=\"sky-btn sky-btn-default sky-btn-sm sky-datepicker-calendar-title\"\n          (click)=\"datepicker.toggleModeCalendar($event)\"\n          [disabled]=\"datepicker.datepickerMode === datepicker.maxMode\"\n          [ngClass]=\"{'sky-btn-disabled': datepicker.datepickerMode === datepicker.maxMode}\"\n          tabindex=\"-1\"\n          aria-hidden=\"true\"\n          >\n          <strong>{{title}}</strong>\n        </button>\n      </th>\n      <th scope=\"col\">\n        <button\n          type=\"button\"\n          class=\"sky-btn sky-btn-default sky-btn-sm sky-datepicker-btn-next\"\n          (click)=\"datepicker.moveCalendar($event, 1)\"\n          tabindex=\"-1\"\n          aria-hidden=\"true\"\n          >\n          <i class=\"fa fa-chevron-right\"></i>\n        </button>\n      </th>\n    </tr>\n    <tr>\n      <th\n        scope=\"col\"\n        *ngFor=\"let label of labels\"\n        class=\"sky-datepicker-center sky-datepicker-weekdays\">\n        <small [attr.aria-label]=\"label.full\">\n          <b>{{label.abbr}}</b>\n        </small>\n      </th>\n    </tr>\n  </thead>\n  <tbody>\n    <ng-template\n      ngFor\n      [ngForOf]=\"rows\"\n      let-row=\"$implicit\"\n      let-index=\"index\"\n      >\n      <tr role=\"row\">\n        <td\n          *ngFor=\"let date of row\"\n          class=\"sky-datepicker-center\"\n          role=\"gridcell\"\n          [id]=\"date.uid\"\n          >\n          <button\n            type=\"button\"\n            class=\"sky-btn sky-btn-sm sky-btn-default sky-datepicker-btn-date\"\n            [ngClass]=\"{ 'sky-datepicker-btn-selected': date.selected, 'sky-btn-disabled': date.disabled, 'sky-btn-active': datepicker.isActive(date)}\"\n            [disabled]=\"date.disabled\"\n            (click)=\"datepicker.selectCalendar($event, date.date, true)\"\n            tabindex=\"-1\"\n            >\n            <span\n              [ngClass]=\"{'sky-datepicker-secondary': date.secondary }\"\n              >{{date.label}}</span>\n          </button>\n        </td>\n      </tr>\n    </ng-template>\n  </tbody>\n</table>\n`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SkyDatepickerCalendarInnerComponent, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}