{"version":3,"sources":["../../../.srctemp/modules/flyout/flyout.service.ts"],"names":[],"mappings":"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","file":"flyout.service.js","sourceRoot":"","sourcesContent":["import {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Type\n} from '@angular/core';\n\nimport 'rxjs/add/operator/take';\n\nimport { SkyFlyoutAdapterService } from './flyout-adapter.service';\nimport { SkyFlyoutComponent } from './flyout.component';\nimport { SkyFlyoutInstance } from './flyout-instance';\n\nimport {\n  SkyFlyoutConfig,\n  SkyFlyoutMessage,\n  SkyFlyoutMessageType\n} from './types';\n\n\nexport class SkyFlyoutService {\n  private host: ComponentRef<SkyFlyoutComponent>;\n  private removeAfterClosed = false;\n\n  constructor(\n    private adapter: SkyFlyoutAdapterService,\n    private appRef: ApplicationRef,\n    private injector: Injector,\n    private resolver: ComponentFactoryResolver\n  ) { }\n\n  public open<T>(component: Type<T>, config?: SkyFlyoutConfig): SkyFlyoutInstance<T> {\n    if (!this.host) {\n      this.host = this.createHostComponent();\n    }\n\n    const flyout = this.host.instance.attach(component, config);\n\n    this.addListeners(flyout);\n\n    return flyout;\n  }\n\n  public close(): void {\n    if (this.host) {\n      this.removeAfterClosed = true;\n      this.host.instance.messageStream.next({\n        type: SkyFlyoutMessageType.Close\n      });\n    }\n  }\n\n  private createHostComponent(): ComponentRef<SkyFlyoutComponent> {\n    const componentRef = this.resolver\n      .resolveComponentFactory(SkyFlyoutComponent)\n      .create(this.injector);\n\n    const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0];\n\n    this.appRef.attachView(componentRef.hostView);\n    this.adapter.appendToBody(domElem);\n\n    return componentRef;\n  }\n\n  private removeHostComponent() {\n    if (this.host) {\n      this.appRef.detachView(this.host.hostView);\n      this.host.destroy();\n      this.host = undefined;\n    }\n\n    this.adapter.removeHostElement();\n  }\n\n  private addListeners<T>(flyout: SkyFlyoutInstance<T>): void {\n    this.removeAfterClosed = false;\n\n    this.host.instance.messageStream\n      .take(1)\n      .subscribe((message: SkyFlyoutMessage) => {\n        if (message.type === SkyFlyoutMessageType.Close) {\n          this.removeAfterClosed = true;\n        }\n      });\n\n    flyout.closed.take(1).subscribe(() => {\n      if (this.removeAfterClosed) {\n        this.removeHostComponent();\n      }\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SkyFlyoutAdapterService, },\n{type: ApplicationRef, },\n{type: Injector, },\n{type: ComponentFactoryResolver, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}