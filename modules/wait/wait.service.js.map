{"version":3,"sources":["../../../.srctemp/modules/wait/wait.service.ts"],"names":[],"mappings":"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","file":"wait.service.js","sourceRoot":"","sourcesContent":["import {\n  ComponentFactoryResolver,\n  ApplicationRef,\n  Injectable\n} from '@angular/core';\n\nimport {\n  SkyWaitPageComponent\n} from './wait-page.component';\n\nimport {\n  SkyWaitPageAdapterService\n} from './wait-page-adapter.service';\n\n\nexport class SkyWaitService {\n\n  private static waitComponent: SkyWaitPageComponent;\n  private static pageWaitBlockingCount: number = 0;\n  private static pageWaitNonBlockingCount: number = 0;\n\n  constructor(\n    private resolver: ComponentFactoryResolver,\n    private appRef: ApplicationRef,\n    private waitAdapter: SkyWaitPageAdapterService\n    ) {}\n\n  public beginBlockingPageWait() {\n    this.beginPageWait(true);\n  }\n\n  public beginNonBlockingPageWait() {\n    this.beginPageWait(false);\n  }\n\n  public endBlockingPageWait() {\n    this.endPageWait(true);\n  }\n\n  public endNonBlockingPageWait() {\n    this.endPageWait(false);\n  }\n\n  public clearAllPageWaits() {\n    this.clearPageWait(true);\n    this.clearPageWait(false);\n  }\n\n  public dispose() {\n    if (SkyWaitService.waitComponent) {\n      SkyWaitService.waitComponent = undefined;\n      SkyWaitService.pageWaitBlockingCount = 0;\n      SkyWaitService.pageWaitNonBlockingCount = 0;\n      this.waitAdapter.removePageWaitEl();\n    }\n  }\n\n  private setWaitComponentProperties(isBlocking: boolean) {\n    if (isBlocking) {\n      SkyWaitService.waitComponent.hasBlockingWait = true;\n      SkyWaitService.pageWaitBlockingCount++;\n    } else {\n      SkyWaitService.waitComponent.hasNonBlockingWait = true;\n      SkyWaitService.pageWaitNonBlockingCount++;\n    }\n  }\n\n  private beginPageWait(isBlocking: boolean) {\n    if (!SkyWaitService.waitComponent) {\n      /*\n          Dynamic component creation needs to be done in a timeout to prevent ApplicationRef from\n          crashing when wait service is called in Angular lifecycle functions.\n      */\n      setTimeout(() => {\n        let factory = this.resolver.resolveComponentFactory(SkyWaitPageComponent);\n\n        this.waitAdapter.addPageWaitEl();\n\n        let cmpRef = this.appRef.bootstrap(factory);\n\n        SkyWaitService.waitComponent = cmpRef.instance;\n\n        this.setWaitComponentProperties(isBlocking);\n      });\n\n    } else {\n      this.setWaitComponentProperties(isBlocking);\n    }\n\n  }\n\n  private endPageWait(isBlocking: boolean) {\n    if (SkyWaitService.waitComponent) {\n      if (isBlocking) {\n        if (SkyWaitService.pageWaitBlockingCount > 0) {\n          SkyWaitService.pageWaitBlockingCount--;\n        }\n\n        if (SkyWaitService.pageWaitBlockingCount < 1) {\n          SkyWaitService.waitComponent.hasBlockingWait = false;\n        }\n      } else {\n        if (SkyWaitService.pageWaitNonBlockingCount > 0) {\n          SkyWaitService.pageWaitNonBlockingCount--;\n        }\n\n        if (SkyWaitService.pageWaitNonBlockingCount < 1) {\n          SkyWaitService.waitComponent.hasNonBlockingWait = false;\n        }\n      }\n    }\n  }\n\n  private clearPageWait(isBlocking: boolean) {\n    if (SkyWaitService.waitComponent) {\n      if (isBlocking) {\n        SkyWaitService.pageWaitBlockingCount = 0;\n        SkyWaitService.waitComponent.hasBlockingWait = false;\n      } else {\n        SkyWaitService.pageWaitNonBlockingCount = 0;\n        SkyWaitService.waitComponent.hasNonBlockingWait = false;\n      }\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ComponentFactoryResolver, },\n{type: ApplicationRef, },\n{type: SkyWaitPageAdapterService, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}