{"version":3,"sources":["../../../.srctemp/modules/wait/wait.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,KAAK,EACL,UAAU,EACX,MAAM,eAAA,CAAgB;AAEvB,OAAO,EACL,qBAAqB,EACtB,MAAM,wBAAA,CAAyB;AAGhC;IAuCE,0BAAoB,KAAiB,EAAU,cAAqC;QAAhE,UAAK,GAAL,KAAK,CAAY;QAAU,mBAAc,GAAd,cAAc,CAAuB;IAAI,CAAC;IApCzF,sBAAW,uCAAS;aAUpB;YACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aAZD,UAAqB,KAAc;YACjC,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC/B,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAChD,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBACvC,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACnD,CAAC;YACD,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;YACtE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC;;;OAAA;IAOD,sBAAW,wCAAU;aAUrB;YACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;QAC1B,CAAC;aAZD,UAAsB,KAAc;YAClC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACV,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACnD,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACrC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAChD,CAAC;YAED,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC3B,CAAC;;;OAAA;IA+HH,uBAAC;AAAD,CAzJA,AAyJC;;AAjHM,2BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,UAAU;gBACpB,QAAQ,EAAE,0bAgBX;gBACC,MAAM,EAAE,CAAC,m4CA+EV,CAAC;gBACA,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,+BAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,UAAU,GAAG;IACpB,EAAC,IAAI,EAAE,qBAAqB,GAAG;CAC9B,EAH6F,CAG7F,CAAC;AACK,+BAAc,GAA2C;IAChE,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC/B,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAChC,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;CAClC,CAAC","file":"wait.component.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  Input,\n  ElementRef\n} from '@angular/core';\n\nimport {\n  SkyWaitAdapterService\n} from './wait-adapter.service';\n\n\nexport class SkyWaitComponent {\n\n  \n  public set isWaiting(value: boolean) {\n    if (value && !this._isFullPage) {\n      this.adapterService.setWaitBounds(this.elRef);\n    } else if (!value && !this._isFullPage) {\n      this.adapterService.removeWaitBounds(this.elRef);\n    }\n    this.adapterService.setBusyState(this.elRef, this._isFullPage, value);\n    this._isWaiting = value;\n  }\n\n  public get isWaiting() {\n    return this._isWaiting;\n  }\n\n  \n  public set isFullPage(value: boolean) {\n    if (value) {\n      this.adapterService.removeWaitBounds(this.elRef);\n    } else if (!value && this._isWaiting) {\n      this.adapterService.setWaitBounds(this.elRef);\n    }\n\n    this._isFullPage = value;\n  }\n\n  public get isFullPage() {\n    return this._isFullPage;\n  }\n\n  \n  public isNonBlocking: boolean;\n\n  private _isWaiting: boolean;\n\n  private _isFullPage: boolean;\n\n  constructor(private elRef: ElementRef, private adapterService: SkyWaitAdapterService) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sky-wait',\n  template: `<div class=\"sky-wait-container\">\n  <div\n    *ngIf=\"isWaiting\"\n    [ngClass]=\"{\n      'sky-wait-mask-loading-fixed': isFullPage,\n      'sky-wait-mask-loading-non-blocking': isNonBlocking,\n      'sky-wait-mask-loading-blocking': !isNonBlocking\n      }\"\n    >\n    <div class=\"sky-wait\">\n      <div class=\"sky-wait-double-bounce1\"></div>\n      <div class=\"sky-wait-double-bounce2\"></div>\n    </div>\n  </div>\n</div>\n\n`,\n  styles: [`.sky-wait-mask-loading-blocking {\n  margin: auto;\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  background-color: rgba(255, 255, 255, 0.7);\n  z-index: 1000;\n}\n\n.sky-wait-mask-loading-fixed {\n  position: fixed;\n}\n\n.sky-wait {\n  width: 50px;\n  height: 50px;\n  margin-top: -25px;\n  margin-left: -25px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n}\n\n.sky-wait-mask-loading-non-blocking {\n  bottom: 0;\n}\n\n.sky-wait-mask-loading-non-blocking .sky-wait {\n  top: auto;\n  right: auto;\n  bottom: 0;\n  left: 0;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.sky-wait-double-bounce1, .sky-wait-double-bounce2 {\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  background-color: #71bf43;\n  opacity: 0.6;\n  position: absolute;\n  top: 0;\n  left: 0;\n  -webkit-animation: sk-bounce 2.0s infinite ease-in-out;\n  animation: sk-bounce 2.0s infinite ease-in-out;\n}\n\n.sky-wait-double-bounce2 {\n  -webkit-animation-delay: -1.0s;\n  animation-delay: -1.0s;\n}\n\n@-webkit-keyframes sk-bounce {\n  0%, 100% {\n    -webkit-transform: scale(0);\n  }\n  50% {\n    -webkit-transform: scale(1);\n  }\n}\n\n@keyframes sk-bounce {\n  0%, 100% {\n    transform: scale(0);\n    -webkit-transform: scale(0);\n  }\n  50% {\n    transform: scale(1);\n    -webkit-transform: scale(1);\n  }\n}\n\n.sky-wait-container.sky-wait-active {\n  position: relative;\n}\n`],\n  providers: [SkyWaitAdapterService]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: SkyWaitAdapterService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'isWaiting': [{ type: Input },],\n'isFullPage': [{ type: Input },],\n'isNonBlocking': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}