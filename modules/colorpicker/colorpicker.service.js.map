{"version":3,"sources":["../../../.srctemp/modules/colorpicker/colorpicker.service.ts"],"names":[],"mappings":"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","file":"colorpicker.service.js","sourceRoot":"","sourcesContent":["// spell-checker:ignore hsva, hsla, cmyk, denormalize, colorpicker,Injectable\nimport { Injectable } from '@angular/core';\nimport { SkyColorpickerCmyk } from './types/colorpicker-cmyk';\nimport { SkyColorpickerHsla } from './types/colorpicker-hsla';\nimport { SkyColorpickerHsva } from './types/colorpicker-hsva';\nimport { SkyColorpickerRgba } from './types/colorpicker-rgba';\nimport { SkyColorpickerOutput } from './types/colorpicker-output';\n\n\nexport class SkyColorpickerService {\n  constructor() { }\n\n  public hsla2hsva(hsla: SkyColorpickerHsla): SkyColorpickerHsva {\n    const alpha: number = Math.min(hsla.alpha, 1);\n    const hue: number = Math.min(hsla.hue, 1);\n    const lightness: number = Math.min(hsla.lightness, 1);\n    const saturation: number = Math.min(hsla.saturation, 1);\n    let hsva: SkyColorpickerHsva = {\n      'hue': hue,\n      'saturation': saturation,\n      'value': lightness,\n      'alpha': alpha\n    };\n    if (lightness === 0) {\n      hsva.saturation = 0;\n      hsva.value = 0;\n    } else {\n      hsva.value = lightness + saturation * (1 - Math.abs(2 * lightness - 1)) / 2;\n      hsva.saturation = 2 * (hsva.value - lightness) / hsva.value;\n\n    }\n    return hsva;\n  }\n\n  public hsva2hsla(hsva: SkyColorpickerHsva): SkyColorpickerHsla {\n    const alpha: number = hsva.alpha;\n    const hue: number = hsva.hue;\n    const saturation: number = hsva.saturation;\n    const value: number = hsva.value;\n\n    let hsla: SkyColorpickerHsla = {\n      'hue': hue,\n      'saturation': saturation,\n      'lightness': value,\n      'alpha': alpha\n    };\n    if (value === 0) {\n      hsla.lightness = 0;\n      hsla.saturation = 0;\n    } else {\n      hsla.lightness = value * (2 - saturation) / 2;\n      hsla.saturation = value * saturation / (1 - Math.abs(2 * hsla.lightness - 1));\n    }\n    return hsla;\n  }\n\n  public rgbaToHsva(rgba: SkyColorpickerRgba): SkyColorpickerHsva {\n    const red: number = Math.min(rgba.red, 1);\n    const green: number = Math.min(rgba.green, 1);\n    const blue: number = Math.min(rgba.blue, 1);\n    const alpha: number = Math.min(rgba.alpha, 1);\n    const max: number = Math.max(red, green, blue);\n    const min: number = Math.min(red, green, blue);\n    const value: number = max;\n    const d = max - min;\n    const saturation: number = max === 0 ? 0 : d / max;\n    let hue: number = 0;\n    let maxValue: { [key: number]: number };\n    if (max !== min) {\n      maxValue = {\n        [red]: (green - blue) / d + (green < blue ? 6 : 0),\n        [green]: (blue - red) / d + 2,\n        [blue]: (red - green) / d + 4\n      };\n      hue = maxValue[max];\n      hue /= 6;\n    }\n    const hsva: SkyColorpickerHsva = {\n      'hue': hue,\n      'saturation': saturation,\n      'value': value,\n      'alpha': alpha\n    };\n    return hsva;\n  }\n\n  public rgbaToCmyk(rgba: SkyColorpickerRgba): SkyColorpickerCmyk {\n    let cmyk: SkyColorpickerCmyk = { 'cyan': 0, 'magenta': 0, 'yellow': 0, 'key': 0 };\n    const key: number = 1 - Math.max(rgba.red, rgba.green, rgba.blue);\n\n    if (key === 1) {\n      cmyk.key = 1;\n      return cmyk;\n    }\n    cmyk.cyan = (1 - rgba.red - key) / (1 - key);\n    cmyk.magenta = (1 - rgba.green - key) / (1 - key);\n    cmyk.yellow = (1 - rgba.blue - key) / (1 - key);\n    cmyk.key = key;\n    return cmyk;\n  }\n\n  public hsvaToRgba(hsva: SkyColorpickerHsva): SkyColorpickerRgba {\n    let red: number = 0;\n    let green: number = 0;\n    let blue: number = 0;\n    const hue = hsva.hue;\n    const saturation = hsva.saturation;\n    const value = hsva.value;\n    const alpha = hsva.alpha;\n    const i = Math.floor(hue * 6);\n    const f = hue * 6 - i;\n    const p = value * (1 - saturation);\n    const q = value * (1 - f * saturation);\n    const t = value * (1 - (1 - f) * saturation);\n    const color: { [key: number]: any } = {\n      0: (): void => { red = value; green = t; blue = p; },\n      1: (): void => { red = q; green = value; blue = p; },\n      2: (): void => { red = p; green = value; blue = t; },\n      3: (): void => { red = p; green = q; blue = value; },\n      4: (): void => { red = t; green = p; blue = value; },\n      5: (): void => { red = value; green = p; blue = q; }\n    };\n    color[i % 6]();\n\n    const rgba: SkyColorpickerRgba = {\n      'red': red,\n      'green': green,\n      'blue': blue,\n      'alpha': alpha\n    };\n    return rgba;\n  }\n\n  public stringToHsva(colorString: string, hex8: boolean): SkyColorpickerHsva {\n    let stringParsers = [\n      { // tslint:disable max-line-length\n        re: /(rgb)a?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*%?,\\s*(\\d{1,3})\\s*%?(?:,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)/,\n        parse: (execResult: any) => {\n          const rgba: SkyColorpickerRgba = {\n            'red': parseInt(execResult[2], 0) / 255,\n            'green': parseInt(execResult[3], 0) / 255,\n            'blue': parseInt(execResult[4], 0) / 255,\n            'alpha': parseFloat(execResult[5])\n          };\n          return rgba;\n        }\n      },\n      {\n        re: /(hsl)a?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})%\\s*,\\s*(\\d{1,3})%\\s*(?:,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)/,\n        parse: (execResult: any) => {\n          const hsla: SkyColorpickerHsla = {\n            'hue': parseInt(execResult[2], 0) / 360,\n            'saturation': parseInt(execResult[3], 0) / 100,\n            'lightness': parseInt(execResult[4], 0) / 100,\n            'alpha': parseFloat(execResult[5])\n          };\n          return hsla;\n          // tslint:enable max-line-length\n        }\n      }\n    ];\n    if (hex8) {\n      stringParsers.push({\n        re: /#?([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})$/,\n        parse: (execResult: any) => {\n          const rgba: SkyColorpickerRgba = {\n            'red': parseInt(execResult[1], 16) / 255,\n            'green': parseInt(execResult[2], 16) / 255,\n            'blue': parseInt(execResult[3], 16) / 255,\n            'alpha': parseInt(execResult[4], 16) / 255\n          };\n          return rgba;\n\n        }\n      });\n    } else {\n      stringParsers.push({\n        re: /#?([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})$/,\n        parse: (execResult: any) => {\n          const rgba: SkyColorpickerRgba = {\n            'red': parseInt(execResult[1], 16) / 255,\n            'green': parseInt(execResult[2], 16) / 255,\n            'blue': parseInt(execResult[3], 16) / 255,\n            'alpha': 1\n          };\n          return rgba;\n        }\n      },\n        {\n          re: /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])$/,\n          parse: (execResult: any) => {\n            const rgba: SkyColorpickerRgba = {\n              'red': parseInt(execResult[1] + execResult[1], 16) / 255,\n              'green': parseInt(execResult[2] + execResult[2], 16) / 255,\n              'blue': parseInt(execResult[3] + execResult[3], 16) / 255,\n              'alpha': 1\n            };\n            return rgba;\n          }\n        });\n    }\n\n    let hsva: SkyColorpickerHsva = undefined;\n    for (let key in stringParsers) {\n      /* istanbul ignore else */ /* for in must be filtered by an if */\n      if (stringParsers.hasOwnProperty(key)) {\n        let parser = stringParsers[key];\n        let match = parser.re.exec(colorString);\n        let color: any = match && parser.parse(match);\n        if (color) {\n          if ('red' in color) {\n            hsva = this.rgbaToHsva(color);\n          }\n          if ('hue' in color) {\n            hsva = this.hsla2hsva(color);\n          }\n\n          return hsva;\n        }\n      }\n    }\n    return hsva;\n  }\n\n  public outputFormat(hsva: SkyColorpickerHsva, outputFormat: string, allowHex8: boolean): string {\n    if (['hsla', 'hex', 'cmyk'].indexOf(outputFormat) === -1) { outputFormat = 'rgba'; }\n    let color: { [key: string]: any } = {\n      'hsla': () => {\n        let hsla = this.denormalizeHSLA(this.hsva2hsla(hsva));\n        return `hsla(${hsla.hue},${hsla.saturation}%,${hsla.lightness}%,${hsla.alpha})`;\n      },\n      'hex': () => {\n        return this.hexText(this.denormalizeRGBA(this.hsvaToRgba(hsva)), allowHex8);\n      },\n      'cmyk': () => {\n        let cmyk = this.denormalizeCMYK(this.rgbaToCmyk(this.hsvaToRgba(hsva)));\n        return `cmyk(${cmyk.cyan}%,${cmyk.magenta}%,${cmyk.yellow}%,${cmyk.key}%)`;\n      },\n      'rgba': () => {\n        let rgba = this.denormalizeRGBA(this.hsvaToRgba(hsva));\n        return `rgba(${rgba.red},${rgba.green},${rgba.blue},${rgba.alpha})`;\n      }\n    };\n\n    return color[outputFormat]();\n  }\n\n  public skyColorpickerOut(color: SkyColorpickerHsva) {\n    let formatColor: SkyColorpickerOutput;\n    let cmykText: string = this.outputFormat(color, 'cmyk', true);\n    let hslaText: string = this.outputFormat(color, 'hsla', true);\n    let rgbaText: string = this.outputFormat(color, 'rgba', true);\n    let rgba: SkyColorpickerRgba = this.hsvaToRgba(color);\n    let hsla: SkyColorpickerHsla = this.hsva2hsla(color);\n    let cmyk: SkyColorpickerCmyk = this.rgbaToCmyk(rgba);\n    let hex: string = this.outputFormat(color, 'hex', false);\n\n    formatColor = {\n      'cmykText': cmykText,\n      'hslaText': hslaText,\n      'rgbaText': rgbaText,\n      'hsva': this.denormalizeHSVA(color),\n      'rgba': this.denormalizeRGBA(rgba),\n      'hsla': this.denormalizeHSLA(hsla),\n      'cmyk': this.denormalizeCMYK(cmyk),\n      'hex': hex\n    };\n    return formatColor;\n  }\n\n  public hexText(rgba: SkyColorpickerRgba, allowHex8: boolean): string {\n    // tslint:disable no-bitwise\n    let hexText = '#' + ((1 << 24) |\n      (rgba.red << 16) |\n      (rgba.green << 8) |\n      rgba.blue).toString(16).substr(1);\n    if (\n      hexText[1] === hexText[2]\n      && hexText[3] === hexText[4]\n      && hexText[5] === hexText[6]\n      && rgba.alpha === 1\n      && !allowHex8) {\n      hexText = '#' + hexText[1] + hexText[3] + hexText[5];\n    }\n    if (allowHex8) {\n      hexText += ((1 << 8) | Math.round(rgba.alpha * 255)).toString(16).substr(1);\n    }\n    return hexText;\n    // tslint:enable no-bitwise\n  }\n\n  public denormalizeRGBA(rgba: SkyColorpickerRgba): SkyColorpickerRgba {\n    const denormalizeRgba: SkyColorpickerRgba = {\n      'red': Math.round(rgba.red * 255),\n      'green': Math.round(rgba.green * 255),\n      'blue': Math.round(rgba.blue * 255),\n      'alpha': Math.round(rgba.alpha * 100) / 100\n    };\n    return denormalizeRgba;\n  }\n\n  public denormalizeHSLA(hsla: SkyColorpickerHsla): SkyColorpickerHsla {\n    const denormalizeHsla: SkyColorpickerHsla = {\n      hue: Math.round((hsla.hue) * 360),\n      saturation: Math.round(hsla.saturation * 100),\n      lightness: Math.round(hsla.lightness * 100),\n      alpha: Math.round(hsla.alpha * 100) / 100\n    };\n    return denormalizeHsla;\n  }\n\n  public denormalizeHSVA(hsla: SkyColorpickerHsva): SkyColorpickerHsva {\n    const denormalizeHsva: SkyColorpickerHsva = {\n      hue: Math.round((hsla.hue) * 360),\n      saturation: Math.round(hsla.saturation * 100),\n      value: Math.round(hsla.value * 100),\n      alpha: Math.round(hsla.alpha * 100) / 100\n    };\n    return denormalizeHsva;\n  }\n\n  public denormalizeCMYK(cmyk: SkyColorpickerCmyk): SkyColorpickerCmyk {\n    const denormalizeCmyk: SkyColorpickerCmyk = {\n      cyan: Math.round((cmyk.cyan) * 100),\n      magenta: Math.round(cmyk.magenta * 100),\n      yellow: Math.round(cmyk.yellow * 100),\n      key: Math.round(cmyk.key * 100)\n    };\n    return denormalizeCmyk;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}