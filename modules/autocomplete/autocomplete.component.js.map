{"version":3,"sources":["../../../.srctemp/modules/autocomplete/autocomplete.component.ts"],"names":[],"mappings":"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","file":"autocomplete.component.js","sourceRoot":"","sourcesContent":["import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/fromEvent';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil';\n\nimport {\n  SkyDropdownMenuChange,\n  SkyDropdownMessageType,\n  SkyDropdownMessage\n} from '../dropdown';\n\nimport {\n  SkyAutocompleteInputTextChange,\n  SkyAutocompleteSearchFunction,\n  SkyAutocompleteSearchFunctionFilter,\n  SkyAutocompleteSelectionChange\n} from './types';\n\nimport { SkyAutocompleteAdapterService } from './autocomplete-adapter.service';\nimport { SkyAutocompleteInputDirective } from './autocomplete-input.directive';\nimport { skyAutocompleteDefaultSearchFunction } from './autocomplete-default-search-function';\n\n\nexport class SkyAutocompleteComponent\n  implements OnInit, OnDestroy, AfterContentInit {\n\n  \n  public set data(value: any[]) {\n    this._data = value;\n  }\n\n  public get data(): any[] {\n    return this._data || [];\n  }\n\n  \n  public set descriptorProperty(value: string) {\n    this._descriptorProperty = value;\n  }\n\n  public get descriptorProperty(): string {\n    return this._descriptorProperty || 'name';\n  }\n\n  \n  public set propertiesToSearch(value: string[]) {\n    this._propertiesToSearch = value;\n  }\n\n  public get propertiesToSearch(): string[] {\n    return this._propertiesToSearch || ['name'];\n  }\n\n  \n  public set search(value: SkyAutocompleteSearchFunction) {\n    this._search = value;\n  }\n\n  public get search(): SkyAutocompleteSearchFunction {\n    return this._search || skyAutocompleteDefaultSearchFunction({\n      propertiesToSearch: this.propertiesToSearch,\n      searchFilters: this.searchFilters,\n      searchResultsLimit: this.searchResultsLimit\n    });\n  }\n\n  \n  public set searchResultTemplate(value: TemplateRef<any>) {\n    this._searchResultTemplate = value;\n  }\n\n  public get searchResultTemplate(): TemplateRef<any> {\n    return this._searchResultTemplate || this.defaultSearchResultTemplate;\n  }\n\n  \n  public set searchTextMinimumCharacters(value: number) {\n    this._searchTextMinimumCharacters = value;\n  }\n\n  public get searchTextMinimumCharacters(): number {\n    return (this._searchTextMinimumCharacters > 0)\n      ? this._searchTextMinimumCharacters : 1;\n  }\n\n  \n  public searchFilters: SkyAutocompleteSearchFunctionFilter[];\n\n  \n  public searchResultsLimit: number;\n\n  \n  public get selectionChange(): EventEmitter<SkyAutocompleteSelectionChange> {\n    return this._selectionChange;\n  }\n\n  public get dropdownController(): Subject<SkyDropdownMessage> {\n    return this._dropdownController;\n  }\n\n  public get searchResults(): any[] {\n    return this._searchResults || [];\n  }\n\n  public get highlightText(): string {\n    return this._highlightText || '';\n  }\n\n  \n  private defaultSearchResultTemplate: TemplateRef<any>;\n\n  \n  private inputDirective: SkyAutocompleteInputDirective;\n\n  private ngUnsubscribe = new Subject();\n  private isMouseEnter = false;\n  private searchResultsIndex = 0;\n  private searchText: string;\n\n  private _data: any[];\n  private _descriptorProperty: string;\n  private _dropdownController = new Subject<SkyDropdownMessage>();\n  private _highlightText: string;\n  private _propertiesToSearch: string[];\n  private _search: SkyAutocompleteSearchFunction;\n  private _searchResults: any[];\n  private _searchResultTemplate: TemplateRef<any>;\n  private _searchTextMinimumCharacters: number;\n  private _selectionChange = new EventEmitter<SkyAutocompleteSelectionChange>();\n\n  constructor(\n    private adapter: SkyAutocompleteAdapterService,\n    private changeDetector: ChangeDetectorRef,\n    private elementRef: ElementRef\n  ) { }\n\n  public ngOnInit(): void {\n    const element = this.elementRef.nativeElement;\n\n    Observable\n      .fromEvent(element, 'keydown')\n      .takeUntil(this.ngUnsubscribe)\n      .subscribe((event: KeyboardEvent) => {\n        this.handleKeyDown(event);\n      });\n\n    Observable\n      .fromEvent(element, 'mouseenter')\n      .takeUntil(this.ngUnsubscribe)\n      .subscribe(() => {\n        this.isMouseEnter = true;\n      });\n\n    Observable\n      .fromEvent(element, 'mouseleave')\n      .takeUntil(this.ngUnsubscribe)\n      .subscribe(() => {\n        this.isMouseEnter = false;\n      });\n  }\n\n  public ngAfterContentInit(): void {\n    if (!this.inputDirective) {\n      throw Error([\n        'The SkyAutocompleteComponent requires a ContentChild input or',\n        'textarea bound with the SkyAutocomplete directive. For example:',\n        '`<input type=\"text\" skyAutocomplete>`.'\n      ].join(' '));\n    }\n\n    this.inputDirective.displayWith = this.descriptorProperty;\n\n    this.inputDirective.textChanges\n      .takeUntil(this.ngUnsubscribe)\n      .subscribe((change: SkyAutocompleteInputTextChange) => {\n        this.searchTextChanged(change.value);\n      });\n\n    this.inputDirective.blur\n      .takeUntil(this.ngUnsubscribe)\n      .subscribe(() => {\n        if (!this.isMouseEnter) {\n          this.searchText = '';\n          this.closeDropdown();\n        }\n      });\n\n    this.adapter.watchDropdownWidth(this.elementRef);\n  }\n\n  public ngOnDestroy(): void {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n\n  public onMenuChanges(change: SkyDropdownMenuChange): void {\n    if (change.activeIndex !== undefined) {\n      this.searchResultsIndex = change.activeIndex;\n    }\n\n    if (change.selectedItem) {\n      this.selectActiveSearchResult();\n    }\n\n    if (change.items) {\n      this.sendDropdownMessage(SkyDropdownMessageType.FocusFirstItem);\n    }\n  }\n\n  private handleKeyDown(event: KeyboardEvent): void {\n    const key = event.key.toLowerCase();\n\n    /* tslint:disable-next-line:switch-default */\n    switch (key) {\n      case 'arrowup':\n      this.sendDropdownMessage(SkyDropdownMessageType.FocusPreviousItem);\n      event.preventDefault();\n      break;\n\n      case 'arrowdown':\n      // Trigger a search if there is search text and the dropdown is not open.\n      if (this.searchText && !this.hasSearchResults()) {\n        const text = this.searchText;\n        this.searchText = '';\n        this.searchTextChanged(text);\n        event.preventDefault();\n      } else {\n        this.sendDropdownMessage(SkyDropdownMessageType.FocusNextItem);\n        event.preventDefault();\n      }\n      break;\n\n      case 'tab':\n      case 'enter':\n      /* istanbul ignore else */\n      if (this.hasSearchResults()) {\n        this.selectActiveSearchResult();\n        event.preventDefault();\n        event.stopPropagation();\n      }\n      break;\n\n      case 'escape':\n      this.closeDropdown();\n      event.preventDefault();\n      break;\n    }\n  }\n\n  private searchTextChanged(searchText: string): void {\n    const isEmpty = (!searchText || searchText.match(/^\\s+$/));\n\n    if (isEmpty) {\n      this.searchText = '';\n      this.closeDropdown();\n      return;\n    }\n\n    const isLongEnough = (searchText.length >= this.searchTextMinimumCharacters);\n    const isDifferent = (searchText !== this.searchText);\n\n    this.searchText = searchText.trim();\n\n    if (isLongEnough && isDifferent) {\n      this.performSearch().then((results: any[]) => {\n        if (!this.hasSearchResults()) {\n          this.sendDropdownMessage(SkyDropdownMessageType.Open);\n        }\n\n        this._searchResults = results;\n        this._highlightText = this.searchText;\n        this.changeDetector.markForCheck();\n      });\n    }\n  }\n\n  private performSearch(): Promise<any> {\n    const result = this.search(this.searchText, this.data);\n\n    if (result instanceof Array) {\n      return Promise.resolve(result);\n    }\n\n    return result;\n  }\n\n  private selectActiveSearchResult(): void {\n    const result = this.searchResults[this.searchResultsIndex];\n\n    this.searchText = result[this.descriptorProperty];\n    this.inputDirective.value = result;\n    this.selectionChange.emit({\n      selectedItem: result\n    });\n\n    this.closeDropdown();\n  }\n\n  private closeDropdown(): void {\n    this._searchResults = [];\n    this._highlightText = '';\n    this.changeDetector.markForCheck();\n    this.sendDropdownMessage(SkyDropdownMessageType.Close);\n  }\n\n  private sendDropdownMessage(type: SkyDropdownMessageType): void {\n    this.dropdownController.next({ type });\n  }\n\n  private hasSearchResults(): boolean {\n    return (this.searchResults && this.searchResults.length > 0);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sky-autocomplete',\n  template: `<div class=\"sky-autocomplete\">\n  <ng-content>\n  </ng-content>\n  <div class=\"sky-autocomplete-results\">\n\n    <sky-dropdown\n      [dismissOnBlur]=\"false\"\n      [messageStream]=\"dropdownController\">\n\n      <sky-dropdown-button>\n      </sky-dropdown-button>\n\n      <sky-dropdown-menu\n        [useNativeFocus]=\"false\"\n        [skyHighlight]=\"highlightText\"\n        (menuChanges)=\"onMenuChanges($event)\">\n\n        <sky-dropdown-item\n          *ngFor=\"let result of searchResults; let i = index\">\n\n          <button\n            type=\"button\">\n            <ng-container\n              *ngTemplateOutlet=\"searchResultTemplate; context: { item: result }\">\n            </ng-container>\n          </button>\n\n        </sky-dropdown-item>\n      </sky-dropdown-menu>\n    </sky-dropdown>\n  </div>\n  <ng-template\n    let-item=\"item\"\n    #defaultSearchResultTemplate>\n    {{ item[descriptorProperty] }}\n  </ng-template>\n</div>\n`,\n  styles: [`.sky-autocomplete {\n  position: relative;\n}\n\n.sky-autocomplete ::ng-deep .sky-dropdown-button {\n  visibility: hidden;\n  overflow: hidden;\n  width: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n}\n`],\n  providers: [SkyAutocompleteAdapterService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SkyAutocompleteAdapterService, },\n{type: ChangeDetectorRef, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'descriptorProperty': [{ type: Input },],\n'propertiesToSearch': [{ type: Input },],\n'search': [{ type: Input },],\n'searchResultTemplate': [{ type: Input },],\n'searchTextMinimumCharacters': [{ type: Input },],\n'searchFilters': [{ type: Input },],\n'searchResultsLimit': [{ type: Input },],\n'selectionChange': [{ type: Output },],\n'defaultSearchResultTemplate': [{ type: ViewChild, args: ['defaultSearchResultTemplate', ] },],\n'inputDirective': [{ type: ContentChild, args: [SkyAutocompleteInputDirective, ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}