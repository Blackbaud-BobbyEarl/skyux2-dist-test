{"version":3,"sources":["../../../.srctemp/modules/search/search-adapter.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAEL,UAAU,EACV,QAAQ,EACT,MAAM,eAAA,CAAgB;AAGvB;IAEE,iCAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;IAAI,CAAC;IAEpC,6CAAW,GAAlB,UAAmB,QAAoB;QACrC,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,CAAC;IACzE,CAAC;IAEM,4CAAU,GAAjB,UAAkB,QAAoB;QACpC,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC,CAAC;IACxE,CAAC;IAEM,qDAAmB,GAA1B,UAA2B,QAAoB;QAC7C,IAAI,WAAW,GAAG,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC;QACnE,IAAI,WAAW,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC;QACjE,IAAI,QAAQ,GAAG,WAAW,GAAG,WAAW,CAAC;QAEzC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC;QAE/E,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,EAC9D,WAAW,EAAE,QAAQ,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,CAAC;IAC7C,CAAC;IAEM,mDAAiB,GAAxB,UAAyB,QAAoB;QAC3C,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,EAC9D,WAAW,EAAE,SAAS,CAAC,CAAC;IAC5B,CAAC;IAEO,qDAAmB,GAA3B,UAA4B,QAAoB;QAC9C,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,6BAA6B,CAAC,CAAC;IAC7E,CAAC;IAEO,uDAAqB,GAA7B,UAA8B,QAAoB;QAChD,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,sBAAsB,CAAC,CAAC;IACtE,CAAC;IAEO,sDAAoB,GAA5B,UAA6B,QAAoB;QAC/C,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;IACvE,CAAC;IAEO,4CAAU,GAAlB,UAAmB,QAAoB;QACrC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IACvD,CAAC;IAQH,8BAAC;AAAD,CAlDA,AAkDC;;AAPM,kCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,sCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,QAAQ,GAAG;CACjB,EAF6F,CAE7F,CAAC","file":"search-adapter.service.js","sourceRoot":"","sourcesContent":["import {\n  ElementRef,\n  Injectable,\n  Renderer\n} from '@angular/core';\n\n\nexport class SkySearchAdapterService {\n\n  constructor(private renderer: Renderer) { }\n\n  public selectInput(searchEl: ElementRef) {\n    this.renderer.invokeElementMethod(this.getInputEl(searchEl), 'select');\n  }\n\n  public focusInput(searchEl: ElementRef) {\n    this.renderer.invokeElementMethod(this.getInputEl(searchEl), 'focus');\n  }\n\n  public startInputAnimation(searchEl: ElementRef) {\n    let buttonWidth = this.getSearchOpenButtonEl(searchEl).clientWidth;\n    let offsetWidth = this.getSearchContainerEl(searchEl).offsetLeft;\n    let minWidth = buttonWidth + offsetWidth;\n\n    this.getInputContainerEl(searchEl).style.minWidth = minWidth.toString() + 'px';\n\n    this.renderer.setElementStyle(this.getInputContainerEl(searchEl),\n      'min-width', minWidth.toString() + 'px');\n  }\n\n  public endInputAnimation(searchEl: ElementRef) {\n    this.renderer.setElementStyle(this.getInputContainerEl(searchEl),\n      'min-width', undefined);\n  }\n\n  private getInputContainerEl(searchEl: ElementRef) {\n    return searchEl.nativeElement.querySelector('.sky-search-input-container');\n  }\n\n  private getSearchOpenButtonEl(searchEl: ElementRef) {\n    return searchEl.nativeElement.querySelector('.sky-search-btn-open');\n  }\n\n  private getSearchContainerEl(searchEl: ElementRef) {\n    return searchEl.nativeElement.querySelector('.sky-search-container');\n  }\n\n  private getInputEl(searchEl: ElementRef) {\n    return searchEl.nativeElement.querySelector('input');\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}