{"version":3,"sources":["../../../.srctemp/modules/text-expand-repeater/text-expand-repeater.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,KAAK,EACL,UAAU,EACV,SAAS,EAEV,MAAM,eAAA,CAAgB;AACvB,OAAO,EACL,mCAAmC,EACpC,MAAM,wCAAA,CAAyC;AAChD,OAAO,EACL,mBAAmB,EACpB,MAAM,cAAA,CAAe;AAEtB;IAkBE,wCAAoB,SAA8B,EAAU,KAAiB,EACnE,yBAA8D;QADpD,cAAS,GAAT,SAAS,CAAqB;QAAU,UAAK,GAAL,KAAK,CAAY;QACnE,8BAAyB,GAAzB,yBAAyB,CAAqC;QARhE,gBAAW,GAAW,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,sBAAsB,CAAC,CAAC;QACvE,gBAAW,GAAW,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,sBAAsB,CAAC,CAAC;QACvE,eAAU,GAAY,KAAK,CAAC;IAMwC,CAAC;IAf7E,sBAAW,gDAAI;aAAf,UAAgB,KAAiB;YAC/B,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACpB,CAAC;;;OAAA;IAeM,wDAAe,GAAtB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACjE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC9D,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACzD,CAAC;QACH,CAAC;IACH,CAAC;IAEM,qDAAY,GAAnB;QACE,yCAAyC;QACzC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACrB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC9D,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACzD,CAAC;QACH,CAAC;QACD,6FAA6F;QAC7F,IAAI,CAAC,yBAAyB,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;IACjF,CAAC;IAEM,uDAAc,GAArB;QAAA,iBAgBC;QAfC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC7B,UAAU,CAAC;gBACT,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC;QAEL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC7B,UAAU,CAAC;gBACT,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,KAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YAC9B,CAAC,CAAC,CAAC;QAEL,CAAC;IACH,CAAC;IAEO,8DAAqB,GAA7B;QACE,6BAA6B;QAC7B,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,oEAAoE;QACpE,4FAA4F;QAC5F,IAAI,aAAa,GAAG,IAAI,CAAC,yBAAyB,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACxF,IAAI,CAAC,yBAAyB,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,EAAK,aAAa,OAAI,CAAC,CAAC;IAC5F,CAAC;IAEO,wDAAe,GAAvB,UAAwB,SAAkB;QAA1C,iBAqCC;QApCC,IAAI,OAAO,GAAG,IAAI,CAAC,yBAAyB,CAAC;QAC7C,IAAI,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC;QAEjC,OAAO,CAAC,kBAAkB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QACjD,IAAI,aAAa,GAAG,OAAO,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;QAC1D,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC9D,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBACf,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAClC,CAAC;QACH,CAAC;QACD,IAAI,SAAS,GAAG,OAAO,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;QACtD,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;QACrC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;QACrC,CAAC;QACD,EAAE,CAAC,CAAC,SAAS,GAAG,aAAa,CAAC,CAAC,CAAC;YAC9B,mFAAmF;YACnF,qEAAqE;YACrE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC9D,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAClC,CAAC;QACH,CAAC;QAED,OAAO,CAAC,kBAAkB,CAAC,SAAS,EAAK,aAAa,OAAI,CAAC,CAAC;QAC5D,gGAAgG;QAChG,6FAA6F;QAC7F,UAAU,CAAC;YACT,OAAO,CAAC,kBAAkB,CAAC,SAAS,EAAK,SAAS,OAAI,CAAC,CAAC;YACxD,kEAAkE;YAClE,UAAU,CAAC;gBACT,KAAI,CAAC,YAAY,EAAE,CAAC;YACtB,CAAC,EAAE,GAAG,CAAC,CAAC;QACV,CAAC,EAAE,EAAE,CAAC,CAAC;IACT,CAAC;IAEO,8CAAK,GAAb,UAAc,KAAiB;QAC7B,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACV,IAAI,QAAM,GAAG,KAAK,CAAC,MAAM,CAAC;YAC1B,EAAE,CAAC,CAAC,QAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;gBACnC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAC1B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAC1B,CAAC;YACD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;YAC9B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC;IACH,CAAC;IA4CH,qCAAC;AAAD,CAtKA,AAsKC;;AA3CM,yCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,0BAA0B;gBACpC,QAAQ,EAAE,wcAUX;gBACC,MAAM,EAAE,CAAC,oOAWV,CAAC;gBACA,SAAS,EAAE;oBACT,mCAAmC;oBACnC,mBAAmB;iBACpB;aACF,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,6CAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,mBAAmB,GAAG;IAC7B,EAAC,IAAI,EAAE,UAAU,GAAG;IACpB,EAAC,IAAI,EAAE,mCAAmC,GAAG;CAC5C,EAJ6F,CAI7F,CAAC;AACK,6CAAc,GAA2C;IAChE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC9B,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC1B,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,WAAW,EAAG,EAAE,EAAE;CAC3D,CAAC","file":"text-expand-repeater.component.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  Input,\n  ElementRef,\n  ViewChild,\n  AfterViewInit\n} from '@angular/core';\nimport {\n  SkyTextExpandRepeaterAdapterService\n} from './text-expand-repeater-adapter.service';\nimport {\n  SkyResourcesService\n} from '../resources';\n\nexport class SkyTextExpandRepeaterComponent implements AfterViewInit {\n  \n  public maxItems: number;\n  \n  public set data(value: Array<any>) {\n    this.setup(value);\n  }\n  public buttonText: string;\n  public contentItems: Array<any>;\n  public expandable: boolean;\n\n  private seeMoreText: string = this.resources.getString('text_expand_see_more');\n  private seeLessText: string = this.resources.getString('text_expand_see_less');\n  private isExpanded: boolean = false;\n  \n  private containerEl: ElementRef;\n  private items: Array<HTMLElement>;\n\n  constructor(private resources: SkyResourcesService, private elRef: ElementRef,\n    private textExpandRepeaterAdapter: SkyTextExpandRepeaterAdapterService) { }\n\n  public ngAfterViewInit() {\n    if (this.contentItems) {\n      this.items = this.textExpandRepeaterAdapter.getItems(this.elRef);\n      for (let i = this.maxItems; i < this.contentItems.length; i++) {\n        this.textExpandRepeaterAdapter.hideItem(this.items[i]);\n      }\n    }\n  }\n\n  public animationEnd() {\n    // Ensure the correct items are displayed\n    if (!this.isExpanded) {\n      for (let i = this.maxItems; i < this.contentItems.length; i++) {\n        this.textExpandRepeaterAdapter.hideItem(this.items[i]);\n      }\n    }\n    // Set height back to auto so the browser can change the height as needed with window changes\n    this.textExpandRepeaterAdapter.setContainerHeight(this.containerEl, undefined);\n  }\n\n  public repeaterExpand() {\n    if (!this.isExpanded) {\n      this.setContainerMaxHeight();\n      setTimeout(() => {\n        this.isExpanded = true;\n        this.animateRepeater(true);\n      });\n\n    } else {\n      this.setContainerMaxHeight();\n      setTimeout(() => {\n        this.isExpanded = false;\n        this.animateRepeater(false);\n      });\n\n    }\n  }\n\n  private setContainerMaxHeight() {\n    // ensure everything is reset\n    this.animationEnd();\n    /* Before animation is kicked off, ensure that a maxHeight exists */\n    /* Once we have support for angular v4 animations with parameters we can use that instead */\n    let currentHeight = this.textExpandRepeaterAdapter.getContainerHeight(this.containerEl);\n    this.textExpandRepeaterAdapter.setContainerHeight(this.containerEl, `${currentHeight}px`);\n  }\n\n  private animateRepeater(expanding: boolean) {\n    let adapter = this.textExpandRepeaterAdapter;\n    let container = this.containerEl;\n\n    adapter.setContainerHeight(container, undefined);\n    let currentHeight = adapter.getContainerHeight(container);\n    for (let i = this.maxItems; i < this.contentItems.length; i++) {\n      if (!expanding) {\n        adapter.hideItem(this.items[i]);\n      } else {\n        adapter.showItem(this.items[i]);\n      }\n    }\n    let newHeight = adapter.getContainerHeight(container);\n    if (!expanding) {\n      this.buttonText = this.seeMoreText;\n    } else {\n      this.buttonText = this.seeLessText;\n    }\n    if (newHeight < currentHeight) {\n      // The new text is smaller than the old text, so put the old text back before doing\n      // the collapse animation to avoid showing a big chunk of whitespace.\n      for (let i = this.maxItems; i < this.contentItems.length; i++) {\n        adapter.showItem(this.items[i]);\n      }\n    }\n\n    adapter.setContainerHeight(container, `${currentHeight}px`);\n    // This timeout is necessary due to the browser needing to pick up the non-auto height being set\n    // in order to do the transtion in height correctly. Without it the transition does not fire.\n    setTimeout(() => {\n      adapter.setContainerHeight(container, `${newHeight}px`);\n      /* This resets values if the transition does not get kicked off */\n      setTimeout(() => {\n        this.animationEnd();\n      }, 500);\n    }, 10);\n  }\n\n  private setup(value: Array<any>) {\n    if (value) {\n      let length = value.length;\n      if (length > this.maxItems) {\n        this.expandable = true;\n        this.buttonText = this.seeMoreText;\n        this.isExpanded = false;\n      } else {\n        this.expandable = false;\n      }\n      this.contentItems = value;\n    } else {\n      this.contentItems = undefined;\n      this.expandable = false;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sky-text-expand-repeater',\n  template: `<div class=\"sky-text-expand-repeater\">\n  <ul class=\"sky-text-expand-repeater-container\" (transitionend)=\"animationEnd()\" #container>\n    <li *ngFor=\"let item of contentItems\" class=\"sky-text-expand-repeater-item\">\n      {{item}}\n    </li>\n  </ul>\n  <button type=\"button\" class=\"sky-btn sky-btn-link-inline sky-text-expand-repeater-see-more\" *ngIf=\"expandable\" (click)=\"repeaterExpand()\">\n    {{buttonText}}\n  </button>\n</div>\n`,\n  styles: [`.sky-text-expand-repeater-container {\n  overflow-y: hidden;\n  height: auto;\n  margin-bottom: 0;\n  transition: max-height 250ms;\n}\n\n.sky-text-expand-repeater-see-more {\n  white-space: nowrap;\n  padding-left: 40px;\n}\n`],\n  providers: [\n    SkyTextExpandRepeaterAdapterService,\n    SkyResourcesService\n  ]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SkyResourcesService, },\n{type: ElementRef, },\n{type: SkyTextExpandRepeaterAdapterService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'maxItems': [{ type: Input },],\n'data': [{ type: Input },],\n'containerEl': [{ type: ViewChild, args: ['container', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}