{"version":3,"sources":["../../../.srctemp/modules/modal/modal-component-adapter.service.ts"],"names":[],"mappings":"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","file":"modal-component-adapter.service.js","sourceRoot":"","sourcesContent":["import {\n  Injectable,\n  ElementRef\n} from '@angular/core';\n/* tslint:disable */\nlet tabbableSelector = 'a[href], area[href], input:not([disabled]):not([tabindex=\\'-1\\']), ' +\n        'button:not([disabled]):not([tabindex=\\'-1\\']),select:not([disabled]):not([tabindex=\\'-1\\']), textarea:not([disabled]):not([tabindex=\\'-1\\']), ' +\n        'iframe, object, embed, *[tabindex]:not([tabindex=\\'-1\\']), *[contenteditable=true]';\n/* tslint:enable */\n\n\nexport class SkyModalComponentAdapterService {\n  constructor(\n  ) { }\n\n  public handleWindowChange(modalEl: ElementRef): void {\n    let boundedHeightEl = modalEl.nativeElement.querySelector('.sky-modal');\n    let fullPageModalEl = modalEl.nativeElement.querySelector('.sky-modal-full-page');\n    /*\n      Set modal height equal to max height of window (accounting for padding above and below modal)\n    */\n    let newHeight = window.innerHeight - 40;\n\n    boundedHeightEl.style.maxHeight = newHeight.toString() + 'px';\n    if (fullPageModalEl) {\n      fullPageModalEl.style.height = window.innerHeight.toString() + 'px';\n      fullPageModalEl.style.maxHeight = window.innerHeight.toString() + 'px';\n    } else {\n      /*\n        IE11 doesn't handle flex and max-height correctly so we have to explicitly add\n        max-height to the content that accounts for standard header and footer height.\n      */\n      let modalContentEl = modalEl.nativeElement.querySelector('.sky-modal-content');\n      let contentHeight = newHeight - 114;\n      modalContentEl.style.maxHeight = contentHeight.toString() + 'px';\n\n    }\n  }\n\n  public loadFocusElementList(modalEl: ElementRef): Array<HTMLElement> {\n    let elements: Array<HTMLElement>\n      = Array.prototype.slice.call(modalEl.nativeElement.querySelectorAll(tabbableSelector));\n\n    return elements.filter((element) => {\n      return this.isVisible(element);\n    });\n  }\n\n  public isFocusInFirstItem(event: KeyboardEvent, list: Array<HTMLElement>): boolean {\n    /* istanbul ignore next */\n    /* sanity check */\n    let eventTarget = event.target || event.srcElement;\n    return list.length > 0 && eventTarget === list[0];\n  }\n\n  public isFocusInLastItem(event: KeyboardEvent, list: Array<HTMLElement>): boolean {\n    /* istanbul ignore next */\n    /* sanity check */\n    let eventTarget = event.target || event.srcElement;\n    return list.length > 0 && eventTarget === list[list.length - 1];\n  }\n\n  public isModalFocused(event: KeyboardEvent, modalEl: ElementRef): boolean {\n    /* istanbul ignore next */\n    /* sanity check */\n    let eventTarget = event.target || event.srcElement;\n    return modalEl &&\n    eventTarget === modalEl.nativeElement.querySelector('.sky-modal-dialog');\n  }\n\n  public focusLastElement(list: Array<HTMLElement>): boolean {\n    if (list.length > 0) {\n      list[list.length - 1].focus();\n      return true;\n    }\n    return false;\n  }\n\n  public focusFirstElement(list: Array<HTMLElement>): boolean {\n    if (list.length > 0) {\n      list[0].focus();\n      return true;\n    }\n    return false;\n  }\n\n  public modalOpened(modalEl: ElementRef): void {\n    /* istanbul ignore else */\n    /* handle the case where somehow there is a focused element already in the modal */\n    if (!(document.activeElement && modalEl.nativeElement.contains(document.activeElement))) {\n      let currentScrollX = window.pageXOffset;\n      let currentScrollY = window.pageYOffset;\n\n      let inputWithAutofocus = modalEl.nativeElement.querySelector('[autofocus]');\n\n      if (inputWithAutofocus) {\n        inputWithAutofocus.focus();\n      } else {\n        let focusEl: HTMLElement = modalEl.nativeElement.querySelector('.sky-modal');\n        focusEl.focus();\n\n      }\n      window.scrollTo(currentScrollX, currentScrollY);\n    }\n  }\n\n  private isVisible(element: HTMLElement) {\n    return !!(element.offsetWidth ||\n      element.offsetHeight ||\n      element.getClientRects().length);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}