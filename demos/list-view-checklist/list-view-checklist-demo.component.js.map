{"version":3,"sources":["../../../.srctemp/demos/list-view-checklist/list-view-checklist-demo.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACV,MAAM,eAAA,CAAgB;AAEvB,OAAO,EAAE,UAAA,EAAW,MAAO,iBAAA,CAAkB;AAC7C,OAAO,wBAAA,CAAyB;AAChC,OAAO,wBAAA,CAAyB;AAGhC;IAAA;QACS,UAAK,GAAG,UAAU,CAAC,EAAE,CAAC;YAC3B,EAAE,EAAE,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,kBAAkB,EAAC;YACvE,EAAE,EAAE,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,kBAAkB,EAAE;YACzE,EAAE,EAAE,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,kBAAkB,EAAE;YACvE,EAAE,EAAE,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,oBAAoB,EAAE;YAC1E,EAAE,EAAE,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,oBAAoB,EAAE;YAC3E,EAAE,EAAE,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,mBAAmB,EAAE;YACzE,EAAE,EAAE,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,YAAY,EAAE,OAAO,EAAE,yBAAyB,EAAE;SACrF,CAAC,CAAC;QAEI,kBAAa,GAAU,EAAE,CAAC;QAC1B,eAAU,GAAG,UAAU,CAAC;IA+DjC,CAAC;IA7DQ,+DAAmB,GAA1B,UAA2B,WAAiC;QAA5D,iBAMC;QALC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,UAAC,KAAK;YACjC,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,UAAC,IAAI;gBACrC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAClC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAuDH,wCAAC;AAAD,CA3EA,AA2EC;;AAtDM,4CAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,8BAA8B;gBACxC,QAAQ,EAAE,m8BA6CX;aACA,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,gDAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC","file":"list-view-checklist-demo.component.js","sourceRoot":"","sourcesContent":["import {\n  Component\n} from '@angular/core';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/take';\n\n\nexport class SkyListViewChecklistDemoComponent {\n  public items = Observable.of([\n    { id: '1', column1: 101, column2: 'Apple', column3: 'Anne eats apples'},\n    { id: '2', column1: 202, column2: 'Banana', column3: 'Ben eats bananas' },\n    { id: '3', column1: 303, column2: 'Pear', column3: 'Patty eats pears' },\n    { id: '4', column1: 404, column2: 'Grape', column3: 'George eats grapes' },\n    { id: '5', column1: 505, column2: 'Banana', column3: 'Becky eats bananas' },\n    { id: '6', column1: 606, column2: 'Lemon', column3: 'Larry eats lemons' },\n    { id: '7', column1: 707, column2: 'Strawberry', column3: 'Sally eats strawberries' }\n  ]);\n\n  public selectedItems: any[] = [];\n  public selectMode = 'multiple';\n\n  public selectedItemsChange(selectedMap: Map<string, boolean>) {\n    this.items.take(1).subscribe((items) => {\n      this.selectedItems = items.filter((item) => {\n        return selectedMap.get(item.id);\n      });\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sky-list-view-checklist-demo',\n  template: `<div style=\"margin-bottom: 10px;\">\n  <h3>\n    Selection mode\n  </h3>\n  <div>\n    <sky-radio\n      name=\"selectMode\"\n      [(ngModel)]=\"selectMode\"\n      value=\"multiple\">\n      <sky-radio-label>\n        Default select mode\n      </sky-radio-label>\n    </sky-radio>\n  </div>\n  <div>\n    <sky-radio\n      name=\"selectMode\"\n      [(ngModel)]=\"selectMode\"\n      value=\"single\">\n      <sky-radio-label>\n        Single select mode\n      </sky-radio-label>\n    </sky-radio>\n  </div>\n</div>\n\n<sky-list\n  [data]=\"items\"\n  (selectedIdsChange)=\"selectedItemsChange($event)\">\n  <sky-list-toolbar>\n  </sky-list-toolbar>\n  <sky-list-view-checklist\n    label=\"column2\"\n    description=\"column3\"\n    [selectMode]=\"selectMode\">\n  </sky-list-view-checklist>\n</sky-list>\n<div>\n  <label>Selected items:</label>\n  <ul>\n    <li *ngFor=\"let item of selectedItems\">\n      {{item.column2}}\n    </li>\n  </ul>\n</div>\n`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}