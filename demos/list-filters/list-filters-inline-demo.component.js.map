{"version":3,"sources":["../../../.srctemp/demos/list-filters/list-filters-inline-demo.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAU,MAAO,eAAA,CAAgB;AAC1C,OAAO,EAAE,UAAA,EAAW,MAAO,iBAAA,CAAkB;AAC7C,OAAO,wBAAA,CAAyB;AAOhC;IAAA;QAES,UAAK,GAAoB,UAAU,CAAC,EAAE,CAAC;YAC5C;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,QAAQ;gBACd,WAAW,EAAE,wBAAwB;gBACrC,IAAI,EAAE,QAAQ;gBACd,KAAK,EAAE,QAAQ;aAChB;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,kDAAkD;gBAC/D,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,QAAQ;aAChB;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,MAAM;gBACZ,WAAW,EAAE,0CAA0C;gBACvD,IAAI,EAAE,QAAQ;gBACd,KAAK,EAAE,OAAO;aACf;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,YAAY;gBAClB,WAAW,EAAE,4CAA4C;gBACzD,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,KAAK;aACb;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,WAAW;gBACjB,WAAW,EAAE,6CAA6C;gBAC1D,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,MAAM;aACd;SACF,CAAC,CAAC;IAwFL,CAAC;IAtFQ,mEAAuB,GAA9B,UAA+B,IAAmB,EAAE,WAAgB;QAClE,MAAM,CAAC,WAAW,KAAK,KAAK,IAAI,WAAW,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;IACjE,CAAC;IAEM,oEAAwB,GAA/B,UAAgC,IAAmB,EAAE,WAAgB;QACnE,MAAM,CAAC,CAAC,WAAW,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,QAAQ,CAAC,CAAC;IACvE,CAAC;IAgFH,wCAAC;AAAD,CA9HA,AA8HC;;AA9EM,4CAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,8BAA8B;gBACxC,QAAQ,EAAE,+mEAqEX;aACA,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,gDAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC","file":"list-filters-inline-demo.component.js","sourceRoot":"","sourcesContent":["import { Component } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/of';\n\nimport {\n  ListItemModel\n} from '../../core';\n\n\nexport class SkyListFiltersInlineDemoComponent {\n\n  public items: Observable<any> = Observable.of([\n    {\n      id: 0,\n      name: 'Orange',\n      description: 'A round, orange fruit.',\n      type: 'citrus',\n      color: 'orange'\n    },\n    {\n      id: 1,\n      name: 'Mango',\n      description: 'Delicious in smoothies, but don\\'t eat the skin.',\n      type: 'other',\n      color: 'orange'\n    },\n    {\n      id: 2,\n      name: 'Lime',\n      description: 'A sour, green fruit used in many drinks.',\n      type: 'citrus',\n      color: 'green'\n    },\n    {\n      id: 3,\n      name: 'Strawberry',\n      description: 'A red fruit that goes well with shortcake.',\n      type: 'berry',\n      color: 'red'\n    },\n    {\n      id: 4,\n      name: 'Blueberry',\n      description: 'A small, blue fruit often found in muffins.',\n      type: 'berry',\n      color: 'blue'\n    }\n  ]);\n\n  public fruitTypeFilterFunction(item: ListItemModel, filterValue: any): boolean {\n    return filterValue === 'any' || filterValue === item.data.type;\n  }\n\n  public hideOrangeFilterFunction(item: ListItemModel, filterValue: any): boolean {\n    return !filterValue || (filterValue && item.data.color !== 'orange');\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sky-list-filters-inline-demo',\n  template: `<sky-list\n  [data]=\"items\"\n  [defaultView]=\"grid\">\n  <sky-list-toolbar>\n    <sky-list-secondary-actions>\n      <sky-list-secondary-action>\n        <button type=\"button\">\n          Option\n        </button>\n      </sky-list-secondary-action>\n    </sky-list-secondary-actions>\n    <sky-list-toolbar-sort\n      label=\"Fruit name (A - Z)\"\n      field=\"name\"\n      [descending]=\"false\"\n      type=\"string\"\n    >\n    </sky-list-toolbar-sort>\n    <sky-list-toolbar-sort\n      label=\"Fruit name (Z - A)\"\n      field=\"name\"\n      [descending]=\"true\"\n      type=\"string\"\n    >\n    </sky-list-toolbar-sort>\n    <sky-list-filter-inline>\n      <sky-list-filter-inline-item\n        name=\"fruitType\"\n        [filter]=\"fruitTypeFilterFunction\"\n        value=\"any\"\n        defaultValue=\"any\">\n        <ng-template let-filter=\"filter\">\n          <label for=\"sky-demo-select-type\">Fruit type</label>\n          <select\n            id=\"sky-demo-select-type\"\n            [ngModel]=\"filter.value\"\n            (ngModelChange)=\"filter.changed($event)\">\n            <option value=\"any\">Any fruit</option>\n            <option value=\"citrus\">Citrus</option>\n            <option value=\"berry\">Berry</option>\n          </select>\n        </ng-template>\n      </sky-list-filter-inline-item>\n      <sky-list-filter-inline-item\n        name=\"hideOrange\"\n        [filter]=\"hideOrangeFilterFunction\">\n        <ng-template let-filter=\"filter\">\n          <sky-checkbox\n            [ngModel]=\"filter.value\"\n            (ngModelChange)=\"filter.changed($event)\">\n            <sky-checkbox-label>\n              Hide orange fruits\n            </sky-checkbox-label>\n          </sky-checkbox>\n        </ng-template>\n      </sky-list-filter-inline-item>\n    </sky-list-filter-inline>\n  </sky-list-toolbar>\n  <sky-list-view-grid fit=\"scroll\" #grid>\n    <sky-grid-column\n      field=\"name\"\n      heading=\"Name\">\n    </sky-grid-column>\n    <sky-grid-column\n      field=\"description\"\n      heading=\"Description\">\n    </sky-grid-column>\n  </sky-list-view-grid>\n </sky-list>\n`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}