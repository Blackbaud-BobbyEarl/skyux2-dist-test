{"version":3,"sources":["../../../.srctemp/demos/timepicker/timepicker-demo.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAU,MAAO,eAAA,CAAgB;AAG1C;IAAA;QACS,aAAQ,GAAG,IAAI,CAAC;QAChB,aAAQ,GAAG,IAAI,CAAC;QAChB,iBAAY,GAAG,WAAW,CAAC;QAC3B,kBAAa,GAAQ,SAAS,CAAC;QAC/B,kBAAa,GAAQ,OAAO,CAAC;QAC7B,kBAAa,GAAQ,eAAe,CAAC;IA0F9C,CAAC;IAAD,iCAAC;AAAD,CAhGA,AAgGC;;AAzFM,qCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,qBAAqB;gBAC/B,QAAQ,EAAE,k4DAgFX;aACA,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,yCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC","file":"timepicker-demo.component.js","sourceRoot":"","sourcesContent":["import { Component } from '@angular/core';\n\n\nexport class SkyTimepickerDemoComponent {\n  public format12 = 'hh';\n  public format24 = 'HH';\n  public returnFormat = 'HH:mm:ssZ';\n  public selectedTime1: any = '8:30 PM';\n  public selectedTime2: any = '20:30';\n  public selectedTime3: any = '02:00:00-0400';\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sky-timepicker-demo',\n  template: `<h3>\n  12-hour timepicker\n</h3>\n\n<div style=\"max-width: 400px\">\n  <sky-timepicker #timePickerExample1>\n    <input\n      type=\"text\"\n      [skyTimepickerInput]=\"timePickerExample1\"\n      [timeFormat]=\"format12\"\n      [(ngModel)]=\"selectedTime1\"\n      #time=\"ngModel\">\n  </sky-timepicker>\n\n  <div\n    class=\"sky-error-label\"\n    *ngIf=\"time.errors && time.errors.skyTime && (time.dirty || time.touched)\">\n    <span [hidden]=\"!time.errors.skyTime.invalid\" >\n      Please enter a valid time.\n    </span>\n  </div>\n</div>\n\n<div>\n  Selected time is {{selectedTime1?.local}}\n</div>\n\n<br/>\n\n<h3>\n  24-hour timepicker.\n</h3>\n\n<div style=\"max-width: 400px\">\n  <sky-timepicker #timePickerExample2>\n    <input\n    type=\"text\"\n    [skyTimepickerInput]=\"timePickerExample2\"\n    [timeFormat]=\"format24\"\n    [(ngModel)]=\"selectedTime2\"\n    #time2=\"ngModel\">\n  </sky-timepicker>\n  <div\n    class=\"sky-error-label\"\n    *ngIf=\"time2.errors && time2.errors.skyTime && (time2.dirty || time2.touched)\">\n    <span [hidden]=\"!time2.errors.skyTime.invalid\">\n      Please enter a valid time.\n    </span>\n  </div>\n</div>\n\n<div>\n  Selected time is {{selectedTime2?.hour}}:{{selectedTime2?.minute}}\n</div>\n\n<br/>\n\n<h3>\n  Custom timepicker\n</h3>\n\n<div style=\"max-width: 400px\">\n  <sky-timepicker #timePickerExample3>\n    <input\n      type=\"hidden\"\n      [skyTimepickerInput]=\"timePickerExample3\"\n      [timeFormat]=\"format24\"\n      [returnFormat]=\"returnFormat\"\n      [(ngModel)]=\"selectedTime3\"\n      #time3=\"ngModel\">\n  </sky-timepicker>\n  <div\n    class=\"sky-error-label\"\n    *ngIf=\"time3.errors && time3.errors.skyTime && (time3.dirty || time3.touched)\">\n    <span [hidden]=\"!time.errors.skyTime.invalid\">\n      Please enter a valid time.\n    </span>\n  </div>\n  Selected time is {{selectedTime3?.local}}\n</div>\n`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}