{"version":3,"sources":["../../../.srctemp/demos/page-summary/page-summary-demo.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAU,MAAO,eAAA,CAAgB;AAG1C;IAAA;QACS,SAAI,GAAG,qBAAqB,CAAC;QAC7B,cAAS,GAAG,IAAI,CAAC;QACjB,cAAS,GAAG,IAAI,CAAC;QACjB,cAAS,GAAG,IAAI,CAAC;QACjB,iBAAY,GAAG,IAAI,CAAC;QACpB,eAAU,GAAG,IAAI,CAAC;QAClB,gBAAW,GAAG,IAAI,CAAC;QACnB,gBAAW,GAAG,IAAI,CAAC;IAqF5B,CAAC;IAAD,kCAAC;AAAD,CA7FA,AA6FC;;AApFM,sCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,uBAAuB;gBACjC,QAAQ,EAAE,+tFA2EX;aACA,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,0CAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC","file":"page-summary-demo.component.js","sourceRoot":"","sourcesContent":["import { Component } from '@angular/core';\n\n\nexport class SkyPageSummaryDemoComponent {\n  public name = 'Robert C. Hernandez';\n  public showAlert = true;\n  public showImage = true;\n  public showTitle = true;\n  public showSubtitle = true;\n  public showStatus = true;\n  public showContent = true;\n  public showKeyInfo = true;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sky-page-summary-demo',\n  template: `<div style=\"border: solid 1px #ccc\">\n  <sky-page-summary>\n    <sky-page-summary-alert *ngIf=\"showAlert\">\n      <sky-alert alertType=\"info\">This is an alert.</sky-alert>\n    </sky-page-summary-alert>\n    <sky-page-summary-image *ngIf=\"showImage\">\n      <sky-avatar [name]=\"name\" [canChange]=\"true\"></sky-avatar>\n    </sky-page-summary-image>\n    <sky-page-summary-title *ngIf=\"showTitle\">\n      {{name}}\n    </sky-page-summary-title>\n    <sky-page-summary-subtitle *ngIf=\"showSubtitle\">\n      Board member\n    </sky-page-summary-subtitle>\n    <sky-page-summary-status *ngIf=\"showStatus\">\n      <sky-label labelType=\"success\">Fundraiser</sky-label>\n      <sky-label>Inactive</sky-label>\n    </sky-page-summary-status>\n    <sky-page-summary-content *ngIf=\"showContent\">\n      This is the arbitrary content section. You can display any kind of content to complement the\n      content on a page. We recommend that you display content to support the key tasks of users of\n      users who visit the page. We also recommend that you keep in mind the context of how users\n      will use the content and limit the amount of content to avoid overloading the summary.\n    </sky-page-summary-content>\n    <sky-page-summary-key-info *ngIf=\"showKeyInfo\">\n      <sky-key-info>\n        <sky-key-info-value>The key information</sky-key-info-value>\n      </sky-key-info>\n      <sky-key-info>\n        <sky-key-info-value>section highlights</sky-key-info-value>\n      </sky-key-info>\n      <sky-key-info>\n        <sky-key-info-value>important details</sky-key-info-value>\n      </sky-key-info>\n    </sky-page-summary-key-info>\n  </sky-page-summary>\n</div>\n\n<ul class=\"sky-list-unstyled\">\n  <li>\n    <sky-checkbox [(ngModel)]=\"showTitle\">\n      <sky-checkbox-label>Show title</sky-checkbox-label>\n    </sky-checkbox>\n  </li>\n  <li>\n    <sky-checkbox [(ngModel)]=\"showSubtitle\">\n      <sky-checkbox-label>Show subtitle</sky-checkbox-label>\n    </sky-checkbox>\n  </li>\n  <li>\n    <sky-checkbox [(ngModel)]=\"showImage\">\n      <sky-checkbox-label>Show image</sky-checkbox-label>\n    </sky-checkbox>\n  </li>\n  <li>\n    <sky-checkbox [(ngModel)]=\"showStatus\">\n      <sky-checkbox-label>Show record status</sky-checkbox-label>\n    </sky-checkbox>\n  </li>\n  <li>\n    <sky-checkbox [(ngModel)]=\"showKeyInfo\">\n      <sky-checkbox-label>Show key information</sky-checkbox-label>\n    </sky-checkbox>\n  </li>\n  <li>\n    <sky-checkbox [(ngModel)]=\"showContent\">\n      <sky-checkbox-label>Show arbitrary content</sky-checkbox-label>\n    </sky-checkbox>\n  </li>\n  <li>\n    <sky-checkbox [(ngModel)]=\"showAlert\">\n      <sky-checkbox-label>Show alert</sky-checkbox-label>\n    </sky-checkbox>\n  </li>\n</ul>\n`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}